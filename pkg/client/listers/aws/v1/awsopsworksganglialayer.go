/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1

import (
	v1 "github.com/trussle/terraform-operator/pkg/apis/aws/v1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// AwsOpsworksGangliaLayerLister helps list AwsOpsworksGangliaLayers.
type AwsOpsworksGangliaLayerLister interface {
	// List lists all AwsOpsworksGangliaLayers in the indexer.
	List(selector labels.Selector) (ret []*v1.AwsOpsworksGangliaLayer, err error)
	// AwsOpsworksGangliaLayers returns an object that can list and get AwsOpsworksGangliaLayers.
	AwsOpsworksGangliaLayers(namespace string) AwsOpsworksGangliaLayerNamespaceLister
	AwsOpsworksGangliaLayerListerExpansion
}

// awsOpsworksGangliaLayerLister implements the AwsOpsworksGangliaLayerLister interface.
type awsOpsworksGangliaLayerLister struct {
	indexer cache.Indexer
}

// NewAwsOpsworksGangliaLayerLister returns a new AwsOpsworksGangliaLayerLister.
func NewAwsOpsworksGangliaLayerLister(indexer cache.Indexer) AwsOpsworksGangliaLayerLister {
	return &awsOpsworksGangliaLayerLister{indexer: indexer}
}

// List lists all AwsOpsworksGangliaLayers in the indexer.
func (s *awsOpsworksGangliaLayerLister) List(selector labels.Selector) (ret []*v1.AwsOpsworksGangliaLayer, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.AwsOpsworksGangliaLayer))
	})
	return ret, err
}

// AwsOpsworksGangliaLayers returns an object that can list and get AwsOpsworksGangliaLayers.
func (s *awsOpsworksGangliaLayerLister) AwsOpsworksGangliaLayers(namespace string) AwsOpsworksGangliaLayerNamespaceLister {
	return awsOpsworksGangliaLayerNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// AwsOpsworksGangliaLayerNamespaceLister helps list and get AwsOpsworksGangliaLayers.
type AwsOpsworksGangliaLayerNamespaceLister interface {
	// List lists all AwsOpsworksGangliaLayers in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1.AwsOpsworksGangliaLayer, err error)
	// Get retrieves the AwsOpsworksGangliaLayer from the indexer for a given namespace and name.
	Get(name string) (*v1.AwsOpsworksGangliaLayer, error)
	AwsOpsworksGangliaLayerNamespaceListerExpansion
}

// awsOpsworksGangliaLayerNamespaceLister implements the AwsOpsworksGangliaLayerNamespaceLister
// interface.
type awsOpsworksGangliaLayerNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all AwsOpsworksGangliaLayers in the indexer for a given namespace.
func (s awsOpsworksGangliaLayerNamespaceLister) List(selector labels.Selector) (ret []*v1.AwsOpsworksGangliaLayer, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.AwsOpsworksGangliaLayer))
	})
	return ret, err
}

// Get retrieves the AwsOpsworksGangliaLayer from the indexer for a given namespace and name.
func (s awsOpsworksGangliaLayerNamespaceLister) Get(name string) (*v1.AwsOpsworksGangliaLayer, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1.Resource("awsopsworksganglialayer"), name)
	}
	return obj.(*v1.AwsOpsworksGangliaLayer), nil
}
