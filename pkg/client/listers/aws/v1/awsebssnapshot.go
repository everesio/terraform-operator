/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1

import (
	v1 "github.com/trussle/terraform-operator/pkg/apis/aws/v1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// AwsEbsSnapshotLister helps list AwsEbsSnapshots.
type AwsEbsSnapshotLister interface {
	// List lists all AwsEbsSnapshots in the indexer.
	List(selector labels.Selector) (ret []*v1.AwsEbsSnapshot, err error)
	// AwsEbsSnapshots returns an object that can list and get AwsEbsSnapshots.
	AwsEbsSnapshots(namespace string) AwsEbsSnapshotNamespaceLister
	AwsEbsSnapshotListerExpansion
}

// awsEbsSnapshotLister implements the AwsEbsSnapshotLister interface.
type awsEbsSnapshotLister struct {
	indexer cache.Indexer
}

// NewAwsEbsSnapshotLister returns a new AwsEbsSnapshotLister.
func NewAwsEbsSnapshotLister(indexer cache.Indexer) AwsEbsSnapshotLister {
	return &awsEbsSnapshotLister{indexer: indexer}
}

// List lists all AwsEbsSnapshots in the indexer.
func (s *awsEbsSnapshotLister) List(selector labels.Selector) (ret []*v1.AwsEbsSnapshot, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.AwsEbsSnapshot))
	})
	return ret, err
}

// AwsEbsSnapshots returns an object that can list and get AwsEbsSnapshots.
func (s *awsEbsSnapshotLister) AwsEbsSnapshots(namespace string) AwsEbsSnapshotNamespaceLister {
	return awsEbsSnapshotNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// AwsEbsSnapshotNamespaceLister helps list and get AwsEbsSnapshots.
type AwsEbsSnapshotNamespaceLister interface {
	// List lists all AwsEbsSnapshots in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1.AwsEbsSnapshot, err error)
	// Get retrieves the AwsEbsSnapshot from the indexer for a given namespace and name.
	Get(name string) (*v1.AwsEbsSnapshot, error)
	AwsEbsSnapshotNamespaceListerExpansion
}

// awsEbsSnapshotNamespaceLister implements the AwsEbsSnapshotNamespaceLister
// interface.
type awsEbsSnapshotNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all AwsEbsSnapshots in the indexer for a given namespace.
func (s awsEbsSnapshotNamespaceLister) List(selector labels.Selector) (ret []*v1.AwsEbsSnapshot, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.AwsEbsSnapshot))
	})
	return ret, err
}

// Get retrieves the AwsEbsSnapshot from the indexer for a given namespace and name.
func (s awsEbsSnapshotNamespaceLister) Get(name string) (*v1.AwsEbsSnapshot, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1.Resource("awsebssnapshot"), name)
	}
	return obj.(*v1.AwsEbsSnapshot), nil
}
