/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1

import (
	v1 "github.com/trussle/terraform-operator/pkg/apis/aws/v1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// AwsAlbLister helps list AwsAlbs.
type AwsAlbLister interface {
	// List lists all AwsAlbs in the indexer.
	List(selector labels.Selector) (ret []*v1.AwsAlb, err error)
	// AwsAlbs returns an object that can list and get AwsAlbs.
	AwsAlbs(namespace string) AwsAlbNamespaceLister
	AwsAlbListerExpansion
}

// awsAlbLister implements the AwsAlbLister interface.
type awsAlbLister struct {
	indexer cache.Indexer
}

// NewAwsAlbLister returns a new AwsAlbLister.
func NewAwsAlbLister(indexer cache.Indexer) AwsAlbLister {
	return &awsAlbLister{indexer: indexer}
}

// List lists all AwsAlbs in the indexer.
func (s *awsAlbLister) List(selector labels.Selector) (ret []*v1.AwsAlb, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.AwsAlb))
	})
	return ret, err
}

// AwsAlbs returns an object that can list and get AwsAlbs.
func (s *awsAlbLister) AwsAlbs(namespace string) AwsAlbNamespaceLister {
	return awsAlbNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// AwsAlbNamespaceLister helps list and get AwsAlbs.
type AwsAlbNamespaceLister interface {
	// List lists all AwsAlbs in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1.AwsAlb, err error)
	// Get retrieves the AwsAlb from the indexer for a given namespace and name.
	Get(name string) (*v1.AwsAlb, error)
	AwsAlbNamespaceListerExpansion
}

// awsAlbNamespaceLister implements the AwsAlbNamespaceLister
// interface.
type awsAlbNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all AwsAlbs in the indexer for a given namespace.
func (s awsAlbNamespaceLister) List(selector labels.Selector) (ret []*v1.AwsAlb, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.AwsAlb))
	})
	return ret, err
}

// Get retrieves the AwsAlb from the indexer for a given namespace and name.
func (s awsAlbNamespaceLister) Get(name string) (*v1.AwsAlb, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1.Resource("awsalb"), name)
	}
	return obj.(*v1.AwsAlb), nil
}
