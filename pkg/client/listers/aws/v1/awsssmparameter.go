/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1

import (
	v1 "github.com/trussle/terraform-operator/pkg/apis/aws/v1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// AwsSsmParameterLister helps list AwsSsmParameters.
type AwsSsmParameterLister interface {
	// List lists all AwsSsmParameters in the indexer.
	List(selector labels.Selector) (ret []*v1.AwsSsmParameter, err error)
	// AwsSsmParameters returns an object that can list and get AwsSsmParameters.
	AwsSsmParameters(namespace string) AwsSsmParameterNamespaceLister
	AwsSsmParameterListerExpansion
}

// awsSsmParameterLister implements the AwsSsmParameterLister interface.
type awsSsmParameterLister struct {
	indexer cache.Indexer
}

// NewAwsSsmParameterLister returns a new AwsSsmParameterLister.
func NewAwsSsmParameterLister(indexer cache.Indexer) AwsSsmParameterLister {
	return &awsSsmParameterLister{indexer: indexer}
}

// List lists all AwsSsmParameters in the indexer.
func (s *awsSsmParameterLister) List(selector labels.Selector) (ret []*v1.AwsSsmParameter, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.AwsSsmParameter))
	})
	return ret, err
}

// AwsSsmParameters returns an object that can list and get AwsSsmParameters.
func (s *awsSsmParameterLister) AwsSsmParameters(namespace string) AwsSsmParameterNamespaceLister {
	return awsSsmParameterNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// AwsSsmParameterNamespaceLister helps list and get AwsSsmParameters.
type AwsSsmParameterNamespaceLister interface {
	// List lists all AwsSsmParameters in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1.AwsSsmParameter, err error)
	// Get retrieves the AwsSsmParameter from the indexer for a given namespace and name.
	Get(name string) (*v1.AwsSsmParameter, error)
	AwsSsmParameterNamespaceListerExpansion
}

// awsSsmParameterNamespaceLister implements the AwsSsmParameterNamespaceLister
// interface.
type awsSsmParameterNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all AwsSsmParameters in the indexer for a given namespace.
func (s awsSsmParameterNamespaceLister) List(selector labels.Selector) (ret []*v1.AwsSsmParameter, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.AwsSsmParameter))
	})
	return ret, err
}

// Get retrieves the AwsSsmParameter from the indexer for a given namespace and name.
func (s awsSsmParameterNamespaceLister) Get(name string) (*v1.AwsSsmParameter, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1.Resource("awsssmparameter"), name)
	}
	return obj.(*v1.AwsSsmParameter), nil
}
