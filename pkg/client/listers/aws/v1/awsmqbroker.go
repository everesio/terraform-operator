/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1

import (
	v1 "github.com/trussle/terraform-operator/pkg/apis/aws/v1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// AwsMqBrokerLister helps list AwsMqBrokers.
type AwsMqBrokerLister interface {
	// List lists all AwsMqBrokers in the indexer.
	List(selector labels.Selector) (ret []*v1.AwsMqBroker, err error)
	// AwsMqBrokers returns an object that can list and get AwsMqBrokers.
	AwsMqBrokers(namespace string) AwsMqBrokerNamespaceLister
	AwsMqBrokerListerExpansion
}

// awsMqBrokerLister implements the AwsMqBrokerLister interface.
type awsMqBrokerLister struct {
	indexer cache.Indexer
}

// NewAwsMqBrokerLister returns a new AwsMqBrokerLister.
func NewAwsMqBrokerLister(indexer cache.Indexer) AwsMqBrokerLister {
	return &awsMqBrokerLister{indexer: indexer}
}

// List lists all AwsMqBrokers in the indexer.
func (s *awsMqBrokerLister) List(selector labels.Selector) (ret []*v1.AwsMqBroker, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.AwsMqBroker))
	})
	return ret, err
}

// AwsMqBrokers returns an object that can list and get AwsMqBrokers.
func (s *awsMqBrokerLister) AwsMqBrokers(namespace string) AwsMqBrokerNamespaceLister {
	return awsMqBrokerNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// AwsMqBrokerNamespaceLister helps list and get AwsMqBrokers.
type AwsMqBrokerNamespaceLister interface {
	// List lists all AwsMqBrokers in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1.AwsMqBroker, err error)
	// Get retrieves the AwsMqBroker from the indexer for a given namespace and name.
	Get(name string) (*v1.AwsMqBroker, error)
	AwsMqBrokerNamespaceListerExpansion
}

// awsMqBrokerNamespaceLister implements the AwsMqBrokerNamespaceLister
// interface.
type awsMqBrokerNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all AwsMqBrokers in the indexer for a given namespace.
func (s awsMqBrokerNamespaceLister) List(selector labels.Selector) (ret []*v1.AwsMqBroker, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.AwsMqBroker))
	})
	return ret, err
}

// Get retrieves the AwsMqBroker from the indexer for a given namespace and name.
func (s awsMqBrokerNamespaceLister) Get(name string) (*v1.AwsMqBroker, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1.Resource("awsmqbroker"), name)
	}
	return obj.(*v1.AwsMqBroker), nil
}
