/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1

import (
	v1 "github.com/trussle/terraform-operator/pkg/apis/aws/v1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// AwsRoute53HealthCheckLister helps list AwsRoute53HealthChecks.
type AwsRoute53HealthCheckLister interface {
	// List lists all AwsRoute53HealthChecks in the indexer.
	List(selector labels.Selector) (ret []*v1.AwsRoute53HealthCheck, err error)
	// AwsRoute53HealthChecks returns an object that can list and get AwsRoute53HealthChecks.
	AwsRoute53HealthChecks(namespace string) AwsRoute53HealthCheckNamespaceLister
	AwsRoute53HealthCheckListerExpansion
}

// awsRoute53HealthCheckLister implements the AwsRoute53HealthCheckLister interface.
type awsRoute53HealthCheckLister struct {
	indexer cache.Indexer
}

// NewAwsRoute53HealthCheckLister returns a new AwsRoute53HealthCheckLister.
func NewAwsRoute53HealthCheckLister(indexer cache.Indexer) AwsRoute53HealthCheckLister {
	return &awsRoute53HealthCheckLister{indexer: indexer}
}

// List lists all AwsRoute53HealthChecks in the indexer.
func (s *awsRoute53HealthCheckLister) List(selector labels.Selector) (ret []*v1.AwsRoute53HealthCheck, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.AwsRoute53HealthCheck))
	})
	return ret, err
}

// AwsRoute53HealthChecks returns an object that can list and get AwsRoute53HealthChecks.
func (s *awsRoute53HealthCheckLister) AwsRoute53HealthChecks(namespace string) AwsRoute53HealthCheckNamespaceLister {
	return awsRoute53HealthCheckNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// AwsRoute53HealthCheckNamespaceLister helps list and get AwsRoute53HealthChecks.
type AwsRoute53HealthCheckNamespaceLister interface {
	// List lists all AwsRoute53HealthChecks in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1.AwsRoute53HealthCheck, err error)
	// Get retrieves the AwsRoute53HealthCheck from the indexer for a given namespace and name.
	Get(name string) (*v1.AwsRoute53HealthCheck, error)
	AwsRoute53HealthCheckNamespaceListerExpansion
}

// awsRoute53HealthCheckNamespaceLister implements the AwsRoute53HealthCheckNamespaceLister
// interface.
type awsRoute53HealthCheckNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all AwsRoute53HealthChecks in the indexer for a given namespace.
func (s awsRoute53HealthCheckNamespaceLister) List(selector labels.Selector) (ret []*v1.AwsRoute53HealthCheck, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.AwsRoute53HealthCheck))
	})
	return ret, err
}

// Get retrieves the AwsRoute53HealthCheck from the indexer for a given namespace and name.
func (s awsRoute53HealthCheckNamespaceLister) Get(name string) (*v1.AwsRoute53HealthCheck, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1.Resource("awsroute53healthcheck"), name)
	}
	return obj.(*v1.AwsRoute53HealthCheck), nil
}
