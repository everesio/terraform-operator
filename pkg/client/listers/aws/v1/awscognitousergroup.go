/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1

import (
	v1 "github.com/trussle/terraform-operator/pkg/apis/aws/v1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// AwsCognitoUserGroupLister helps list AwsCognitoUserGroups.
type AwsCognitoUserGroupLister interface {
	// List lists all AwsCognitoUserGroups in the indexer.
	List(selector labels.Selector) (ret []*v1.AwsCognitoUserGroup, err error)
	// AwsCognitoUserGroups returns an object that can list and get AwsCognitoUserGroups.
	AwsCognitoUserGroups(namespace string) AwsCognitoUserGroupNamespaceLister
	AwsCognitoUserGroupListerExpansion
}

// awsCognitoUserGroupLister implements the AwsCognitoUserGroupLister interface.
type awsCognitoUserGroupLister struct {
	indexer cache.Indexer
}

// NewAwsCognitoUserGroupLister returns a new AwsCognitoUserGroupLister.
func NewAwsCognitoUserGroupLister(indexer cache.Indexer) AwsCognitoUserGroupLister {
	return &awsCognitoUserGroupLister{indexer: indexer}
}

// List lists all AwsCognitoUserGroups in the indexer.
func (s *awsCognitoUserGroupLister) List(selector labels.Selector) (ret []*v1.AwsCognitoUserGroup, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.AwsCognitoUserGroup))
	})
	return ret, err
}

// AwsCognitoUserGroups returns an object that can list and get AwsCognitoUserGroups.
func (s *awsCognitoUserGroupLister) AwsCognitoUserGroups(namespace string) AwsCognitoUserGroupNamespaceLister {
	return awsCognitoUserGroupNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// AwsCognitoUserGroupNamespaceLister helps list and get AwsCognitoUserGroups.
type AwsCognitoUserGroupNamespaceLister interface {
	// List lists all AwsCognitoUserGroups in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1.AwsCognitoUserGroup, err error)
	// Get retrieves the AwsCognitoUserGroup from the indexer for a given namespace and name.
	Get(name string) (*v1.AwsCognitoUserGroup, error)
	AwsCognitoUserGroupNamespaceListerExpansion
}

// awsCognitoUserGroupNamespaceLister implements the AwsCognitoUserGroupNamespaceLister
// interface.
type awsCognitoUserGroupNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all AwsCognitoUserGroups in the indexer for a given namespace.
func (s awsCognitoUserGroupNamespaceLister) List(selector labels.Selector) (ret []*v1.AwsCognitoUserGroup, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.AwsCognitoUserGroup))
	})
	return ret, err
}

// Get retrieves the AwsCognitoUserGroup from the indexer for a given namespace and name.
func (s awsCognitoUserGroupNamespaceLister) Get(name string) (*v1.AwsCognitoUserGroup, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1.Resource("awscognitousergroup"), name)
	}
	return obj.(*v1.AwsCognitoUserGroup), nil
}
