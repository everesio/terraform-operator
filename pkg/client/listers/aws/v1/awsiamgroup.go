/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1

import (
	v1 "github.com/trussle/terraform-operator/pkg/apis/aws/v1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// AwsIamGroupLister helps list AwsIamGroups.
type AwsIamGroupLister interface {
	// List lists all AwsIamGroups in the indexer.
	List(selector labels.Selector) (ret []*v1.AwsIamGroup, err error)
	// AwsIamGroups returns an object that can list and get AwsIamGroups.
	AwsIamGroups(namespace string) AwsIamGroupNamespaceLister
	AwsIamGroupListerExpansion
}

// awsIamGroupLister implements the AwsIamGroupLister interface.
type awsIamGroupLister struct {
	indexer cache.Indexer
}

// NewAwsIamGroupLister returns a new AwsIamGroupLister.
func NewAwsIamGroupLister(indexer cache.Indexer) AwsIamGroupLister {
	return &awsIamGroupLister{indexer: indexer}
}

// List lists all AwsIamGroups in the indexer.
func (s *awsIamGroupLister) List(selector labels.Selector) (ret []*v1.AwsIamGroup, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.AwsIamGroup))
	})
	return ret, err
}

// AwsIamGroups returns an object that can list and get AwsIamGroups.
func (s *awsIamGroupLister) AwsIamGroups(namespace string) AwsIamGroupNamespaceLister {
	return awsIamGroupNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// AwsIamGroupNamespaceLister helps list and get AwsIamGroups.
type AwsIamGroupNamespaceLister interface {
	// List lists all AwsIamGroups in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1.AwsIamGroup, err error)
	// Get retrieves the AwsIamGroup from the indexer for a given namespace and name.
	Get(name string) (*v1.AwsIamGroup, error)
	AwsIamGroupNamespaceListerExpansion
}

// awsIamGroupNamespaceLister implements the AwsIamGroupNamespaceLister
// interface.
type awsIamGroupNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all AwsIamGroups in the indexer for a given namespace.
func (s awsIamGroupNamespaceLister) List(selector labels.Selector) (ret []*v1.AwsIamGroup, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.AwsIamGroup))
	})
	return ret, err
}

// Get retrieves the AwsIamGroup from the indexer for a given namespace and name.
func (s awsIamGroupNamespaceLister) Get(name string) (*v1.AwsIamGroup, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1.Resource("awsiamgroup"), name)
	}
	return obj.(*v1.AwsIamGroup), nil
}
