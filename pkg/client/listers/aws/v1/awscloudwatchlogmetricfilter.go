/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1

import (
	v1 "github.com/trussle/terraform-operator/pkg/apis/aws/v1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// AwsCloudwatchLogMetricFilterLister helps list AwsCloudwatchLogMetricFilters.
type AwsCloudwatchLogMetricFilterLister interface {
	// List lists all AwsCloudwatchLogMetricFilters in the indexer.
	List(selector labels.Selector) (ret []*v1.AwsCloudwatchLogMetricFilter, err error)
	// AwsCloudwatchLogMetricFilters returns an object that can list and get AwsCloudwatchLogMetricFilters.
	AwsCloudwatchLogMetricFilters(namespace string) AwsCloudwatchLogMetricFilterNamespaceLister
	AwsCloudwatchLogMetricFilterListerExpansion
}

// awsCloudwatchLogMetricFilterLister implements the AwsCloudwatchLogMetricFilterLister interface.
type awsCloudwatchLogMetricFilterLister struct {
	indexer cache.Indexer
}

// NewAwsCloudwatchLogMetricFilterLister returns a new AwsCloudwatchLogMetricFilterLister.
func NewAwsCloudwatchLogMetricFilterLister(indexer cache.Indexer) AwsCloudwatchLogMetricFilterLister {
	return &awsCloudwatchLogMetricFilterLister{indexer: indexer}
}

// List lists all AwsCloudwatchLogMetricFilters in the indexer.
func (s *awsCloudwatchLogMetricFilterLister) List(selector labels.Selector) (ret []*v1.AwsCloudwatchLogMetricFilter, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.AwsCloudwatchLogMetricFilter))
	})
	return ret, err
}

// AwsCloudwatchLogMetricFilters returns an object that can list and get AwsCloudwatchLogMetricFilters.
func (s *awsCloudwatchLogMetricFilterLister) AwsCloudwatchLogMetricFilters(namespace string) AwsCloudwatchLogMetricFilterNamespaceLister {
	return awsCloudwatchLogMetricFilterNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// AwsCloudwatchLogMetricFilterNamespaceLister helps list and get AwsCloudwatchLogMetricFilters.
type AwsCloudwatchLogMetricFilterNamespaceLister interface {
	// List lists all AwsCloudwatchLogMetricFilters in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1.AwsCloudwatchLogMetricFilter, err error)
	// Get retrieves the AwsCloudwatchLogMetricFilter from the indexer for a given namespace and name.
	Get(name string) (*v1.AwsCloudwatchLogMetricFilter, error)
	AwsCloudwatchLogMetricFilterNamespaceListerExpansion
}

// awsCloudwatchLogMetricFilterNamespaceLister implements the AwsCloudwatchLogMetricFilterNamespaceLister
// interface.
type awsCloudwatchLogMetricFilterNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all AwsCloudwatchLogMetricFilters in the indexer for a given namespace.
func (s awsCloudwatchLogMetricFilterNamespaceLister) List(selector labels.Selector) (ret []*v1.AwsCloudwatchLogMetricFilter, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.AwsCloudwatchLogMetricFilter))
	})
	return ret, err
}

// Get retrieves the AwsCloudwatchLogMetricFilter from the indexer for a given namespace and name.
func (s awsCloudwatchLogMetricFilterNamespaceLister) Get(name string) (*v1.AwsCloudwatchLogMetricFilter, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1.Resource("awscloudwatchlogmetricfilter"), name)
	}
	return obj.(*v1.AwsCloudwatchLogMetricFilter), nil
}
