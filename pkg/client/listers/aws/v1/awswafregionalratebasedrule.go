/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1

import (
	v1 "github.com/trussle/terraform-operator/pkg/apis/aws/v1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// AwsWafregionalRateBasedRuleLister helps list AwsWafregionalRateBasedRules.
type AwsWafregionalRateBasedRuleLister interface {
	// List lists all AwsWafregionalRateBasedRules in the indexer.
	List(selector labels.Selector) (ret []*v1.AwsWafregionalRateBasedRule, err error)
	// AwsWafregionalRateBasedRules returns an object that can list and get AwsWafregionalRateBasedRules.
	AwsWafregionalRateBasedRules(namespace string) AwsWafregionalRateBasedRuleNamespaceLister
	AwsWafregionalRateBasedRuleListerExpansion
}

// awsWafregionalRateBasedRuleLister implements the AwsWafregionalRateBasedRuleLister interface.
type awsWafregionalRateBasedRuleLister struct {
	indexer cache.Indexer
}

// NewAwsWafregionalRateBasedRuleLister returns a new AwsWafregionalRateBasedRuleLister.
func NewAwsWafregionalRateBasedRuleLister(indexer cache.Indexer) AwsWafregionalRateBasedRuleLister {
	return &awsWafregionalRateBasedRuleLister{indexer: indexer}
}

// List lists all AwsWafregionalRateBasedRules in the indexer.
func (s *awsWafregionalRateBasedRuleLister) List(selector labels.Selector) (ret []*v1.AwsWafregionalRateBasedRule, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.AwsWafregionalRateBasedRule))
	})
	return ret, err
}

// AwsWafregionalRateBasedRules returns an object that can list and get AwsWafregionalRateBasedRules.
func (s *awsWafregionalRateBasedRuleLister) AwsWafregionalRateBasedRules(namespace string) AwsWafregionalRateBasedRuleNamespaceLister {
	return awsWafregionalRateBasedRuleNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// AwsWafregionalRateBasedRuleNamespaceLister helps list and get AwsWafregionalRateBasedRules.
type AwsWafregionalRateBasedRuleNamespaceLister interface {
	// List lists all AwsWafregionalRateBasedRules in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1.AwsWafregionalRateBasedRule, err error)
	// Get retrieves the AwsWafregionalRateBasedRule from the indexer for a given namespace and name.
	Get(name string) (*v1.AwsWafregionalRateBasedRule, error)
	AwsWafregionalRateBasedRuleNamespaceListerExpansion
}

// awsWafregionalRateBasedRuleNamespaceLister implements the AwsWafregionalRateBasedRuleNamespaceLister
// interface.
type awsWafregionalRateBasedRuleNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all AwsWafregionalRateBasedRules in the indexer for a given namespace.
func (s awsWafregionalRateBasedRuleNamespaceLister) List(selector labels.Selector) (ret []*v1.AwsWafregionalRateBasedRule, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.AwsWafregionalRateBasedRule))
	})
	return ret, err
}

// Get retrieves the AwsWafregionalRateBasedRule from the indexer for a given namespace and name.
func (s awsWafregionalRateBasedRuleNamespaceLister) Get(name string) (*v1.AwsWafregionalRateBasedRule, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1.Resource("awswafregionalratebasedrule"), name)
	}
	return obj.(*v1.AwsWafregionalRateBasedRule), nil
}
