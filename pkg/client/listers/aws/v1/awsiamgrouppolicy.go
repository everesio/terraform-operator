/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1

import (
	v1 "github.com/trussle/terraform-operator/pkg/apis/aws/v1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// AwsIamGroupPolicyLister helps list AwsIamGroupPolicies.
type AwsIamGroupPolicyLister interface {
	// List lists all AwsIamGroupPolicies in the indexer.
	List(selector labels.Selector) (ret []*v1.AwsIamGroupPolicy, err error)
	// AwsIamGroupPolicies returns an object that can list and get AwsIamGroupPolicies.
	AwsIamGroupPolicies(namespace string) AwsIamGroupPolicyNamespaceLister
	AwsIamGroupPolicyListerExpansion
}

// awsIamGroupPolicyLister implements the AwsIamGroupPolicyLister interface.
type awsIamGroupPolicyLister struct {
	indexer cache.Indexer
}

// NewAwsIamGroupPolicyLister returns a new AwsIamGroupPolicyLister.
func NewAwsIamGroupPolicyLister(indexer cache.Indexer) AwsIamGroupPolicyLister {
	return &awsIamGroupPolicyLister{indexer: indexer}
}

// List lists all AwsIamGroupPolicies in the indexer.
func (s *awsIamGroupPolicyLister) List(selector labels.Selector) (ret []*v1.AwsIamGroupPolicy, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.AwsIamGroupPolicy))
	})
	return ret, err
}

// AwsIamGroupPolicies returns an object that can list and get AwsIamGroupPolicies.
func (s *awsIamGroupPolicyLister) AwsIamGroupPolicies(namespace string) AwsIamGroupPolicyNamespaceLister {
	return awsIamGroupPolicyNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// AwsIamGroupPolicyNamespaceLister helps list and get AwsIamGroupPolicies.
type AwsIamGroupPolicyNamespaceLister interface {
	// List lists all AwsIamGroupPolicies in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1.AwsIamGroupPolicy, err error)
	// Get retrieves the AwsIamGroupPolicy from the indexer for a given namespace and name.
	Get(name string) (*v1.AwsIamGroupPolicy, error)
	AwsIamGroupPolicyNamespaceListerExpansion
}

// awsIamGroupPolicyNamespaceLister implements the AwsIamGroupPolicyNamespaceLister
// interface.
type awsIamGroupPolicyNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all AwsIamGroupPolicies in the indexer for a given namespace.
func (s awsIamGroupPolicyNamespaceLister) List(selector labels.Selector) (ret []*v1.AwsIamGroupPolicy, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.AwsIamGroupPolicy))
	})
	return ret, err
}

// Get retrieves the AwsIamGroupPolicy from the indexer for a given namespace and name.
func (s awsIamGroupPolicyNamespaceLister) Get(name string) (*v1.AwsIamGroupPolicy, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1.Resource("awsiamgrouppolicy"), name)
	}
	return obj.(*v1.AwsIamGroupPolicy), nil
}
