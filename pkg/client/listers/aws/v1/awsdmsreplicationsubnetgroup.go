/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1

import (
	v1 "github.com/trussle/terraform-operator/pkg/apis/aws/v1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// AwsDmsReplicationSubnetGroupLister helps list AwsDmsReplicationSubnetGroups.
type AwsDmsReplicationSubnetGroupLister interface {
	// List lists all AwsDmsReplicationSubnetGroups in the indexer.
	List(selector labels.Selector) (ret []*v1.AwsDmsReplicationSubnetGroup, err error)
	// AwsDmsReplicationSubnetGroups returns an object that can list and get AwsDmsReplicationSubnetGroups.
	AwsDmsReplicationSubnetGroups(namespace string) AwsDmsReplicationSubnetGroupNamespaceLister
	AwsDmsReplicationSubnetGroupListerExpansion
}

// awsDmsReplicationSubnetGroupLister implements the AwsDmsReplicationSubnetGroupLister interface.
type awsDmsReplicationSubnetGroupLister struct {
	indexer cache.Indexer
}

// NewAwsDmsReplicationSubnetGroupLister returns a new AwsDmsReplicationSubnetGroupLister.
func NewAwsDmsReplicationSubnetGroupLister(indexer cache.Indexer) AwsDmsReplicationSubnetGroupLister {
	return &awsDmsReplicationSubnetGroupLister{indexer: indexer}
}

// List lists all AwsDmsReplicationSubnetGroups in the indexer.
func (s *awsDmsReplicationSubnetGroupLister) List(selector labels.Selector) (ret []*v1.AwsDmsReplicationSubnetGroup, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.AwsDmsReplicationSubnetGroup))
	})
	return ret, err
}

// AwsDmsReplicationSubnetGroups returns an object that can list and get AwsDmsReplicationSubnetGroups.
func (s *awsDmsReplicationSubnetGroupLister) AwsDmsReplicationSubnetGroups(namespace string) AwsDmsReplicationSubnetGroupNamespaceLister {
	return awsDmsReplicationSubnetGroupNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// AwsDmsReplicationSubnetGroupNamespaceLister helps list and get AwsDmsReplicationSubnetGroups.
type AwsDmsReplicationSubnetGroupNamespaceLister interface {
	// List lists all AwsDmsReplicationSubnetGroups in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1.AwsDmsReplicationSubnetGroup, err error)
	// Get retrieves the AwsDmsReplicationSubnetGroup from the indexer for a given namespace and name.
	Get(name string) (*v1.AwsDmsReplicationSubnetGroup, error)
	AwsDmsReplicationSubnetGroupNamespaceListerExpansion
}

// awsDmsReplicationSubnetGroupNamespaceLister implements the AwsDmsReplicationSubnetGroupNamespaceLister
// interface.
type awsDmsReplicationSubnetGroupNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all AwsDmsReplicationSubnetGroups in the indexer for a given namespace.
func (s awsDmsReplicationSubnetGroupNamespaceLister) List(selector labels.Selector) (ret []*v1.AwsDmsReplicationSubnetGroup, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.AwsDmsReplicationSubnetGroup))
	})
	return ret, err
}

// Get retrieves the AwsDmsReplicationSubnetGroup from the indexer for a given namespace and name.
func (s awsDmsReplicationSubnetGroupNamespaceLister) Get(name string) (*v1.AwsDmsReplicationSubnetGroup, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1.Resource("awsdmsreplicationsubnetgroup"), name)
	}
	return obj.(*v1.AwsDmsReplicationSubnetGroup), nil
}
