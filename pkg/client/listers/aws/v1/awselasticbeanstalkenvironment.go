/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1

import (
	v1 "github.com/trussle/terraform-operator/pkg/apis/aws/v1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// AwsElasticBeanstalkEnvironmentLister helps list AwsElasticBeanstalkEnvironments.
type AwsElasticBeanstalkEnvironmentLister interface {
	// List lists all AwsElasticBeanstalkEnvironments in the indexer.
	List(selector labels.Selector) (ret []*v1.AwsElasticBeanstalkEnvironment, err error)
	// AwsElasticBeanstalkEnvironments returns an object that can list and get AwsElasticBeanstalkEnvironments.
	AwsElasticBeanstalkEnvironments(namespace string) AwsElasticBeanstalkEnvironmentNamespaceLister
	AwsElasticBeanstalkEnvironmentListerExpansion
}

// awsElasticBeanstalkEnvironmentLister implements the AwsElasticBeanstalkEnvironmentLister interface.
type awsElasticBeanstalkEnvironmentLister struct {
	indexer cache.Indexer
}

// NewAwsElasticBeanstalkEnvironmentLister returns a new AwsElasticBeanstalkEnvironmentLister.
func NewAwsElasticBeanstalkEnvironmentLister(indexer cache.Indexer) AwsElasticBeanstalkEnvironmentLister {
	return &awsElasticBeanstalkEnvironmentLister{indexer: indexer}
}

// List lists all AwsElasticBeanstalkEnvironments in the indexer.
func (s *awsElasticBeanstalkEnvironmentLister) List(selector labels.Selector) (ret []*v1.AwsElasticBeanstalkEnvironment, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.AwsElasticBeanstalkEnvironment))
	})
	return ret, err
}

// AwsElasticBeanstalkEnvironments returns an object that can list and get AwsElasticBeanstalkEnvironments.
func (s *awsElasticBeanstalkEnvironmentLister) AwsElasticBeanstalkEnvironments(namespace string) AwsElasticBeanstalkEnvironmentNamespaceLister {
	return awsElasticBeanstalkEnvironmentNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// AwsElasticBeanstalkEnvironmentNamespaceLister helps list and get AwsElasticBeanstalkEnvironments.
type AwsElasticBeanstalkEnvironmentNamespaceLister interface {
	// List lists all AwsElasticBeanstalkEnvironments in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1.AwsElasticBeanstalkEnvironment, err error)
	// Get retrieves the AwsElasticBeanstalkEnvironment from the indexer for a given namespace and name.
	Get(name string) (*v1.AwsElasticBeanstalkEnvironment, error)
	AwsElasticBeanstalkEnvironmentNamespaceListerExpansion
}

// awsElasticBeanstalkEnvironmentNamespaceLister implements the AwsElasticBeanstalkEnvironmentNamespaceLister
// interface.
type awsElasticBeanstalkEnvironmentNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all AwsElasticBeanstalkEnvironments in the indexer for a given namespace.
func (s awsElasticBeanstalkEnvironmentNamespaceLister) List(selector labels.Selector) (ret []*v1.AwsElasticBeanstalkEnvironment, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.AwsElasticBeanstalkEnvironment))
	})
	return ret, err
}

// Get retrieves the AwsElasticBeanstalkEnvironment from the indexer for a given namespace and name.
func (s awsElasticBeanstalkEnvironmentNamespaceLister) Get(name string) (*v1.AwsElasticBeanstalkEnvironment, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1.Resource("awselasticbeanstalkenvironment"), name)
	}
	return obj.(*v1.AwsElasticBeanstalkEnvironment), nil
}
