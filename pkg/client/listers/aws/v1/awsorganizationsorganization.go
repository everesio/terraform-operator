/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1

import (
	v1 "github.com/trussle/terraform-operator/pkg/apis/aws/v1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// AwsOrganizationsOrganizationLister helps list AwsOrganizationsOrganizations.
type AwsOrganizationsOrganizationLister interface {
	// List lists all AwsOrganizationsOrganizations in the indexer.
	List(selector labels.Selector) (ret []*v1.AwsOrganizationsOrganization, err error)
	// AwsOrganizationsOrganizations returns an object that can list and get AwsOrganizationsOrganizations.
	AwsOrganizationsOrganizations(namespace string) AwsOrganizationsOrganizationNamespaceLister
	AwsOrganizationsOrganizationListerExpansion
}

// awsOrganizationsOrganizationLister implements the AwsOrganizationsOrganizationLister interface.
type awsOrganizationsOrganizationLister struct {
	indexer cache.Indexer
}

// NewAwsOrganizationsOrganizationLister returns a new AwsOrganizationsOrganizationLister.
func NewAwsOrganizationsOrganizationLister(indexer cache.Indexer) AwsOrganizationsOrganizationLister {
	return &awsOrganizationsOrganizationLister{indexer: indexer}
}

// List lists all AwsOrganizationsOrganizations in the indexer.
func (s *awsOrganizationsOrganizationLister) List(selector labels.Selector) (ret []*v1.AwsOrganizationsOrganization, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.AwsOrganizationsOrganization))
	})
	return ret, err
}

// AwsOrganizationsOrganizations returns an object that can list and get AwsOrganizationsOrganizations.
func (s *awsOrganizationsOrganizationLister) AwsOrganizationsOrganizations(namespace string) AwsOrganizationsOrganizationNamespaceLister {
	return awsOrganizationsOrganizationNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// AwsOrganizationsOrganizationNamespaceLister helps list and get AwsOrganizationsOrganizations.
type AwsOrganizationsOrganizationNamespaceLister interface {
	// List lists all AwsOrganizationsOrganizations in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1.AwsOrganizationsOrganization, err error)
	// Get retrieves the AwsOrganizationsOrganization from the indexer for a given namespace and name.
	Get(name string) (*v1.AwsOrganizationsOrganization, error)
	AwsOrganizationsOrganizationNamespaceListerExpansion
}

// awsOrganizationsOrganizationNamespaceLister implements the AwsOrganizationsOrganizationNamespaceLister
// interface.
type awsOrganizationsOrganizationNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all AwsOrganizationsOrganizations in the indexer for a given namespace.
func (s awsOrganizationsOrganizationNamespaceLister) List(selector labels.Selector) (ret []*v1.AwsOrganizationsOrganization, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.AwsOrganizationsOrganization))
	})
	return ret, err
}

// Get retrieves the AwsOrganizationsOrganization from the indexer for a given namespace and name.
func (s awsOrganizationsOrganizationNamespaceLister) Get(name string) (*v1.AwsOrganizationsOrganization, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1.Resource("awsorganizationsorganization"), name)
	}
	return obj.(*v1.AwsOrganizationsOrganization), nil
}
