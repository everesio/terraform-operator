/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1

import (
	v1 "github.com/trussle/terraform-operator/pkg/apis/aws/v1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// AwsAcmCertificateLister helps list AwsAcmCertificates.
type AwsAcmCertificateLister interface {
	// List lists all AwsAcmCertificates in the indexer.
	List(selector labels.Selector) (ret []*v1.AwsAcmCertificate, err error)
	// AwsAcmCertificates returns an object that can list and get AwsAcmCertificates.
	AwsAcmCertificates(namespace string) AwsAcmCertificateNamespaceLister
	AwsAcmCertificateListerExpansion
}

// awsAcmCertificateLister implements the AwsAcmCertificateLister interface.
type awsAcmCertificateLister struct {
	indexer cache.Indexer
}

// NewAwsAcmCertificateLister returns a new AwsAcmCertificateLister.
func NewAwsAcmCertificateLister(indexer cache.Indexer) AwsAcmCertificateLister {
	return &awsAcmCertificateLister{indexer: indexer}
}

// List lists all AwsAcmCertificates in the indexer.
func (s *awsAcmCertificateLister) List(selector labels.Selector) (ret []*v1.AwsAcmCertificate, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.AwsAcmCertificate))
	})
	return ret, err
}

// AwsAcmCertificates returns an object that can list and get AwsAcmCertificates.
func (s *awsAcmCertificateLister) AwsAcmCertificates(namespace string) AwsAcmCertificateNamespaceLister {
	return awsAcmCertificateNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// AwsAcmCertificateNamespaceLister helps list and get AwsAcmCertificates.
type AwsAcmCertificateNamespaceLister interface {
	// List lists all AwsAcmCertificates in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1.AwsAcmCertificate, err error)
	// Get retrieves the AwsAcmCertificate from the indexer for a given namespace and name.
	Get(name string) (*v1.AwsAcmCertificate, error)
	AwsAcmCertificateNamespaceListerExpansion
}

// awsAcmCertificateNamespaceLister implements the AwsAcmCertificateNamespaceLister
// interface.
type awsAcmCertificateNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all AwsAcmCertificates in the indexer for a given namespace.
func (s awsAcmCertificateNamespaceLister) List(selector labels.Selector) (ret []*v1.AwsAcmCertificate, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.AwsAcmCertificate))
	})
	return ret, err
}

// Get retrieves the AwsAcmCertificate from the indexer for a given namespace and name.
func (s awsAcmCertificateNamespaceLister) Get(name string) (*v1.AwsAcmCertificate, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1.Resource("awsacmcertificate"), name)
	}
	return obj.(*v1.AwsAcmCertificate), nil
}
