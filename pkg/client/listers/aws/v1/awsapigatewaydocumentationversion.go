/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1

import (
	v1 "github.com/trussle/terraform-operator/pkg/apis/aws/v1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// AwsApiGatewayDocumentationVersionLister helps list AwsApiGatewayDocumentationVersions.
type AwsApiGatewayDocumentationVersionLister interface {
	// List lists all AwsApiGatewayDocumentationVersions in the indexer.
	List(selector labels.Selector) (ret []*v1.AwsApiGatewayDocumentationVersion, err error)
	// AwsApiGatewayDocumentationVersions returns an object that can list and get AwsApiGatewayDocumentationVersions.
	AwsApiGatewayDocumentationVersions(namespace string) AwsApiGatewayDocumentationVersionNamespaceLister
	AwsApiGatewayDocumentationVersionListerExpansion
}

// awsApiGatewayDocumentationVersionLister implements the AwsApiGatewayDocumentationVersionLister interface.
type awsApiGatewayDocumentationVersionLister struct {
	indexer cache.Indexer
}

// NewAwsApiGatewayDocumentationVersionLister returns a new AwsApiGatewayDocumentationVersionLister.
func NewAwsApiGatewayDocumentationVersionLister(indexer cache.Indexer) AwsApiGatewayDocumentationVersionLister {
	return &awsApiGatewayDocumentationVersionLister{indexer: indexer}
}

// List lists all AwsApiGatewayDocumentationVersions in the indexer.
func (s *awsApiGatewayDocumentationVersionLister) List(selector labels.Selector) (ret []*v1.AwsApiGatewayDocumentationVersion, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.AwsApiGatewayDocumentationVersion))
	})
	return ret, err
}

// AwsApiGatewayDocumentationVersions returns an object that can list and get AwsApiGatewayDocumentationVersions.
func (s *awsApiGatewayDocumentationVersionLister) AwsApiGatewayDocumentationVersions(namespace string) AwsApiGatewayDocumentationVersionNamespaceLister {
	return awsApiGatewayDocumentationVersionNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// AwsApiGatewayDocumentationVersionNamespaceLister helps list and get AwsApiGatewayDocumentationVersions.
type AwsApiGatewayDocumentationVersionNamespaceLister interface {
	// List lists all AwsApiGatewayDocumentationVersions in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1.AwsApiGatewayDocumentationVersion, err error)
	// Get retrieves the AwsApiGatewayDocumentationVersion from the indexer for a given namespace and name.
	Get(name string) (*v1.AwsApiGatewayDocumentationVersion, error)
	AwsApiGatewayDocumentationVersionNamespaceListerExpansion
}

// awsApiGatewayDocumentationVersionNamespaceLister implements the AwsApiGatewayDocumentationVersionNamespaceLister
// interface.
type awsApiGatewayDocumentationVersionNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all AwsApiGatewayDocumentationVersions in the indexer for a given namespace.
func (s awsApiGatewayDocumentationVersionNamespaceLister) List(selector labels.Selector) (ret []*v1.AwsApiGatewayDocumentationVersion, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.AwsApiGatewayDocumentationVersion))
	})
	return ret, err
}

// Get retrieves the AwsApiGatewayDocumentationVersion from the indexer for a given namespace and name.
func (s awsApiGatewayDocumentationVersionNamespaceLister) Get(name string) (*v1.AwsApiGatewayDocumentationVersion, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1.Resource("awsapigatewaydocumentationversion"), name)
	}
	return obj.(*v1.AwsApiGatewayDocumentationVersion), nil
}
