/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1

import (
	v1 "github.com/trussle/terraform-operator/pkg/apis/aws/v1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// AwsBatchComputeEnvironmentLister helps list AwsBatchComputeEnvironments.
type AwsBatchComputeEnvironmentLister interface {
	// List lists all AwsBatchComputeEnvironments in the indexer.
	List(selector labels.Selector) (ret []*v1.AwsBatchComputeEnvironment, err error)
	// AwsBatchComputeEnvironments returns an object that can list and get AwsBatchComputeEnvironments.
	AwsBatchComputeEnvironments(namespace string) AwsBatchComputeEnvironmentNamespaceLister
	AwsBatchComputeEnvironmentListerExpansion
}

// awsBatchComputeEnvironmentLister implements the AwsBatchComputeEnvironmentLister interface.
type awsBatchComputeEnvironmentLister struct {
	indexer cache.Indexer
}

// NewAwsBatchComputeEnvironmentLister returns a new AwsBatchComputeEnvironmentLister.
func NewAwsBatchComputeEnvironmentLister(indexer cache.Indexer) AwsBatchComputeEnvironmentLister {
	return &awsBatchComputeEnvironmentLister{indexer: indexer}
}

// List lists all AwsBatchComputeEnvironments in the indexer.
func (s *awsBatchComputeEnvironmentLister) List(selector labels.Selector) (ret []*v1.AwsBatchComputeEnvironment, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.AwsBatchComputeEnvironment))
	})
	return ret, err
}

// AwsBatchComputeEnvironments returns an object that can list and get AwsBatchComputeEnvironments.
func (s *awsBatchComputeEnvironmentLister) AwsBatchComputeEnvironments(namespace string) AwsBatchComputeEnvironmentNamespaceLister {
	return awsBatchComputeEnvironmentNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// AwsBatchComputeEnvironmentNamespaceLister helps list and get AwsBatchComputeEnvironments.
type AwsBatchComputeEnvironmentNamespaceLister interface {
	// List lists all AwsBatchComputeEnvironments in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1.AwsBatchComputeEnvironment, err error)
	// Get retrieves the AwsBatchComputeEnvironment from the indexer for a given namespace and name.
	Get(name string) (*v1.AwsBatchComputeEnvironment, error)
	AwsBatchComputeEnvironmentNamespaceListerExpansion
}

// awsBatchComputeEnvironmentNamespaceLister implements the AwsBatchComputeEnvironmentNamespaceLister
// interface.
type awsBatchComputeEnvironmentNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all AwsBatchComputeEnvironments in the indexer for a given namespace.
func (s awsBatchComputeEnvironmentNamespaceLister) List(selector labels.Selector) (ret []*v1.AwsBatchComputeEnvironment, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.AwsBatchComputeEnvironment))
	})
	return ret, err
}

// Get retrieves the AwsBatchComputeEnvironment from the indexer for a given namespace and name.
func (s awsBatchComputeEnvironmentNamespaceLister) Get(name string) (*v1.AwsBatchComputeEnvironment, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1.Resource("awsbatchcomputeenvironment"), name)
	}
	return obj.(*v1.AwsBatchComputeEnvironment), nil
}
