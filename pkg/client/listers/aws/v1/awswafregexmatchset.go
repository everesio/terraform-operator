/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1

import (
	v1 "github.com/trussle/terraform-operator/pkg/apis/aws/v1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// AwsWafRegexMatchSetLister helps list AwsWafRegexMatchSets.
type AwsWafRegexMatchSetLister interface {
	// List lists all AwsWafRegexMatchSets in the indexer.
	List(selector labels.Selector) (ret []*v1.AwsWafRegexMatchSet, err error)
	// AwsWafRegexMatchSets returns an object that can list and get AwsWafRegexMatchSets.
	AwsWafRegexMatchSets(namespace string) AwsWafRegexMatchSetNamespaceLister
	AwsWafRegexMatchSetListerExpansion
}

// awsWafRegexMatchSetLister implements the AwsWafRegexMatchSetLister interface.
type awsWafRegexMatchSetLister struct {
	indexer cache.Indexer
}

// NewAwsWafRegexMatchSetLister returns a new AwsWafRegexMatchSetLister.
func NewAwsWafRegexMatchSetLister(indexer cache.Indexer) AwsWafRegexMatchSetLister {
	return &awsWafRegexMatchSetLister{indexer: indexer}
}

// List lists all AwsWafRegexMatchSets in the indexer.
func (s *awsWafRegexMatchSetLister) List(selector labels.Selector) (ret []*v1.AwsWafRegexMatchSet, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.AwsWafRegexMatchSet))
	})
	return ret, err
}

// AwsWafRegexMatchSets returns an object that can list and get AwsWafRegexMatchSets.
func (s *awsWafRegexMatchSetLister) AwsWafRegexMatchSets(namespace string) AwsWafRegexMatchSetNamespaceLister {
	return awsWafRegexMatchSetNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// AwsWafRegexMatchSetNamespaceLister helps list and get AwsWafRegexMatchSets.
type AwsWafRegexMatchSetNamespaceLister interface {
	// List lists all AwsWafRegexMatchSets in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1.AwsWafRegexMatchSet, err error)
	// Get retrieves the AwsWafRegexMatchSet from the indexer for a given namespace and name.
	Get(name string) (*v1.AwsWafRegexMatchSet, error)
	AwsWafRegexMatchSetNamespaceListerExpansion
}

// awsWafRegexMatchSetNamespaceLister implements the AwsWafRegexMatchSetNamespaceLister
// interface.
type awsWafRegexMatchSetNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all AwsWafRegexMatchSets in the indexer for a given namespace.
func (s awsWafRegexMatchSetNamespaceLister) List(selector labels.Selector) (ret []*v1.AwsWafRegexMatchSet, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.AwsWafRegexMatchSet))
	})
	return ret, err
}

// Get retrieves the AwsWafRegexMatchSet from the indexer for a given namespace and name.
func (s awsWafRegexMatchSetNamespaceLister) Get(name string) (*v1.AwsWafRegexMatchSet, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1.Resource("awswafregexmatchset"), name)
	}
	return obj.(*v1.AwsWafRegexMatchSet), nil
}
