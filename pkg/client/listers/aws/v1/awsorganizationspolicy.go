/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1

import (
	v1 "github.com/trussle/terraform-operator/pkg/apis/aws/v1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// AwsOrganizationsPolicyLister helps list AwsOrganizationsPolicies.
type AwsOrganizationsPolicyLister interface {
	// List lists all AwsOrganizationsPolicies in the indexer.
	List(selector labels.Selector) (ret []*v1.AwsOrganizationsPolicy, err error)
	// AwsOrganizationsPolicies returns an object that can list and get AwsOrganizationsPolicies.
	AwsOrganizationsPolicies(namespace string) AwsOrganizationsPolicyNamespaceLister
	AwsOrganizationsPolicyListerExpansion
}

// awsOrganizationsPolicyLister implements the AwsOrganizationsPolicyLister interface.
type awsOrganizationsPolicyLister struct {
	indexer cache.Indexer
}

// NewAwsOrganizationsPolicyLister returns a new AwsOrganizationsPolicyLister.
func NewAwsOrganizationsPolicyLister(indexer cache.Indexer) AwsOrganizationsPolicyLister {
	return &awsOrganizationsPolicyLister{indexer: indexer}
}

// List lists all AwsOrganizationsPolicies in the indexer.
func (s *awsOrganizationsPolicyLister) List(selector labels.Selector) (ret []*v1.AwsOrganizationsPolicy, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.AwsOrganizationsPolicy))
	})
	return ret, err
}

// AwsOrganizationsPolicies returns an object that can list and get AwsOrganizationsPolicies.
func (s *awsOrganizationsPolicyLister) AwsOrganizationsPolicies(namespace string) AwsOrganizationsPolicyNamespaceLister {
	return awsOrganizationsPolicyNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// AwsOrganizationsPolicyNamespaceLister helps list and get AwsOrganizationsPolicies.
type AwsOrganizationsPolicyNamespaceLister interface {
	// List lists all AwsOrganizationsPolicies in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1.AwsOrganizationsPolicy, err error)
	// Get retrieves the AwsOrganizationsPolicy from the indexer for a given namespace and name.
	Get(name string) (*v1.AwsOrganizationsPolicy, error)
	AwsOrganizationsPolicyNamespaceListerExpansion
}

// awsOrganizationsPolicyNamespaceLister implements the AwsOrganizationsPolicyNamespaceLister
// interface.
type awsOrganizationsPolicyNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all AwsOrganizationsPolicies in the indexer for a given namespace.
func (s awsOrganizationsPolicyNamespaceLister) List(selector labels.Selector) (ret []*v1.AwsOrganizationsPolicy, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.AwsOrganizationsPolicy))
	})
	return ret, err
}

// Get retrieves the AwsOrganizationsPolicy from the indexer for a given namespace and name.
func (s awsOrganizationsPolicyNamespaceLister) Get(name string) (*v1.AwsOrganizationsPolicy, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1.Resource("awsorganizationspolicy"), name)
	}
	return obj.(*v1.AwsOrganizationsPolicy), nil
}
