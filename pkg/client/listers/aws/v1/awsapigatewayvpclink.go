/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1

import (
	v1 "github.com/trussle/terraform-operator/pkg/apis/aws/v1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// AwsApiGatewayVpcLinkLister helps list AwsApiGatewayVpcLinks.
type AwsApiGatewayVpcLinkLister interface {
	// List lists all AwsApiGatewayVpcLinks in the indexer.
	List(selector labels.Selector) (ret []*v1.AwsApiGatewayVpcLink, err error)
	// AwsApiGatewayVpcLinks returns an object that can list and get AwsApiGatewayVpcLinks.
	AwsApiGatewayVpcLinks(namespace string) AwsApiGatewayVpcLinkNamespaceLister
	AwsApiGatewayVpcLinkListerExpansion
}

// awsApiGatewayVpcLinkLister implements the AwsApiGatewayVpcLinkLister interface.
type awsApiGatewayVpcLinkLister struct {
	indexer cache.Indexer
}

// NewAwsApiGatewayVpcLinkLister returns a new AwsApiGatewayVpcLinkLister.
func NewAwsApiGatewayVpcLinkLister(indexer cache.Indexer) AwsApiGatewayVpcLinkLister {
	return &awsApiGatewayVpcLinkLister{indexer: indexer}
}

// List lists all AwsApiGatewayVpcLinks in the indexer.
func (s *awsApiGatewayVpcLinkLister) List(selector labels.Selector) (ret []*v1.AwsApiGatewayVpcLink, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.AwsApiGatewayVpcLink))
	})
	return ret, err
}

// AwsApiGatewayVpcLinks returns an object that can list and get AwsApiGatewayVpcLinks.
func (s *awsApiGatewayVpcLinkLister) AwsApiGatewayVpcLinks(namespace string) AwsApiGatewayVpcLinkNamespaceLister {
	return awsApiGatewayVpcLinkNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// AwsApiGatewayVpcLinkNamespaceLister helps list and get AwsApiGatewayVpcLinks.
type AwsApiGatewayVpcLinkNamespaceLister interface {
	// List lists all AwsApiGatewayVpcLinks in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1.AwsApiGatewayVpcLink, err error)
	// Get retrieves the AwsApiGatewayVpcLink from the indexer for a given namespace and name.
	Get(name string) (*v1.AwsApiGatewayVpcLink, error)
	AwsApiGatewayVpcLinkNamespaceListerExpansion
}

// awsApiGatewayVpcLinkNamespaceLister implements the AwsApiGatewayVpcLinkNamespaceLister
// interface.
type awsApiGatewayVpcLinkNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all AwsApiGatewayVpcLinks in the indexer for a given namespace.
func (s awsApiGatewayVpcLinkNamespaceLister) List(selector labels.Selector) (ret []*v1.AwsApiGatewayVpcLink, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.AwsApiGatewayVpcLink))
	})
	return ret, err
}

// Get retrieves the AwsApiGatewayVpcLink from the indexer for a given namespace and name.
func (s awsApiGatewayVpcLinkNamespaceLister) Get(name string) (*v1.AwsApiGatewayVpcLink, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1.Resource("awsapigatewayvpclink"), name)
	}
	return obj.(*v1.AwsApiGatewayVpcLink), nil
}
