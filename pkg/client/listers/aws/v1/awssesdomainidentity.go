/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1

import (
	v1 "github.com/trussle/terraform-operator/pkg/apis/aws/v1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// AwsSesDomainIdentityLister helps list AwsSesDomainIdentities.
type AwsSesDomainIdentityLister interface {
	// List lists all AwsSesDomainIdentities in the indexer.
	List(selector labels.Selector) (ret []*v1.AwsSesDomainIdentity, err error)
	// AwsSesDomainIdentities returns an object that can list and get AwsSesDomainIdentities.
	AwsSesDomainIdentities(namespace string) AwsSesDomainIdentityNamespaceLister
	AwsSesDomainIdentityListerExpansion
}

// awsSesDomainIdentityLister implements the AwsSesDomainIdentityLister interface.
type awsSesDomainIdentityLister struct {
	indexer cache.Indexer
}

// NewAwsSesDomainIdentityLister returns a new AwsSesDomainIdentityLister.
func NewAwsSesDomainIdentityLister(indexer cache.Indexer) AwsSesDomainIdentityLister {
	return &awsSesDomainIdentityLister{indexer: indexer}
}

// List lists all AwsSesDomainIdentities in the indexer.
func (s *awsSesDomainIdentityLister) List(selector labels.Selector) (ret []*v1.AwsSesDomainIdentity, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.AwsSesDomainIdentity))
	})
	return ret, err
}

// AwsSesDomainIdentities returns an object that can list and get AwsSesDomainIdentities.
func (s *awsSesDomainIdentityLister) AwsSesDomainIdentities(namespace string) AwsSesDomainIdentityNamespaceLister {
	return awsSesDomainIdentityNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// AwsSesDomainIdentityNamespaceLister helps list and get AwsSesDomainIdentities.
type AwsSesDomainIdentityNamespaceLister interface {
	// List lists all AwsSesDomainIdentities in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1.AwsSesDomainIdentity, err error)
	// Get retrieves the AwsSesDomainIdentity from the indexer for a given namespace and name.
	Get(name string) (*v1.AwsSesDomainIdentity, error)
	AwsSesDomainIdentityNamespaceListerExpansion
}

// awsSesDomainIdentityNamespaceLister implements the AwsSesDomainIdentityNamespaceLister
// interface.
type awsSesDomainIdentityNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all AwsSesDomainIdentities in the indexer for a given namespace.
func (s awsSesDomainIdentityNamespaceLister) List(selector labels.Selector) (ret []*v1.AwsSesDomainIdentity, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.AwsSesDomainIdentity))
	})
	return ret, err
}

// Get retrieves the AwsSesDomainIdentity from the indexer for a given namespace and name.
func (s awsSesDomainIdentityNamespaceLister) Get(name string) (*v1.AwsSesDomainIdentity, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1.Resource("awssesdomainidentity"), name)
	}
	return obj.(*v1.AwsSesDomainIdentity), nil
}
