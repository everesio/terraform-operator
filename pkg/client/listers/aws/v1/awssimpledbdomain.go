/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1

import (
	v1 "github.com/trussle/terraform-operator/pkg/apis/aws/v1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// AwsSimpledbDomainLister helps list AwsSimpledbDomains.
type AwsSimpledbDomainLister interface {
	// List lists all AwsSimpledbDomains in the indexer.
	List(selector labels.Selector) (ret []*v1.AwsSimpledbDomain, err error)
	// AwsSimpledbDomains returns an object that can list and get AwsSimpledbDomains.
	AwsSimpledbDomains(namespace string) AwsSimpledbDomainNamespaceLister
	AwsSimpledbDomainListerExpansion
}

// awsSimpledbDomainLister implements the AwsSimpledbDomainLister interface.
type awsSimpledbDomainLister struct {
	indexer cache.Indexer
}

// NewAwsSimpledbDomainLister returns a new AwsSimpledbDomainLister.
func NewAwsSimpledbDomainLister(indexer cache.Indexer) AwsSimpledbDomainLister {
	return &awsSimpledbDomainLister{indexer: indexer}
}

// List lists all AwsSimpledbDomains in the indexer.
func (s *awsSimpledbDomainLister) List(selector labels.Selector) (ret []*v1.AwsSimpledbDomain, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.AwsSimpledbDomain))
	})
	return ret, err
}

// AwsSimpledbDomains returns an object that can list and get AwsSimpledbDomains.
func (s *awsSimpledbDomainLister) AwsSimpledbDomains(namespace string) AwsSimpledbDomainNamespaceLister {
	return awsSimpledbDomainNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// AwsSimpledbDomainNamespaceLister helps list and get AwsSimpledbDomains.
type AwsSimpledbDomainNamespaceLister interface {
	// List lists all AwsSimpledbDomains in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1.AwsSimpledbDomain, err error)
	// Get retrieves the AwsSimpledbDomain from the indexer for a given namespace and name.
	Get(name string) (*v1.AwsSimpledbDomain, error)
	AwsSimpledbDomainNamespaceListerExpansion
}

// awsSimpledbDomainNamespaceLister implements the AwsSimpledbDomainNamespaceLister
// interface.
type awsSimpledbDomainNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all AwsSimpledbDomains in the indexer for a given namespace.
func (s awsSimpledbDomainNamespaceLister) List(selector labels.Selector) (ret []*v1.AwsSimpledbDomain, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.AwsSimpledbDomain))
	})
	return ret, err
}

// Get retrieves the AwsSimpledbDomain from the indexer for a given namespace and name.
func (s awsSimpledbDomainNamespaceLister) Get(name string) (*v1.AwsSimpledbDomain, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1.Resource("awssimpledbdomain"), name)
	}
	return obj.(*v1.AwsSimpledbDomain), nil
}
