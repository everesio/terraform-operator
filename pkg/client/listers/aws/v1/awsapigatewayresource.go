/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1

import (
	v1 "github.com/trussle/terraform-operator/pkg/apis/aws/v1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// AwsApiGatewayResourceLister helps list AwsApiGatewayResources.
type AwsApiGatewayResourceLister interface {
	// List lists all AwsApiGatewayResources in the indexer.
	List(selector labels.Selector) (ret []*v1.AwsApiGatewayResource, err error)
	// AwsApiGatewayResources returns an object that can list and get AwsApiGatewayResources.
	AwsApiGatewayResources(namespace string) AwsApiGatewayResourceNamespaceLister
	AwsApiGatewayResourceListerExpansion
}

// awsApiGatewayResourceLister implements the AwsApiGatewayResourceLister interface.
type awsApiGatewayResourceLister struct {
	indexer cache.Indexer
}

// NewAwsApiGatewayResourceLister returns a new AwsApiGatewayResourceLister.
func NewAwsApiGatewayResourceLister(indexer cache.Indexer) AwsApiGatewayResourceLister {
	return &awsApiGatewayResourceLister{indexer: indexer}
}

// List lists all AwsApiGatewayResources in the indexer.
func (s *awsApiGatewayResourceLister) List(selector labels.Selector) (ret []*v1.AwsApiGatewayResource, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.AwsApiGatewayResource))
	})
	return ret, err
}

// AwsApiGatewayResources returns an object that can list and get AwsApiGatewayResources.
func (s *awsApiGatewayResourceLister) AwsApiGatewayResources(namespace string) AwsApiGatewayResourceNamespaceLister {
	return awsApiGatewayResourceNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// AwsApiGatewayResourceNamespaceLister helps list and get AwsApiGatewayResources.
type AwsApiGatewayResourceNamespaceLister interface {
	// List lists all AwsApiGatewayResources in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1.AwsApiGatewayResource, err error)
	// Get retrieves the AwsApiGatewayResource from the indexer for a given namespace and name.
	Get(name string) (*v1.AwsApiGatewayResource, error)
	AwsApiGatewayResourceNamespaceListerExpansion
}

// awsApiGatewayResourceNamespaceLister implements the AwsApiGatewayResourceNamespaceLister
// interface.
type awsApiGatewayResourceNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all AwsApiGatewayResources in the indexer for a given namespace.
func (s awsApiGatewayResourceNamespaceLister) List(selector labels.Selector) (ret []*v1.AwsApiGatewayResource, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.AwsApiGatewayResource))
	})
	return ret, err
}

// Get retrieves the AwsApiGatewayResource from the indexer for a given namespace and name.
func (s awsApiGatewayResourceNamespaceLister) Get(name string) (*v1.AwsApiGatewayResource, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1.Resource("awsapigatewayresource"), name)
	}
	return obj.(*v1.AwsApiGatewayResource), nil
}
