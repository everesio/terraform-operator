/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1

import (
	v1 "github.com/trussle/terraform-operator/pkg/apis/aws/v1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// AwsOpsworksPermissionLister helps list AwsOpsworksPermissions.
type AwsOpsworksPermissionLister interface {
	// List lists all AwsOpsworksPermissions in the indexer.
	List(selector labels.Selector) (ret []*v1.AwsOpsworksPermission, err error)
	// AwsOpsworksPermissions returns an object that can list and get AwsOpsworksPermissions.
	AwsOpsworksPermissions(namespace string) AwsOpsworksPermissionNamespaceLister
	AwsOpsworksPermissionListerExpansion
}

// awsOpsworksPermissionLister implements the AwsOpsworksPermissionLister interface.
type awsOpsworksPermissionLister struct {
	indexer cache.Indexer
}

// NewAwsOpsworksPermissionLister returns a new AwsOpsworksPermissionLister.
func NewAwsOpsworksPermissionLister(indexer cache.Indexer) AwsOpsworksPermissionLister {
	return &awsOpsworksPermissionLister{indexer: indexer}
}

// List lists all AwsOpsworksPermissions in the indexer.
func (s *awsOpsworksPermissionLister) List(selector labels.Selector) (ret []*v1.AwsOpsworksPermission, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.AwsOpsworksPermission))
	})
	return ret, err
}

// AwsOpsworksPermissions returns an object that can list and get AwsOpsworksPermissions.
func (s *awsOpsworksPermissionLister) AwsOpsworksPermissions(namespace string) AwsOpsworksPermissionNamespaceLister {
	return awsOpsworksPermissionNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// AwsOpsworksPermissionNamespaceLister helps list and get AwsOpsworksPermissions.
type AwsOpsworksPermissionNamespaceLister interface {
	// List lists all AwsOpsworksPermissions in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1.AwsOpsworksPermission, err error)
	// Get retrieves the AwsOpsworksPermission from the indexer for a given namespace and name.
	Get(name string) (*v1.AwsOpsworksPermission, error)
	AwsOpsworksPermissionNamespaceListerExpansion
}

// awsOpsworksPermissionNamespaceLister implements the AwsOpsworksPermissionNamespaceLister
// interface.
type awsOpsworksPermissionNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all AwsOpsworksPermissions in the indexer for a given namespace.
func (s awsOpsworksPermissionNamespaceLister) List(selector labels.Selector) (ret []*v1.AwsOpsworksPermission, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.AwsOpsworksPermission))
	})
	return ret, err
}

// Get retrieves the AwsOpsworksPermission from the indexer for a given namespace and name.
func (s awsOpsworksPermissionNamespaceLister) Get(name string) (*v1.AwsOpsworksPermission, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1.Resource("awsopsworkspermission"), name)
	}
	return obj.(*v1.AwsOpsworksPermission), nil
}
