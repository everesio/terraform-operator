/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1

import (
	v1 "github.com/trussle/terraform-operator/pkg/apis/aws/v1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// AwsNatGatewayLister helps list AwsNatGateways.
type AwsNatGatewayLister interface {
	// List lists all AwsNatGateways in the indexer.
	List(selector labels.Selector) (ret []*v1.AwsNatGateway, err error)
	// AwsNatGateways returns an object that can list and get AwsNatGateways.
	AwsNatGateways(namespace string) AwsNatGatewayNamespaceLister
	AwsNatGatewayListerExpansion
}

// awsNatGatewayLister implements the AwsNatGatewayLister interface.
type awsNatGatewayLister struct {
	indexer cache.Indexer
}

// NewAwsNatGatewayLister returns a new AwsNatGatewayLister.
func NewAwsNatGatewayLister(indexer cache.Indexer) AwsNatGatewayLister {
	return &awsNatGatewayLister{indexer: indexer}
}

// List lists all AwsNatGateways in the indexer.
func (s *awsNatGatewayLister) List(selector labels.Selector) (ret []*v1.AwsNatGateway, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.AwsNatGateway))
	})
	return ret, err
}

// AwsNatGateways returns an object that can list and get AwsNatGateways.
func (s *awsNatGatewayLister) AwsNatGateways(namespace string) AwsNatGatewayNamespaceLister {
	return awsNatGatewayNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// AwsNatGatewayNamespaceLister helps list and get AwsNatGateways.
type AwsNatGatewayNamespaceLister interface {
	// List lists all AwsNatGateways in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1.AwsNatGateway, err error)
	// Get retrieves the AwsNatGateway from the indexer for a given namespace and name.
	Get(name string) (*v1.AwsNatGateway, error)
	AwsNatGatewayNamespaceListerExpansion
}

// awsNatGatewayNamespaceLister implements the AwsNatGatewayNamespaceLister
// interface.
type awsNatGatewayNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all AwsNatGateways in the indexer for a given namespace.
func (s awsNatGatewayNamespaceLister) List(selector labels.Selector) (ret []*v1.AwsNatGateway, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.AwsNatGateway))
	})
	return ret, err
}

// Get retrieves the AwsNatGateway from the indexer for a given namespace and name.
func (s awsNatGatewayNamespaceLister) Get(name string) (*v1.AwsNatGateway, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1.Resource("awsnatgateway"), name)
	}
	return obj.(*v1.AwsNatGateway), nil
}
