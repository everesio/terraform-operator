/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1

import (
	v1 "github.com/trussle/terraform-operator/pkg/apis/aws/v1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// AwsAmiLaunchPermissionLister helps list AwsAmiLaunchPermissions.
type AwsAmiLaunchPermissionLister interface {
	// List lists all AwsAmiLaunchPermissions in the indexer.
	List(selector labels.Selector) (ret []*v1.AwsAmiLaunchPermission, err error)
	// AwsAmiLaunchPermissions returns an object that can list and get AwsAmiLaunchPermissions.
	AwsAmiLaunchPermissions(namespace string) AwsAmiLaunchPermissionNamespaceLister
	AwsAmiLaunchPermissionListerExpansion
}

// awsAmiLaunchPermissionLister implements the AwsAmiLaunchPermissionLister interface.
type awsAmiLaunchPermissionLister struct {
	indexer cache.Indexer
}

// NewAwsAmiLaunchPermissionLister returns a new AwsAmiLaunchPermissionLister.
func NewAwsAmiLaunchPermissionLister(indexer cache.Indexer) AwsAmiLaunchPermissionLister {
	return &awsAmiLaunchPermissionLister{indexer: indexer}
}

// List lists all AwsAmiLaunchPermissions in the indexer.
func (s *awsAmiLaunchPermissionLister) List(selector labels.Selector) (ret []*v1.AwsAmiLaunchPermission, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.AwsAmiLaunchPermission))
	})
	return ret, err
}

// AwsAmiLaunchPermissions returns an object that can list and get AwsAmiLaunchPermissions.
func (s *awsAmiLaunchPermissionLister) AwsAmiLaunchPermissions(namespace string) AwsAmiLaunchPermissionNamespaceLister {
	return awsAmiLaunchPermissionNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// AwsAmiLaunchPermissionNamespaceLister helps list and get AwsAmiLaunchPermissions.
type AwsAmiLaunchPermissionNamespaceLister interface {
	// List lists all AwsAmiLaunchPermissions in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1.AwsAmiLaunchPermission, err error)
	// Get retrieves the AwsAmiLaunchPermission from the indexer for a given namespace and name.
	Get(name string) (*v1.AwsAmiLaunchPermission, error)
	AwsAmiLaunchPermissionNamespaceListerExpansion
}

// awsAmiLaunchPermissionNamespaceLister implements the AwsAmiLaunchPermissionNamespaceLister
// interface.
type awsAmiLaunchPermissionNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all AwsAmiLaunchPermissions in the indexer for a given namespace.
func (s awsAmiLaunchPermissionNamespaceLister) List(selector labels.Selector) (ret []*v1.AwsAmiLaunchPermission, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.AwsAmiLaunchPermission))
	})
	return ret, err
}

// Get retrieves the AwsAmiLaunchPermission from the indexer for a given namespace and name.
func (s awsAmiLaunchPermissionNamespaceLister) Get(name string) (*v1.AwsAmiLaunchPermission, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1.Resource("awsamilaunchpermission"), name)
	}
	return obj.(*v1.AwsAmiLaunchPermission), nil
}
