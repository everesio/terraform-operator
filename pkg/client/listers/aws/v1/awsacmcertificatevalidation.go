/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1

import (
	v1 "github.com/trussle/terraform-operator/pkg/apis/aws/v1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// AwsAcmCertificateValidationLister helps list AwsAcmCertificateValidations.
type AwsAcmCertificateValidationLister interface {
	// List lists all AwsAcmCertificateValidations in the indexer.
	List(selector labels.Selector) (ret []*v1.AwsAcmCertificateValidation, err error)
	// AwsAcmCertificateValidations returns an object that can list and get AwsAcmCertificateValidations.
	AwsAcmCertificateValidations(namespace string) AwsAcmCertificateValidationNamespaceLister
	AwsAcmCertificateValidationListerExpansion
}

// awsAcmCertificateValidationLister implements the AwsAcmCertificateValidationLister interface.
type awsAcmCertificateValidationLister struct {
	indexer cache.Indexer
}

// NewAwsAcmCertificateValidationLister returns a new AwsAcmCertificateValidationLister.
func NewAwsAcmCertificateValidationLister(indexer cache.Indexer) AwsAcmCertificateValidationLister {
	return &awsAcmCertificateValidationLister{indexer: indexer}
}

// List lists all AwsAcmCertificateValidations in the indexer.
func (s *awsAcmCertificateValidationLister) List(selector labels.Selector) (ret []*v1.AwsAcmCertificateValidation, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.AwsAcmCertificateValidation))
	})
	return ret, err
}

// AwsAcmCertificateValidations returns an object that can list and get AwsAcmCertificateValidations.
func (s *awsAcmCertificateValidationLister) AwsAcmCertificateValidations(namespace string) AwsAcmCertificateValidationNamespaceLister {
	return awsAcmCertificateValidationNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// AwsAcmCertificateValidationNamespaceLister helps list and get AwsAcmCertificateValidations.
type AwsAcmCertificateValidationNamespaceLister interface {
	// List lists all AwsAcmCertificateValidations in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1.AwsAcmCertificateValidation, err error)
	// Get retrieves the AwsAcmCertificateValidation from the indexer for a given namespace and name.
	Get(name string) (*v1.AwsAcmCertificateValidation, error)
	AwsAcmCertificateValidationNamespaceListerExpansion
}

// awsAcmCertificateValidationNamespaceLister implements the AwsAcmCertificateValidationNamespaceLister
// interface.
type awsAcmCertificateValidationNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all AwsAcmCertificateValidations in the indexer for a given namespace.
func (s awsAcmCertificateValidationNamespaceLister) List(selector labels.Selector) (ret []*v1.AwsAcmCertificateValidation, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.AwsAcmCertificateValidation))
	})
	return ret, err
}

// Get retrieves the AwsAcmCertificateValidation from the indexer for a given namespace and name.
func (s awsAcmCertificateValidationNamespaceLister) Get(name string) (*v1.AwsAcmCertificateValidation, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1.Resource("awsacmcertificatevalidation"), name)
	}
	return obj.(*v1.AwsAcmCertificateValidation), nil
}
