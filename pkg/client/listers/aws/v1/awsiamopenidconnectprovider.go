/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1

import (
	v1 "github.com/trussle/terraform-operator/pkg/apis/aws/v1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// AwsIamOpenidConnectProviderLister helps list AwsIamOpenidConnectProviders.
type AwsIamOpenidConnectProviderLister interface {
	// List lists all AwsIamOpenidConnectProviders in the indexer.
	List(selector labels.Selector) (ret []*v1.AwsIamOpenidConnectProvider, err error)
	// AwsIamOpenidConnectProviders returns an object that can list and get AwsIamOpenidConnectProviders.
	AwsIamOpenidConnectProviders(namespace string) AwsIamOpenidConnectProviderNamespaceLister
	AwsIamOpenidConnectProviderListerExpansion
}

// awsIamOpenidConnectProviderLister implements the AwsIamOpenidConnectProviderLister interface.
type awsIamOpenidConnectProviderLister struct {
	indexer cache.Indexer
}

// NewAwsIamOpenidConnectProviderLister returns a new AwsIamOpenidConnectProviderLister.
func NewAwsIamOpenidConnectProviderLister(indexer cache.Indexer) AwsIamOpenidConnectProviderLister {
	return &awsIamOpenidConnectProviderLister{indexer: indexer}
}

// List lists all AwsIamOpenidConnectProviders in the indexer.
func (s *awsIamOpenidConnectProviderLister) List(selector labels.Selector) (ret []*v1.AwsIamOpenidConnectProvider, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.AwsIamOpenidConnectProvider))
	})
	return ret, err
}

// AwsIamOpenidConnectProviders returns an object that can list and get AwsIamOpenidConnectProviders.
func (s *awsIamOpenidConnectProviderLister) AwsIamOpenidConnectProviders(namespace string) AwsIamOpenidConnectProviderNamespaceLister {
	return awsIamOpenidConnectProviderNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// AwsIamOpenidConnectProviderNamespaceLister helps list and get AwsIamOpenidConnectProviders.
type AwsIamOpenidConnectProviderNamespaceLister interface {
	// List lists all AwsIamOpenidConnectProviders in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1.AwsIamOpenidConnectProvider, err error)
	// Get retrieves the AwsIamOpenidConnectProvider from the indexer for a given namespace and name.
	Get(name string) (*v1.AwsIamOpenidConnectProvider, error)
	AwsIamOpenidConnectProviderNamespaceListerExpansion
}

// awsIamOpenidConnectProviderNamespaceLister implements the AwsIamOpenidConnectProviderNamespaceLister
// interface.
type awsIamOpenidConnectProviderNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all AwsIamOpenidConnectProviders in the indexer for a given namespace.
func (s awsIamOpenidConnectProviderNamespaceLister) List(selector labels.Selector) (ret []*v1.AwsIamOpenidConnectProvider, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.AwsIamOpenidConnectProvider))
	})
	return ret, err
}

// Get retrieves the AwsIamOpenidConnectProvider from the indexer for a given namespace and name.
func (s awsIamOpenidConnectProviderNamespaceLister) Get(name string) (*v1.AwsIamOpenidConnectProvider, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1.Resource("awsiamopenidconnectprovider"), name)
	}
	return obj.(*v1.AwsIamOpenidConnectProvider), nil
}
