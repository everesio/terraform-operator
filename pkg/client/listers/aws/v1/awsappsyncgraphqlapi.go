/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1

import (
	v1 "github.com/trussle/terraform-operator/pkg/apis/aws/v1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// AwsAppsyncGraphqlApiLister helps list AwsAppsyncGraphqlApis.
type AwsAppsyncGraphqlApiLister interface {
	// List lists all AwsAppsyncGraphqlApis in the indexer.
	List(selector labels.Selector) (ret []*v1.AwsAppsyncGraphqlApi, err error)
	// AwsAppsyncGraphqlApis returns an object that can list and get AwsAppsyncGraphqlApis.
	AwsAppsyncGraphqlApis(namespace string) AwsAppsyncGraphqlApiNamespaceLister
	AwsAppsyncGraphqlApiListerExpansion
}

// awsAppsyncGraphqlApiLister implements the AwsAppsyncGraphqlApiLister interface.
type awsAppsyncGraphqlApiLister struct {
	indexer cache.Indexer
}

// NewAwsAppsyncGraphqlApiLister returns a new AwsAppsyncGraphqlApiLister.
func NewAwsAppsyncGraphqlApiLister(indexer cache.Indexer) AwsAppsyncGraphqlApiLister {
	return &awsAppsyncGraphqlApiLister{indexer: indexer}
}

// List lists all AwsAppsyncGraphqlApis in the indexer.
func (s *awsAppsyncGraphqlApiLister) List(selector labels.Selector) (ret []*v1.AwsAppsyncGraphqlApi, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.AwsAppsyncGraphqlApi))
	})
	return ret, err
}

// AwsAppsyncGraphqlApis returns an object that can list and get AwsAppsyncGraphqlApis.
func (s *awsAppsyncGraphqlApiLister) AwsAppsyncGraphqlApis(namespace string) AwsAppsyncGraphqlApiNamespaceLister {
	return awsAppsyncGraphqlApiNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// AwsAppsyncGraphqlApiNamespaceLister helps list and get AwsAppsyncGraphqlApis.
type AwsAppsyncGraphqlApiNamespaceLister interface {
	// List lists all AwsAppsyncGraphqlApis in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1.AwsAppsyncGraphqlApi, err error)
	// Get retrieves the AwsAppsyncGraphqlApi from the indexer for a given namespace and name.
	Get(name string) (*v1.AwsAppsyncGraphqlApi, error)
	AwsAppsyncGraphqlApiNamespaceListerExpansion
}

// awsAppsyncGraphqlApiNamespaceLister implements the AwsAppsyncGraphqlApiNamespaceLister
// interface.
type awsAppsyncGraphqlApiNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all AwsAppsyncGraphqlApis in the indexer for a given namespace.
func (s awsAppsyncGraphqlApiNamespaceLister) List(selector labels.Selector) (ret []*v1.AwsAppsyncGraphqlApi, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.AwsAppsyncGraphqlApi))
	})
	return ret, err
}

// Get retrieves the AwsAppsyncGraphqlApi from the indexer for a given namespace and name.
func (s awsAppsyncGraphqlApiNamespaceLister) Get(name string) (*v1.AwsAppsyncGraphqlApi, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1.Resource("awsappsyncgraphqlapi"), name)
	}
	return obj.(*v1.AwsAppsyncGraphqlApi), nil
}
