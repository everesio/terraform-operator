/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1

import (
	v1 "github.com/trussle/terraform-operator/pkg/apis/aws/v1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// AwsIamUserPolicyAttachmentLister helps list AwsIamUserPolicyAttachments.
type AwsIamUserPolicyAttachmentLister interface {
	// List lists all AwsIamUserPolicyAttachments in the indexer.
	List(selector labels.Selector) (ret []*v1.AwsIamUserPolicyAttachment, err error)
	// AwsIamUserPolicyAttachments returns an object that can list and get AwsIamUserPolicyAttachments.
	AwsIamUserPolicyAttachments(namespace string) AwsIamUserPolicyAttachmentNamespaceLister
	AwsIamUserPolicyAttachmentListerExpansion
}

// awsIamUserPolicyAttachmentLister implements the AwsIamUserPolicyAttachmentLister interface.
type awsIamUserPolicyAttachmentLister struct {
	indexer cache.Indexer
}

// NewAwsIamUserPolicyAttachmentLister returns a new AwsIamUserPolicyAttachmentLister.
func NewAwsIamUserPolicyAttachmentLister(indexer cache.Indexer) AwsIamUserPolicyAttachmentLister {
	return &awsIamUserPolicyAttachmentLister{indexer: indexer}
}

// List lists all AwsIamUserPolicyAttachments in the indexer.
func (s *awsIamUserPolicyAttachmentLister) List(selector labels.Selector) (ret []*v1.AwsIamUserPolicyAttachment, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.AwsIamUserPolicyAttachment))
	})
	return ret, err
}

// AwsIamUserPolicyAttachments returns an object that can list and get AwsIamUserPolicyAttachments.
func (s *awsIamUserPolicyAttachmentLister) AwsIamUserPolicyAttachments(namespace string) AwsIamUserPolicyAttachmentNamespaceLister {
	return awsIamUserPolicyAttachmentNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// AwsIamUserPolicyAttachmentNamespaceLister helps list and get AwsIamUserPolicyAttachments.
type AwsIamUserPolicyAttachmentNamespaceLister interface {
	// List lists all AwsIamUserPolicyAttachments in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1.AwsIamUserPolicyAttachment, err error)
	// Get retrieves the AwsIamUserPolicyAttachment from the indexer for a given namespace and name.
	Get(name string) (*v1.AwsIamUserPolicyAttachment, error)
	AwsIamUserPolicyAttachmentNamespaceListerExpansion
}

// awsIamUserPolicyAttachmentNamespaceLister implements the AwsIamUserPolicyAttachmentNamespaceLister
// interface.
type awsIamUserPolicyAttachmentNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all AwsIamUserPolicyAttachments in the indexer for a given namespace.
func (s awsIamUserPolicyAttachmentNamespaceLister) List(selector labels.Selector) (ret []*v1.AwsIamUserPolicyAttachment, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.AwsIamUserPolicyAttachment))
	})
	return ret, err
}

// Get retrieves the AwsIamUserPolicyAttachment from the indexer for a given namespace and name.
func (s awsIamUserPolicyAttachmentNamespaceLister) Get(name string) (*v1.AwsIamUserPolicyAttachment, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1.Resource("awsiamuserpolicyattachment"), name)
	}
	return obj.(*v1.AwsIamUserPolicyAttachment), nil
}
