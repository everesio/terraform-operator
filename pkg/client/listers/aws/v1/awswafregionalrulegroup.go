/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1

import (
	v1 "github.com/trussle/terraform-operator/pkg/apis/aws/v1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// AwsWafregionalRuleGroupLister helps list AwsWafregionalRuleGroups.
type AwsWafregionalRuleGroupLister interface {
	// List lists all AwsWafregionalRuleGroups in the indexer.
	List(selector labels.Selector) (ret []*v1.AwsWafregionalRuleGroup, err error)
	// AwsWafregionalRuleGroups returns an object that can list and get AwsWafregionalRuleGroups.
	AwsWafregionalRuleGroups(namespace string) AwsWafregionalRuleGroupNamespaceLister
	AwsWafregionalRuleGroupListerExpansion
}

// awsWafregionalRuleGroupLister implements the AwsWafregionalRuleGroupLister interface.
type awsWafregionalRuleGroupLister struct {
	indexer cache.Indexer
}

// NewAwsWafregionalRuleGroupLister returns a new AwsWafregionalRuleGroupLister.
func NewAwsWafregionalRuleGroupLister(indexer cache.Indexer) AwsWafregionalRuleGroupLister {
	return &awsWafregionalRuleGroupLister{indexer: indexer}
}

// List lists all AwsWafregionalRuleGroups in the indexer.
func (s *awsWafregionalRuleGroupLister) List(selector labels.Selector) (ret []*v1.AwsWafregionalRuleGroup, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.AwsWafregionalRuleGroup))
	})
	return ret, err
}

// AwsWafregionalRuleGroups returns an object that can list and get AwsWafregionalRuleGroups.
func (s *awsWafregionalRuleGroupLister) AwsWafregionalRuleGroups(namespace string) AwsWafregionalRuleGroupNamespaceLister {
	return awsWafregionalRuleGroupNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// AwsWafregionalRuleGroupNamespaceLister helps list and get AwsWafregionalRuleGroups.
type AwsWafregionalRuleGroupNamespaceLister interface {
	// List lists all AwsWafregionalRuleGroups in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1.AwsWafregionalRuleGroup, err error)
	// Get retrieves the AwsWafregionalRuleGroup from the indexer for a given namespace and name.
	Get(name string) (*v1.AwsWafregionalRuleGroup, error)
	AwsWafregionalRuleGroupNamespaceListerExpansion
}

// awsWafregionalRuleGroupNamespaceLister implements the AwsWafregionalRuleGroupNamespaceLister
// interface.
type awsWafregionalRuleGroupNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all AwsWafregionalRuleGroups in the indexer for a given namespace.
func (s awsWafregionalRuleGroupNamespaceLister) List(selector labels.Selector) (ret []*v1.AwsWafregionalRuleGroup, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.AwsWafregionalRuleGroup))
	})
	return ret, err
}

// Get retrieves the AwsWafregionalRuleGroup from the indexer for a given namespace and name.
func (s awsWafregionalRuleGroupNamespaceLister) Get(name string) (*v1.AwsWafregionalRuleGroup, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1.Resource("awswafregionalrulegroup"), name)
	}
	return obj.(*v1.AwsWafregionalRuleGroup), nil
}
