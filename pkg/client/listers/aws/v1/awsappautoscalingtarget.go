/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1

import (
	v1 "github.com/trussle/terraform-operator/pkg/apis/aws/v1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// AwsAppautoscalingTargetLister helps list AwsAppautoscalingTargets.
type AwsAppautoscalingTargetLister interface {
	// List lists all AwsAppautoscalingTargets in the indexer.
	List(selector labels.Selector) (ret []*v1.AwsAppautoscalingTarget, err error)
	// AwsAppautoscalingTargets returns an object that can list and get AwsAppautoscalingTargets.
	AwsAppautoscalingTargets(namespace string) AwsAppautoscalingTargetNamespaceLister
	AwsAppautoscalingTargetListerExpansion
}

// awsAppautoscalingTargetLister implements the AwsAppautoscalingTargetLister interface.
type awsAppautoscalingTargetLister struct {
	indexer cache.Indexer
}

// NewAwsAppautoscalingTargetLister returns a new AwsAppautoscalingTargetLister.
func NewAwsAppautoscalingTargetLister(indexer cache.Indexer) AwsAppautoscalingTargetLister {
	return &awsAppautoscalingTargetLister{indexer: indexer}
}

// List lists all AwsAppautoscalingTargets in the indexer.
func (s *awsAppautoscalingTargetLister) List(selector labels.Selector) (ret []*v1.AwsAppautoscalingTarget, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.AwsAppautoscalingTarget))
	})
	return ret, err
}

// AwsAppautoscalingTargets returns an object that can list and get AwsAppautoscalingTargets.
func (s *awsAppautoscalingTargetLister) AwsAppautoscalingTargets(namespace string) AwsAppautoscalingTargetNamespaceLister {
	return awsAppautoscalingTargetNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// AwsAppautoscalingTargetNamespaceLister helps list and get AwsAppautoscalingTargets.
type AwsAppautoscalingTargetNamespaceLister interface {
	// List lists all AwsAppautoscalingTargets in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1.AwsAppautoscalingTarget, err error)
	// Get retrieves the AwsAppautoscalingTarget from the indexer for a given namespace and name.
	Get(name string) (*v1.AwsAppautoscalingTarget, error)
	AwsAppautoscalingTargetNamespaceListerExpansion
}

// awsAppautoscalingTargetNamespaceLister implements the AwsAppautoscalingTargetNamespaceLister
// interface.
type awsAppautoscalingTargetNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all AwsAppautoscalingTargets in the indexer for a given namespace.
func (s awsAppautoscalingTargetNamespaceLister) List(selector labels.Selector) (ret []*v1.AwsAppautoscalingTarget, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.AwsAppautoscalingTarget))
	})
	return ret, err
}

// Get retrieves the AwsAppautoscalingTarget from the indexer for a given namespace and name.
func (s awsAppautoscalingTargetNamespaceLister) Get(name string) (*v1.AwsAppautoscalingTarget, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1.Resource("awsappautoscalingtarget"), name)
	}
	return obj.(*v1.AwsAppautoscalingTarget), nil
}
