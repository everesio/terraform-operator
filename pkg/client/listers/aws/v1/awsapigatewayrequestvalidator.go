/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1

import (
	v1 "github.com/trussle/terraform-operator/pkg/apis/aws/v1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// AwsApiGatewayRequestValidatorLister helps list AwsApiGatewayRequestValidators.
type AwsApiGatewayRequestValidatorLister interface {
	// List lists all AwsApiGatewayRequestValidators in the indexer.
	List(selector labels.Selector) (ret []*v1.AwsApiGatewayRequestValidator, err error)
	// AwsApiGatewayRequestValidators returns an object that can list and get AwsApiGatewayRequestValidators.
	AwsApiGatewayRequestValidators(namespace string) AwsApiGatewayRequestValidatorNamespaceLister
	AwsApiGatewayRequestValidatorListerExpansion
}

// awsApiGatewayRequestValidatorLister implements the AwsApiGatewayRequestValidatorLister interface.
type awsApiGatewayRequestValidatorLister struct {
	indexer cache.Indexer
}

// NewAwsApiGatewayRequestValidatorLister returns a new AwsApiGatewayRequestValidatorLister.
func NewAwsApiGatewayRequestValidatorLister(indexer cache.Indexer) AwsApiGatewayRequestValidatorLister {
	return &awsApiGatewayRequestValidatorLister{indexer: indexer}
}

// List lists all AwsApiGatewayRequestValidators in the indexer.
func (s *awsApiGatewayRequestValidatorLister) List(selector labels.Selector) (ret []*v1.AwsApiGatewayRequestValidator, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.AwsApiGatewayRequestValidator))
	})
	return ret, err
}

// AwsApiGatewayRequestValidators returns an object that can list and get AwsApiGatewayRequestValidators.
func (s *awsApiGatewayRequestValidatorLister) AwsApiGatewayRequestValidators(namespace string) AwsApiGatewayRequestValidatorNamespaceLister {
	return awsApiGatewayRequestValidatorNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// AwsApiGatewayRequestValidatorNamespaceLister helps list and get AwsApiGatewayRequestValidators.
type AwsApiGatewayRequestValidatorNamespaceLister interface {
	// List lists all AwsApiGatewayRequestValidators in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1.AwsApiGatewayRequestValidator, err error)
	// Get retrieves the AwsApiGatewayRequestValidator from the indexer for a given namespace and name.
	Get(name string) (*v1.AwsApiGatewayRequestValidator, error)
	AwsApiGatewayRequestValidatorNamespaceListerExpansion
}

// awsApiGatewayRequestValidatorNamespaceLister implements the AwsApiGatewayRequestValidatorNamespaceLister
// interface.
type awsApiGatewayRequestValidatorNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all AwsApiGatewayRequestValidators in the indexer for a given namespace.
func (s awsApiGatewayRequestValidatorNamespaceLister) List(selector labels.Selector) (ret []*v1.AwsApiGatewayRequestValidator, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.AwsApiGatewayRequestValidator))
	})
	return ret, err
}

// Get retrieves the AwsApiGatewayRequestValidator from the indexer for a given namespace and name.
func (s awsApiGatewayRequestValidatorNamespaceLister) Get(name string) (*v1.AwsApiGatewayRequestValidator, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1.Resource("awsapigatewayrequestvalidator"), name)
	}
	return obj.(*v1.AwsApiGatewayRequestValidator), nil
}
