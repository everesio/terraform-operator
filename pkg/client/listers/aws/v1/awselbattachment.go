/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1

import (
	v1 "github.com/trussle/terraform-operator/pkg/apis/aws/v1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// AwsElbAttachmentLister helps list AwsElbAttachments.
type AwsElbAttachmentLister interface {
	// List lists all AwsElbAttachments in the indexer.
	List(selector labels.Selector) (ret []*v1.AwsElbAttachment, err error)
	// AwsElbAttachments returns an object that can list and get AwsElbAttachments.
	AwsElbAttachments(namespace string) AwsElbAttachmentNamespaceLister
	AwsElbAttachmentListerExpansion
}

// awsElbAttachmentLister implements the AwsElbAttachmentLister interface.
type awsElbAttachmentLister struct {
	indexer cache.Indexer
}

// NewAwsElbAttachmentLister returns a new AwsElbAttachmentLister.
func NewAwsElbAttachmentLister(indexer cache.Indexer) AwsElbAttachmentLister {
	return &awsElbAttachmentLister{indexer: indexer}
}

// List lists all AwsElbAttachments in the indexer.
func (s *awsElbAttachmentLister) List(selector labels.Selector) (ret []*v1.AwsElbAttachment, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.AwsElbAttachment))
	})
	return ret, err
}

// AwsElbAttachments returns an object that can list and get AwsElbAttachments.
func (s *awsElbAttachmentLister) AwsElbAttachments(namespace string) AwsElbAttachmentNamespaceLister {
	return awsElbAttachmentNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// AwsElbAttachmentNamespaceLister helps list and get AwsElbAttachments.
type AwsElbAttachmentNamespaceLister interface {
	// List lists all AwsElbAttachments in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1.AwsElbAttachment, err error)
	// Get retrieves the AwsElbAttachment from the indexer for a given namespace and name.
	Get(name string) (*v1.AwsElbAttachment, error)
	AwsElbAttachmentNamespaceListerExpansion
}

// awsElbAttachmentNamespaceLister implements the AwsElbAttachmentNamespaceLister
// interface.
type awsElbAttachmentNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all AwsElbAttachments in the indexer for a given namespace.
func (s awsElbAttachmentNamespaceLister) List(selector labels.Selector) (ret []*v1.AwsElbAttachment, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.AwsElbAttachment))
	})
	return ret, err
}

// Get retrieves the AwsElbAttachment from the indexer for a given namespace and name.
func (s awsElbAttachmentNamespaceLister) Get(name string) (*v1.AwsElbAttachment, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1.Resource("awselbattachment"), name)
	}
	return obj.(*v1.AwsElbAttachment), nil
}
