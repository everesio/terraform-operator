/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1

import (
	v1 "github.com/trussle/terraform-operator/pkg/apis/aws/v1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// AwsLbListenerLister helps list AwsLbListeners.
type AwsLbListenerLister interface {
	// List lists all AwsLbListeners in the indexer.
	List(selector labels.Selector) (ret []*v1.AwsLbListener, err error)
	// AwsLbListeners returns an object that can list and get AwsLbListeners.
	AwsLbListeners(namespace string) AwsLbListenerNamespaceLister
	AwsLbListenerListerExpansion
}

// awsLbListenerLister implements the AwsLbListenerLister interface.
type awsLbListenerLister struct {
	indexer cache.Indexer
}

// NewAwsLbListenerLister returns a new AwsLbListenerLister.
func NewAwsLbListenerLister(indexer cache.Indexer) AwsLbListenerLister {
	return &awsLbListenerLister{indexer: indexer}
}

// List lists all AwsLbListeners in the indexer.
func (s *awsLbListenerLister) List(selector labels.Selector) (ret []*v1.AwsLbListener, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.AwsLbListener))
	})
	return ret, err
}

// AwsLbListeners returns an object that can list and get AwsLbListeners.
func (s *awsLbListenerLister) AwsLbListeners(namespace string) AwsLbListenerNamespaceLister {
	return awsLbListenerNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// AwsLbListenerNamespaceLister helps list and get AwsLbListeners.
type AwsLbListenerNamespaceLister interface {
	// List lists all AwsLbListeners in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1.AwsLbListener, err error)
	// Get retrieves the AwsLbListener from the indexer for a given namespace and name.
	Get(name string) (*v1.AwsLbListener, error)
	AwsLbListenerNamespaceListerExpansion
}

// awsLbListenerNamespaceLister implements the AwsLbListenerNamespaceLister
// interface.
type awsLbListenerNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all AwsLbListeners in the indexer for a given namespace.
func (s awsLbListenerNamespaceLister) List(selector labels.Selector) (ret []*v1.AwsLbListener, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.AwsLbListener))
	})
	return ret, err
}

// Get retrieves the AwsLbListener from the indexer for a given namespace and name.
func (s awsLbListenerNamespaceLister) Get(name string) (*v1.AwsLbListener, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1.Resource("awslblistener"), name)
	}
	return obj.(*v1.AwsLbListener), nil
}
