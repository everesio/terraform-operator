/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1

import (
	v1 "github.com/trussle/terraform-operator/pkg/apis/aws/v1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// AwsElasticsearchDomainLister helps list AwsElasticsearchDomains.
type AwsElasticsearchDomainLister interface {
	// List lists all AwsElasticsearchDomains in the indexer.
	List(selector labels.Selector) (ret []*v1.AwsElasticsearchDomain, err error)
	// AwsElasticsearchDomains returns an object that can list and get AwsElasticsearchDomains.
	AwsElasticsearchDomains(namespace string) AwsElasticsearchDomainNamespaceLister
	AwsElasticsearchDomainListerExpansion
}

// awsElasticsearchDomainLister implements the AwsElasticsearchDomainLister interface.
type awsElasticsearchDomainLister struct {
	indexer cache.Indexer
}

// NewAwsElasticsearchDomainLister returns a new AwsElasticsearchDomainLister.
func NewAwsElasticsearchDomainLister(indexer cache.Indexer) AwsElasticsearchDomainLister {
	return &awsElasticsearchDomainLister{indexer: indexer}
}

// List lists all AwsElasticsearchDomains in the indexer.
func (s *awsElasticsearchDomainLister) List(selector labels.Selector) (ret []*v1.AwsElasticsearchDomain, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.AwsElasticsearchDomain))
	})
	return ret, err
}

// AwsElasticsearchDomains returns an object that can list and get AwsElasticsearchDomains.
func (s *awsElasticsearchDomainLister) AwsElasticsearchDomains(namespace string) AwsElasticsearchDomainNamespaceLister {
	return awsElasticsearchDomainNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// AwsElasticsearchDomainNamespaceLister helps list and get AwsElasticsearchDomains.
type AwsElasticsearchDomainNamespaceLister interface {
	// List lists all AwsElasticsearchDomains in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1.AwsElasticsearchDomain, err error)
	// Get retrieves the AwsElasticsearchDomain from the indexer for a given namespace and name.
	Get(name string) (*v1.AwsElasticsearchDomain, error)
	AwsElasticsearchDomainNamespaceListerExpansion
}

// awsElasticsearchDomainNamespaceLister implements the AwsElasticsearchDomainNamespaceLister
// interface.
type awsElasticsearchDomainNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all AwsElasticsearchDomains in the indexer for a given namespace.
func (s awsElasticsearchDomainNamespaceLister) List(selector labels.Selector) (ret []*v1.AwsElasticsearchDomain, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.AwsElasticsearchDomain))
	})
	return ret, err
}

// Get retrieves the AwsElasticsearchDomain from the indexer for a given namespace and name.
func (s awsElasticsearchDomainNamespaceLister) Get(name string) (*v1.AwsElasticsearchDomain, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1.Resource("awselasticsearchdomain"), name)
	}
	return obj.(*v1.AwsElasticsearchDomain), nil
}
