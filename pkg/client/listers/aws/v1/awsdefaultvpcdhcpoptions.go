/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1

import (
	v1 "github.com/trussle/terraform-operator/pkg/apis/aws/v1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// AwsDefaultVpcDhcpOptionsLister helps list AwsDefaultVpcDhcpOptionses.
type AwsDefaultVpcDhcpOptionsLister interface {
	// List lists all AwsDefaultVpcDhcpOptionses in the indexer.
	List(selector labels.Selector) (ret []*v1.AwsDefaultVpcDhcpOptions, err error)
	// AwsDefaultVpcDhcpOptionses returns an object that can list and get AwsDefaultVpcDhcpOptionses.
	AwsDefaultVpcDhcpOptionses(namespace string) AwsDefaultVpcDhcpOptionsNamespaceLister
	AwsDefaultVpcDhcpOptionsListerExpansion
}

// awsDefaultVpcDhcpOptionsLister implements the AwsDefaultVpcDhcpOptionsLister interface.
type awsDefaultVpcDhcpOptionsLister struct {
	indexer cache.Indexer
}

// NewAwsDefaultVpcDhcpOptionsLister returns a new AwsDefaultVpcDhcpOptionsLister.
func NewAwsDefaultVpcDhcpOptionsLister(indexer cache.Indexer) AwsDefaultVpcDhcpOptionsLister {
	return &awsDefaultVpcDhcpOptionsLister{indexer: indexer}
}

// List lists all AwsDefaultVpcDhcpOptionses in the indexer.
func (s *awsDefaultVpcDhcpOptionsLister) List(selector labels.Selector) (ret []*v1.AwsDefaultVpcDhcpOptions, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.AwsDefaultVpcDhcpOptions))
	})
	return ret, err
}

// AwsDefaultVpcDhcpOptionses returns an object that can list and get AwsDefaultVpcDhcpOptionses.
func (s *awsDefaultVpcDhcpOptionsLister) AwsDefaultVpcDhcpOptionses(namespace string) AwsDefaultVpcDhcpOptionsNamespaceLister {
	return awsDefaultVpcDhcpOptionsNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// AwsDefaultVpcDhcpOptionsNamespaceLister helps list and get AwsDefaultVpcDhcpOptionses.
type AwsDefaultVpcDhcpOptionsNamespaceLister interface {
	// List lists all AwsDefaultVpcDhcpOptionses in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1.AwsDefaultVpcDhcpOptions, err error)
	// Get retrieves the AwsDefaultVpcDhcpOptions from the indexer for a given namespace and name.
	Get(name string) (*v1.AwsDefaultVpcDhcpOptions, error)
	AwsDefaultVpcDhcpOptionsNamespaceListerExpansion
}

// awsDefaultVpcDhcpOptionsNamespaceLister implements the AwsDefaultVpcDhcpOptionsNamespaceLister
// interface.
type awsDefaultVpcDhcpOptionsNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all AwsDefaultVpcDhcpOptionses in the indexer for a given namespace.
func (s awsDefaultVpcDhcpOptionsNamespaceLister) List(selector labels.Selector) (ret []*v1.AwsDefaultVpcDhcpOptions, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.AwsDefaultVpcDhcpOptions))
	})
	return ret, err
}

// Get retrieves the AwsDefaultVpcDhcpOptions from the indexer for a given namespace and name.
func (s awsDefaultVpcDhcpOptionsNamespaceLister) Get(name string) (*v1.AwsDefaultVpcDhcpOptions, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1.Resource("awsdefaultvpcdhcpoptions"), name)
	}
	return obj.(*v1.AwsDefaultVpcDhcpOptions), nil
}
