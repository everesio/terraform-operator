/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1

import (
	v1 "github.com/trussle/terraform-operator/pkg/apis/aws/v1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// AwsOpsworksInstanceLister helps list AwsOpsworksInstances.
type AwsOpsworksInstanceLister interface {
	// List lists all AwsOpsworksInstances in the indexer.
	List(selector labels.Selector) (ret []*v1.AwsOpsworksInstance, err error)
	// AwsOpsworksInstances returns an object that can list and get AwsOpsworksInstances.
	AwsOpsworksInstances(namespace string) AwsOpsworksInstanceNamespaceLister
	AwsOpsworksInstanceListerExpansion
}

// awsOpsworksInstanceLister implements the AwsOpsworksInstanceLister interface.
type awsOpsworksInstanceLister struct {
	indexer cache.Indexer
}

// NewAwsOpsworksInstanceLister returns a new AwsOpsworksInstanceLister.
func NewAwsOpsworksInstanceLister(indexer cache.Indexer) AwsOpsworksInstanceLister {
	return &awsOpsworksInstanceLister{indexer: indexer}
}

// List lists all AwsOpsworksInstances in the indexer.
func (s *awsOpsworksInstanceLister) List(selector labels.Selector) (ret []*v1.AwsOpsworksInstance, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.AwsOpsworksInstance))
	})
	return ret, err
}

// AwsOpsworksInstances returns an object that can list and get AwsOpsworksInstances.
func (s *awsOpsworksInstanceLister) AwsOpsworksInstances(namespace string) AwsOpsworksInstanceNamespaceLister {
	return awsOpsworksInstanceNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// AwsOpsworksInstanceNamespaceLister helps list and get AwsOpsworksInstances.
type AwsOpsworksInstanceNamespaceLister interface {
	// List lists all AwsOpsworksInstances in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1.AwsOpsworksInstance, err error)
	// Get retrieves the AwsOpsworksInstance from the indexer for a given namespace and name.
	Get(name string) (*v1.AwsOpsworksInstance, error)
	AwsOpsworksInstanceNamespaceListerExpansion
}

// awsOpsworksInstanceNamespaceLister implements the AwsOpsworksInstanceNamespaceLister
// interface.
type awsOpsworksInstanceNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all AwsOpsworksInstances in the indexer for a given namespace.
func (s awsOpsworksInstanceNamespaceLister) List(selector labels.Selector) (ret []*v1.AwsOpsworksInstance, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.AwsOpsworksInstance))
	})
	return ret, err
}

// Get retrieves the AwsOpsworksInstance from the indexer for a given namespace and name.
func (s awsOpsworksInstanceNamespaceLister) Get(name string) (*v1.AwsOpsworksInstance, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1.Resource("awsopsworksinstance"), name)
	}
	return obj.(*v1.AwsOpsworksInstance), nil
}
