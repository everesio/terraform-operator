/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1

import (
	v1 "github.com/trussle/terraform-operator/pkg/apis/aws/v1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// AwsIamUserLoginProfileLister helps list AwsIamUserLoginProfiles.
type AwsIamUserLoginProfileLister interface {
	// List lists all AwsIamUserLoginProfiles in the indexer.
	List(selector labels.Selector) (ret []*v1.AwsIamUserLoginProfile, err error)
	// AwsIamUserLoginProfiles returns an object that can list and get AwsIamUserLoginProfiles.
	AwsIamUserLoginProfiles(namespace string) AwsIamUserLoginProfileNamespaceLister
	AwsIamUserLoginProfileListerExpansion
}

// awsIamUserLoginProfileLister implements the AwsIamUserLoginProfileLister interface.
type awsIamUserLoginProfileLister struct {
	indexer cache.Indexer
}

// NewAwsIamUserLoginProfileLister returns a new AwsIamUserLoginProfileLister.
func NewAwsIamUserLoginProfileLister(indexer cache.Indexer) AwsIamUserLoginProfileLister {
	return &awsIamUserLoginProfileLister{indexer: indexer}
}

// List lists all AwsIamUserLoginProfiles in the indexer.
func (s *awsIamUserLoginProfileLister) List(selector labels.Selector) (ret []*v1.AwsIamUserLoginProfile, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.AwsIamUserLoginProfile))
	})
	return ret, err
}

// AwsIamUserLoginProfiles returns an object that can list and get AwsIamUserLoginProfiles.
func (s *awsIamUserLoginProfileLister) AwsIamUserLoginProfiles(namespace string) AwsIamUserLoginProfileNamespaceLister {
	return awsIamUserLoginProfileNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// AwsIamUserLoginProfileNamespaceLister helps list and get AwsIamUserLoginProfiles.
type AwsIamUserLoginProfileNamespaceLister interface {
	// List lists all AwsIamUserLoginProfiles in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1.AwsIamUserLoginProfile, err error)
	// Get retrieves the AwsIamUserLoginProfile from the indexer for a given namespace and name.
	Get(name string) (*v1.AwsIamUserLoginProfile, error)
	AwsIamUserLoginProfileNamespaceListerExpansion
}

// awsIamUserLoginProfileNamespaceLister implements the AwsIamUserLoginProfileNamespaceLister
// interface.
type awsIamUserLoginProfileNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all AwsIamUserLoginProfiles in the indexer for a given namespace.
func (s awsIamUserLoginProfileNamespaceLister) List(selector labels.Selector) (ret []*v1.AwsIamUserLoginProfile, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.AwsIamUserLoginProfile))
	})
	return ret, err
}

// Get retrieves the AwsIamUserLoginProfile from the indexer for a given namespace and name.
func (s awsIamUserLoginProfileNamespaceLister) Get(name string) (*v1.AwsIamUserLoginProfile, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1.Resource("awsiamuserloginprofile"), name)
	}
	return obj.(*v1.AwsIamUserLoginProfile), nil
}
