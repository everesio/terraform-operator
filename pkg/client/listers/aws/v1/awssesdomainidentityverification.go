/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1

import (
	v1 "github.com/trussle/terraform-operator/pkg/apis/aws/v1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// AwsSesDomainIdentityVerificationLister helps list AwsSesDomainIdentityVerifications.
type AwsSesDomainIdentityVerificationLister interface {
	// List lists all AwsSesDomainIdentityVerifications in the indexer.
	List(selector labels.Selector) (ret []*v1.AwsSesDomainIdentityVerification, err error)
	// AwsSesDomainIdentityVerifications returns an object that can list and get AwsSesDomainIdentityVerifications.
	AwsSesDomainIdentityVerifications(namespace string) AwsSesDomainIdentityVerificationNamespaceLister
	AwsSesDomainIdentityVerificationListerExpansion
}

// awsSesDomainIdentityVerificationLister implements the AwsSesDomainIdentityVerificationLister interface.
type awsSesDomainIdentityVerificationLister struct {
	indexer cache.Indexer
}

// NewAwsSesDomainIdentityVerificationLister returns a new AwsSesDomainIdentityVerificationLister.
func NewAwsSesDomainIdentityVerificationLister(indexer cache.Indexer) AwsSesDomainIdentityVerificationLister {
	return &awsSesDomainIdentityVerificationLister{indexer: indexer}
}

// List lists all AwsSesDomainIdentityVerifications in the indexer.
func (s *awsSesDomainIdentityVerificationLister) List(selector labels.Selector) (ret []*v1.AwsSesDomainIdentityVerification, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.AwsSesDomainIdentityVerification))
	})
	return ret, err
}

// AwsSesDomainIdentityVerifications returns an object that can list and get AwsSesDomainIdentityVerifications.
func (s *awsSesDomainIdentityVerificationLister) AwsSesDomainIdentityVerifications(namespace string) AwsSesDomainIdentityVerificationNamespaceLister {
	return awsSesDomainIdentityVerificationNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// AwsSesDomainIdentityVerificationNamespaceLister helps list and get AwsSesDomainIdentityVerifications.
type AwsSesDomainIdentityVerificationNamespaceLister interface {
	// List lists all AwsSesDomainIdentityVerifications in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1.AwsSesDomainIdentityVerification, err error)
	// Get retrieves the AwsSesDomainIdentityVerification from the indexer for a given namespace and name.
	Get(name string) (*v1.AwsSesDomainIdentityVerification, error)
	AwsSesDomainIdentityVerificationNamespaceListerExpansion
}

// awsSesDomainIdentityVerificationNamespaceLister implements the AwsSesDomainIdentityVerificationNamespaceLister
// interface.
type awsSesDomainIdentityVerificationNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all AwsSesDomainIdentityVerifications in the indexer for a given namespace.
func (s awsSesDomainIdentityVerificationNamespaceLister) List(selector labels.Selector) (ret []*v1.AwsSesDomainIdentityVerification, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.AwsSesDomainIdentityVerification))
	})
	return ret, err
}

// Get retrieves the AwsSesDomainIdentityVerification from the indexer for a given namespace and name.
func (s awsSesDomainIdentityVerificationNamespaceLister) Get(name string) (*v1.AwsSesDomainIdentityVerification, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1.Resource("awssesdomainidentityverification"), name)
	}
	return obj.(*v1.AwsSesDomainIdentityVerification), nil
}
