/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1

import (
	v1 "github.com/trussle/terraform-operator/pkg/apis/aws/v1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// AwsOpsworksRailsAppLayerLister helps list AwsOpsworksRailsAppLayers.
type AwsOpsworksRailsAppLayerLister interface {
	// List lists all AwsOpsworksRailsAppLayers in the indexer.
	List(selector labels.Selector) (ret []*v1.AwsOpsworksRailsAppLayer, err error)
	// AwsOpsworksRailsAppLayers returns an object that can list and get AwsOpsworksRailsAppLayers.
	AwsOpsworksRailsAppLayers(namespace string) AwsOpsworksRailsAppLayerNamespaceLister
	AwsOpsworksRailsAppLayerListerExpansion
}

// awsOpsworksRailsAppLayerLister implements the AwsOpsworksRailsAppLayerLister interface.
type awsOpsworksRailsAppLayerLister struct {
	indexer cache.Indexer
}

// NewAwsOpsworksRailsAppLayerLister returns a new AwsOpsworksRailsAppLayerLister.
func NewAwsOpsworksRailsAppLayerLister(indexer cache.Indexer) AwsOpsworksRailsAppLayerLister {
	return &awsOpsworksRailsAppLayerLister{indexer: indexer}
}

// List lists all AwsOpsworksRailsAppLayers in the indexer.
func (s *awsOpsworksRailsAppLayerLister) List(selector labels.Selector) (ret []*v1.AwsOpsworksRailsAppLayer, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.AwsOpsworksRailsAppLayer))
	})
	return ret, err
}

// AwsOpsworksRailsAppLayers returns an object that can list and get AwsOpsworksRailsAppLayers.
func (s *awsOpsworksRailsAppLayerLister) AwsOpsworksRailsAppLayers(namespace string) AwsOpsworksRailsAppLayerNamespaceLister {
	return awsOpsworksRailsAppLayerNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// AwsOpsworksRailsAppLayerNamespaceLister helps list and get AwsOpsworksRailsAppLayers.
type AwsOpsworksRailsAppLayerNamespaceLister interface {
	// List lists all AwsOpsworksRailsAppLayers in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1.AwsOpsworksRailsAppLayer, err error)
	// Get retrieves the AwsOpsworksRailsAppLayer from the indexer for a given namespace and name.
	Get(name string) (*v1.AwsOpsworksRailsAppLayer, error)
	AwsOpsworksRailsAppLayerNamespaceListerExpansion
}

// awsOpsworksRailsAppLayerNamespaceLister implements the AwsOpsworksRailsAppLayerNamespaceLister
// interface.
type awsOpsworksRailsAppLayerNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all AwsOpsworksRailsAppLayers in the indexer for a given namespace.
func (s awsOpsworksRailsAppLayerNamespaceLister) List(selector labels.Selector) (ret []*v1.AwsOpsworksRailsAppLayer, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.AwsOpsworksRailsAppLayer))
	})
	return ret, err
}

// Get retrieves the AwsOpsworksRailsAppLayer from the indexer for a given namespace and name.
func (s awsOpsworksRailsAppLayerNamespaceLister) Get(name string) (*v1.AwsOpsworksRailsAppLayer, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1.Resource("awsopsworksrailsapplayer"), name)
	}
	return obj.(*v1.AwsOpsworksRailsAppLayer), nil
}
