/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1

import (
	v1 "github.com/trussle/terraform-operator/pkg/apis/aws/v1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// AwsSecretsmanagerSecretVersionLister helps list AwsSecretsmanagerSecretVersions.
type AwsSecretsmanagerSecretVersionLister interface {
	// List lists all AwsSecretsmanagerSecretVersions in the indexer.
	List(selector labels.Selector) (ret []*v1.AwsSecretsmanagerSecretVersion, err error)
	// AwsSecretsmanagerSecretVersions returns an object that can list and get AwsSecretsmanagerSecretVersions.
	AwsSecretsmanagerSecretVersions(namespace string) AwsSecretsmanagerSecretVersionNamespaceLister
	AwsSecretsmanagerSecretVersionListerExpansion
}

// awsSecretsmanagerSecretVersionLister implements the AwsSecretsmanagerSecretVersionLister interface.
type awsSecretsmanagerSecretVersionLister struct {
	indexer cache.Indexer
}

// NewAwsSecretsmanagerSecretVersionLister returns a new AwsSecretsmanagerSecretVersionLister.
func NewAwsSecretsmanagerSecretVersionLister(indexer cache.Indexer) AwsSecretsmanagerSecretVersionLister {
	return &awsSecretsmanagerSecretVersionLister{indexer: indexer}
}

// List lists all AwsSecretsmanagerSecretVersions in the indexer.
func (s *awsSecretsmanagerSecretVersionLister) List(selector labels.Selector) (ret []*v1.AwsSecretsmanagerSecretVersion, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.AwsSecretsmanagerSecretVersion))
	})
	return ret, err
}

// AwsSecretsmanagerSecretVersions returns an object that can list and get AwsSecretsmanagerSecretVersions.
func (s *awsSecretsmanagerSecretVersionLister) AwsSecretsmanagerSecretVersions(namespace string) AwsSecretsmanagerSecretVersionNamespaceLister {
	return awsSecretsmanagerSecretVersionNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// AwsSecretsmanagerSecretVersionNamespaceLister helps list and get AwsSecretsmanagerSecretVersions.
type AwsSecretsmanagerSecretVersionNamespaceLister interface {
	// List lists all AwsSecretsmanagerSecretVersions in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1.AwsSecretsmanagerSecretVersion, err error)
	// Get retrieves the AwsSecretsmanagerSecretVersion from the indexer for a given namespace and name.
	Get(name string) (*v1.AwsSecretsmanagerSecretVersion, error)
	AwsSecretsmanagerSecretVersionNamespaceListerExpansion
}

// awsSecretsmanagerSecretVersionNamespaceLister implements the AwsSecretsmanagerSecretVersionNamespaceLister
// interface.
type awsSecretsmanagerSecretVersionNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all AwsSecretsmanagerSecretVersions in the indexer for a given namespace.
func (s awsSecretsmanagerSecretVersionNamespaceLister) List(selector labels.Selector) (ret []*v1.AwsSecretsmanagerSecretVersion, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.AwsSecretsmanagerSecretVersion))
	})
	return ret, err
}

// Get retrieves the AwsSecretsmanagerSecretVersion from the indexer for a given namespace and name.
func (s awsSecretsmanagerSecretVersionNamespaceLister) Get(name string) (*v1.AwsSecretsmanagerSecretVersion, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1.Resource("awssecretsmanagersecretversion"), name)
	}
	return obj.(*v1.AwsSecretsmanagerSecretVersion), nil
}
