/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1

import (
	v1 "github.com/trussle/terraform-operator/pkg/apis/aws/v1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// AwsCodepipelineLister helps list AwsCodepipelines.
type AwsCodepipelineLister interface {
	// List lists all AwsCodepipelines in the indexer.
	List(selector labels.Selector) (ret []*v1.AwsCodepipeline, err error)
	// AwsCodepipelines returns an object that can list and get AwsCodepipelines.
	AwsCodepipelines(namespace string) AwsCodepipelineNamespaceLister
	AwsCodepipelineListerExpansion
}

// awsCodepipelineLister implements the AwsCodepipelineLister interface.
type awsCodepipelineLister struct {
	indexer cache.Indexer
}

// NewAwsCodepipelineLister returns a new AwsCodepipelineLister.
func NewAwsCodepipelineLister(indexer cache.Indexer) AwsCodepipelineLister {
	return &awsCodepipelineLister{indexer: indexer}
}

// List lists all AwsCodepipelines in the indexer.
func (s *awsCodepipelineLister) List(selector labels.Selector) (ret []*v1.AwsCodepipeline, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.AwsCodepipeline))
	})
	return ret, err
}

// AwsCodepipelines returns an object that can list and get AwsCodepipelines.
func (s *awsCodepipelineLister) AwsCodepipelines(namespace string) AwsCodepipelineNamespaceLister {
	return awsCodepipelineNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// AwsCodepipelineNamespaceLister helps list and get AwsCodepipelines.
type AwsCodepipelineNamespaceLister interface {
	// List lists all AwsCodepipelines in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1.AwsCodepipeline, err error)
	// Get retrieves the AwsCodepipeline from the indexer for a given namespace and name.
	Get(name string) (*v1.AwsCodepipeline, error)
	AwsCodepipelineNamespaceListerExpansion
}

// awsCodepipelineNamespaceLister implements the AwsCodepipelineNamespaceLister
// interface.
type awsCodepipelineNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all AwsCodepipelines in the indexer for a given namespace.
func (s awsCodepipelineNamespaceLister) List(selector labels.Selector) (ret []*v1.AwsCodepipeline, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.AwsCodepipeline))
	})
	return ret, err
}

// Get retrieves the AwsCodepipeline from the indexer for a given namespace and name.
func (s awsCodepipelineNamespaceLister) Get(name string) (*v1.AwsCodepipeline, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1.Resource("awscodepipeline"), name)
	}
	return obj.(*v1.AwsCodepipeline), nil
}
