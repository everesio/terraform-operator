/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1

import (
	v1 "github.com/trussle/terraform-operator/pkg/apis/aws/v1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// AwsSnsPlatformApplicationLister helps list AwsSnsPlatformApplications.
type AwsSnsPlatformApplicationLister interface {
	// List lists all AwsSnsPlatformApplications in the indexer.
	List(selector labels.Selector) (ret []*v1.AwsSnsPlatformApplication, err error)
	// AwsSnsPlatformApplications returns an object that can list and get AwsSnsPlatformApplications.
	AwsSnsPlatformApplications(namespace string) AwsSnsPlatformApplicationNamespaceLister
	AwsSnsPlatformApplicationListerExpansion
}

// awsSnsPlatformApplicationLister implements the AwsSnsPlatformApplicationLister interface.
type awsSnsPlatformApplicationLister struct {
	indexer cache.Indexer
}

// NewAwsSnsPlatformApplicationLister returns a new AwsSnsPlatformApplicationLister.
func NewAwsSnsPlatformApplicationLister(indexer cache.Indexer) AwsSnsPlatformApplicationLister {
	return &awsSnsPlatformApplicationLister{indexer: indexer}
}

// List lists all AwsSnsPlatformApplications in the indexer.
func (s *awsSnsPlatformApplicationLister) List(selector labels.Selector) (ret []*v1.AwsSnsPlatformApplication, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.AwsSnsPlatformApplication))
	})
	return ret, err
}

// AwsSnsPlatformApplications returns an object that can list and get AwsSnsPlatformApplications.
func (s *awsSnsPlatformApplicationLister) AwsSnsPlatformApplications(namespace string) AwsSnsPlatformApplicationNamespaceLister {
	return awsSnsPlatformApplicationNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// AwsSnsPlatformApplicationNamespaceLister helps list and get AwsSnsPlatformApplications.
type AwsSnsPlatformApplicationNamespaceLister interface {
	// List lists all AwsSnsPlatformApplications in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1.AwsSnsPlatformApplication, err error)
	// Get retrieves the AwsSnsPlatformApplication from the indexer for a given namespace and name.
	Get(name string) (*v1.AwsSnsPlatformApplication, error)
	AwsSnsPlatformApplicationNamespaceListerExpansion
}

// awsSnsPlatformApplicationNamespaceLister implements the AwsSnsPlatformApplicationNamespaceLister
// interface.
type awsSnsPlatformApplicationNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all AwsSnsPlatformApplications in the indexer for a given namespace.
func (s awsSnsPlatformApplicationNamespaceLister) List(selector labels.Selector) (ret []*v1.AwsSnsPlatformApplication, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.AwsSnsPlatformApplication))
	})
	return ret, err
}

// Get retrieves the AwsSnsPlatformApplication from the indexer for a given namespace and name.
func (s awsSnsPlatformApplicationNamespaceLister) Get(name string) (*v1.AwsSnsPlatformApplication, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1.Resource("awssnsplatformapplication"), name)
	}
	return obj.(*v1.AwsSnsPlatformApplication), nil
}
