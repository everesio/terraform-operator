/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1

import (
	v1 "github.com/trussle/terraform-operator/pkg/apis/aws/v1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// AwsEcsServiceLister helps list AwsEcsServices.
type AwsEcsServiceLister interface {
	// List lists all AwsEcsServices in the indexer.
	List(selector labels.Selector) (ret []*v1.AwsEcsService, err error)
	// AwsEcsServices returns an object that can list and get AwsEcsServices.
	AwsEcsServices(namespace string) AwsEcsServiceNamespaceLister
	AwsEcsServiceListerExpansion
}

// awsEcsServiceLister implements the AwsEcsServiceLister interface.
type awsEcsServiceLister struct {
	indexer cache.Indexer
}

// NewAwsEcsServiceLister returns a new AwsEcsServiceLister.
func NewAwsEcsServiceLister(indexer cache.Indexer) AwsEcsServiceLister {
	return &awsEcsServiceLister{indexer: indexer}
}

// List lists all AwsEcsServices in the indexer.
func (s *awsEcsServiceLister) List(selector labels.Selector) (ret []*v1.AwsEcsService, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.AwsEcsService))
	})
	return ret, err
}

// AwsEcsServices returns an object that can list and get AwsEcsServices.
func (s *awsEcsServiceLister) AwsEcsServices(namespace string) AwsEcsServiceNamespaceLister {
	return awsEcsServiceNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// AwsEcsServiceNamespaceLister helps list and get AwsEcsServices.
type AwsEcsServiceNamespaceLister interface {
	// List lists all AwsEcsServices in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1.AwsEcsService, err error)
	// Get retrieves the AwsEcsService from the indexer for a given namespace and name.
	Get(name string) (*v1.AwsEcsService, error)
	AwsEcsServiceNamespaceListerExpansion
}

// awsEcsServiceNamespaceLister implements the AwsEcsServiceNamespaceLister
// interface.
type awsEcsServiceNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all AwsEcsServices in the indexer for a given namespace.
func (s awsEcsServiceNamespaceLister) List(selector labels.Selector) (ret []*v1.AwsEcsService, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.AwsEcsService))
	})
	return ret, err
}

// Get retrieves the AwsEcsService from the indexer for a given namespace and name.
func (s awsEcsServiceNamespaceLister) Get(name string) (*v1.AwsEcsService, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1.Resource("awsecsservice"), name)
	}
	return obj.(*v1.AwsEcsService), nil
}
