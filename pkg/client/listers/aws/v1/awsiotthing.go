/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1

import (
	v1 "github.com/trussle/terraform-operator/pkg/apis/aws/v1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// AwsIotThingLister helps list AwsIotThings.
type AwsIotThingLister interface {
	// List lists all AwsIotThings in the indexer.
	List(selector labels.Selector) (ret []*v1.AwsIotThing, err error)
	// AwsIotThings returns an object that can list and get AwsIotThings.
	AwsIotThings(namespace string) AwsIotThingNamespaceLister
	AwsIotThingListerExpansion
}

// awsIotThingLister implements the AwsIotThingLister interface.
type awsIotThingLister struct {
	indexer cache.Indexer
}

// NewAwsIotThingLister returns a new AwsIotThingLister.
func NewAwsIotThingLister(indexer cache.Indexer) AwsIotThingLister {
	return &awsIotThingLister{indexer: indexer}
}

// List lists all AwsIotThings in the indexer.
func (s *awsIotThingLister) List(selector labels.Selector) (ret []*v1.AwsIotThing, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.AwsIotThing))
	})
	return ret, err
}

// AwsIotThings returns an object that can list and get AwsIotThings.
func (s *awsIotThingLister) AwsIotThings(namespace string) AwsIotThingNamespaceLister {
	return awsIotThingNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// AwsIotThingNamespaceLister helps list and get AwsIotThings.
type AwsIotThingNamespaceLister interface {
	// List lists all AwsIotThings in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1.AwsIotThing, err error)
	// Get retrieves the AwsIotThing from the indexer for a given namespace and name.
	Get(name string) (*v1.AwsIotThing, error)
	AwsIotThingNamespaceListerExpansion
}

// awsIotThingNamespaceLister implements the AwsIotThingNamespaceLister
// interface.
type awsIotThingNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all AwsIotThings in the indexer for a given namespace.
func (s awsIotThingNamespaceLister) List(selector labels.Selector) (ret []*v1.AwsIotThing, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.AwsIotThing))
	})
	return ret, err
}

// Get retrieves the AwsIotThing from the indexer for a given namespace and name.
func (s awsIotThingNamespaceLister) Get(name string) (*v1.AwsIotThing, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1.Resource("awsiotthing"), name)
	}
	return obj.(*v1.AwsIotThing), nil
}
