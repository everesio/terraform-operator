/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1

import (
	v1 "github.com/trussle/terraform-operator/pkg/apis/aws/v1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// AwsAthenaDatabaseLister helps list AwsAthenaDatabases.
type AwsAthenaDatabaseLister interface {
	// List lists all AwsAthenaDatabases in the indexer.
	List(selector labels.Selector) (ret []*v1.AwsAthenaDatabase, err error)
	// AwsAthenaDatabases returns an object that can list and get AwsAthenaDatabases.
	AwsAthenaDatabases(namespace string) AwsAthenaDatabaseNamespaceLister
	AwsAthenaDatabaseListerExpansion
}

// awsAthenaDatabaseLister implements the AwsAthenaDatabaseLister interface.
type awsAthenaDatabaseLister struct {
	indexer cache.Indexer
}

// NewAwsAthenaDatabaseLister returns a new AwsAthenaDatabaseLister.
func NewAwsAthenaDatabaseLister(indexer cache.Indexer) AwsAthenaDatabaseLister {
	return &awsAthenaDatabaseLister{indexer: indexer}
}

// List lists all AwsAthenaDatabases in the indexer.
func (s *awsAthenaDatabaseLister) List(selector labels.Selector) (ret []*v1.AwsAthenaDatabase, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.AwsAthenaDatabase))
	})
	return ret, err
}

// AwsAthenaDatabases returns an object that can list and get AwsAthenaDatabases.
func (s *awsAthenaDatabaseLister) AwsAthenaDatabases(namespace string) AwsAthenaDatabaseNamespaceLister {
	return awsAthenaDatabaseNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// AwsAthenaDatabaseNamespaceLister helps list and get AwsAthenaDatabases.
type AwsAthenaDatabaseNamespaceLister interface {
	// List lists all AwsAthenaDatabases in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1.AwsAthenaDatabase, err error)
	// Get retrieves the AwsAthenaDatabase from the indexer for a given namespace and name.
	Get(name string) (*v1.AwsAthenaDatabase, error)
	AwsAthenaDatabaseNamespaceListerExpansion
}

// awsAthenaDatabaseNamespaceLister implements the AwsAthenaDatabaseNamespaceLister
// interface.
type awsAthenaDatabaseNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all AwsAthenaDatabases in the indexer for a given namespace.
func (s awsAthenaDatabaseNamespaceLister) List(selector labels.Selector) (ret []*v1.AwsAthenaDatabase, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.AwsAthenaDatabase))
	})
	return ret, err
}

// Get retrieves the AwsAthenaDatabase from the indexer for a given namespace and name.
func (s awsAthenaDatabaseNamespaceLister) Get(name string) (*v1.AwsAthenaDatabase, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1.Resource("awsathenadatabase"), name)
	}
	return obj.(*v1.AwsAthenaDatabase), nil
}
