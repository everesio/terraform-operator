/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1

import (
	v1 "github.com/trussle/terraform-operator/pkg/apis/aws/v1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// AwsLbCookieStickinessPolicyLister helps list AwsLbCookieStickinessPolicies.
type AwsLbCookieStickinessPolicyLister interface {
	// List lists all AwsLbCookieStickinessPolicies in the indexer.
	List(selector labels.Selector) (ret []*v1.AwsLbCookieStickinessPolicy, err error)
	// AwsLbCookieStickinessPolicies returns an object that can list and get AwsLbCookieStickinessPolicies.
	AwsLbCookieStickinessPolicies(namespace string) AwsLbCookieStickinessPolicyNamespaceLister
	AwsLbCookieStickinessPolicyListerExpansion
}

// awsLbCookieStickinessPolicyLister implements the AwsLbCookieStickinessPolicyLister interface.
type awsLbCookieStickinessPolicyLister struct {
	indexer cache.Indexer
}

// NewAwsLbCookieStickinessPolicyLister returns a new AwsLbCookieStickinessPolicyLister.
func NewAwsLbCookieStickinessPolicyLister(indexer cache.Indexer) AwsLbCookieStickinessPolicyLister {
	return &awsLbCookieStickinessPolicyLister{indexer: indexer}
}

// List lists all AwsLbCookieStickinessPolicies in the indexer.
func (s *awsLbCookieStickinessPolicyLister) List(selector labels.Selector) (ret []*v1.AwsLbCookieStickinessPolicy, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.AwsLbCookieStickinessPolicy))
	})
	return ret, err
}

// AwsLbCookieStickinessPolicies returns an object that can list and get AwsLbCookieStickinessPolicies.
func (s *awsLbCookieStickinessPolicyLister) AwsLbCookieStickinessPolicies(namespace string) AwsLbCookieStickinessPolicyNamespaceLister {
	return awsLbCookieStickinessPolicyNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// AwsLbCookieStickinessPolicyNamespaceLister helps list and get AwsLbCookieStickinessPolicies.
type AwsLbCookieStickinessPolicyNamespaceLister interface {
	// List lists all AwsLbCookieStickinessPolicies in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1.AwsLbCookieStickinessPolicy, err error)
	// Get retrieves the AwsLbCookieStickinessPolicy from the indexer for a given namespace and name.
	Get(name string) (*v1.AwsLbCookieStickinessPolicy, error)
	AwsLbCookieStickinessPolicyNamespaceListerExpansion
}

// awsLbCookieStickinessPolicyNamespaceLister implements the AwsLbCookieStickinessPolicyNamespaceLister
// interface.
type awsLbCookieStickinessPolicyNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all AwsLbCookieStickinessPolicies in the indexer for a given namespace.
func (s awsLbCookieStickinessPolicyNamespaceLister) List(selector labels.Selector) (ret []*v1.AwsLbCookieStickinessPolicy, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.AwsLbCookieStickinessPolicy))
	})
	return ret, err
}

// Get retrieves the AwsLbCookieStickinessPolicy from the indexer for a given namespace and name.
func (s awsLbCookieStickinessPolicyNamespaceLister) Get(name string) (*v1.AwsLbCookieStickinessPolicy, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1.Resource("awslbcookiestickinesspolicy"), name)
	}
	return obj.(*v1.AwsLbCookieStickinessPolicy), nil
}
