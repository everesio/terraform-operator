/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1

import (
	v1 "github.com/trussle/terraform-operator/pkg/apis/aws/v1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// AwsIamUserSshKeyLister helps list AwsIamUserSshKeys.
type AwsIamUserSshKeyLister interface {
	// List lists all AwsIamUserSshKeys in the indexer.
	List(selector labels.Selector) (ret []*v1.AwsIamUserSshKey, err error)
	// AwsIamUserSshKeys returns an object that can list and get AwsIamUserSshKeys.
	AwsIamUserSshKeys(namespace string) AwsIamUserSshKeyNamespaceLister
	AwsIamUserSshKeyListerExpansion
}

// awsIamUserSshKeyLister implements the AwsIamUserSshKeyLister interface.
type awsIamUserSshKeyLister struct {
	indexer cache.Indexer
}

// NewAwsIamUserSshKeyLister returns a new AwsIamUserSshKeyLister.
func NewAwsIamUserSshKeyLister(indexer cache.Indexer) AwsIamUserSshKeyLister {
	return &awsIamUserSshKeyLister{indexer: indexer}
}

// List lists all AwsIamUserSshKeys in the indexer.
func (s *awsIamUserSshKeyLister) List(selector labels.Selector) (ret []*v1.AwsIamUserSshKey, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.AwsIamUserSshKey))
	})
	return ret, err
}

// AwsIamUserSshKeys returns an object that can list and get AwsIamUserSshKeys.
func (s *awsIamUserSshKeyLister) AwsIamUserSshKeys(namespace string) AwsIamUserSshKeyNamespaceLister {
	return awsIamUserSshKeyNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// AwsIamUserSshKeyNamespaceLister helps list and get AwsIamUserSshKeys.
type AwsIamUserSshKeyNamespaceLister interface {
	// List lists all AwsIamUserSshKeys in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1.AwsIamUserSshKey, err error)
	// Get retrieves the AwsIamUserSshKey from the indexer for a given namespace and name.
	Get(name string) (*v1.AwsIamUserSshKey, error)
	AwsIamUserSshKeyNamespaceListerExpansion
}

// awsIamUserSshKeyNamespaceLister implements the AwsIamUserSshKeyNamespaceLister
// interface.
type awsIamUserSshKeyNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all AwsIamUserSshKeys in the indexer for a given namespace.
func (s awsIamUserSshKeyNamespaceLister) List(selector labels.Selector) (ret []*v1.AwsIamUserSshKey, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.AwsIamUserSshKey))
	})
	return ret, err
}

// Get retrieves the AwsIamUserSshKey from the indexer for a given namespace and name.
func (s awsIamUserSshKeyNamespaceLister) Get(name string) (*v1.AwsIamUserSshKey, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1.Resource("awsiamusersshkey"), name)
	}
	return obj.(*v1.AwsIamUserSshKey), nil
}
