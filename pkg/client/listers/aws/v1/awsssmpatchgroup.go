/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1

import (
	v1 "github.com/trussle/terraform-operator/pkg/apis/aws/v1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// AwsSsmPatchGroupLister helps list AwsSsmPatchGroups.
type AwsSsmPatchGroupLister interface {
	// List lists all AwsSsmPatchGroups in the indexer.
	List(selector labels.Selector) (ret []*v1.AwsSsmPatchGroup, err error)
	// AwsSsmPatchGroups returns an object that can list and get AwsSsmPatchGroups.
	AwsSsmPatchGroups(namespace string) AwsSsmPatchGroupNamespaceLister
	AwsSsmPatchGroupListerExpansion
}

// awsSsmPatchGroupLister implements the AwsSsmPatchGroupLister interface.
type awsSsmPatchGroupLister struct {
	indexer cache.Indexer
}

// NewAwsSsmPatchGroupLister returns a new AwsSsmPatchGroupLister.
func NewAwsSsmPatchGroupLister(indexer cache.Indexer) AwsSsmPatchGroupLister {
	return &awsSsmPatchGroupLister{indexer: indexer}
}

// List lists all AwsSsmPatchGroups in the indexer.
func (s *awsSsmPatchGroupLister) List(selector labels.Selector) (ret []*v1.AwsSsmPatchGroup, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.AwsSsmPatchGroup))
	})
	return ret, err
}

// AwsSsmPatchGroups returns an object that can list and get AwsSsmPatchGroups.
func (s *awsSsmPatchGroupLister) AwsSsmPatchGroups(namespace string) AwsSsmPatchGroupNamespaceLister {
	return awsSsmPatchGroupNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// AwsSsmPatchGroupNamespaceLister helps list and get AwsSsmPatchGroups.
type AwsSsmPatchGroupNamespaceLister interface {
	// List lists all AwsSsmPatchGroups in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1.AwsSsmPatchGroup, err error)
	// Get retrieves the AwsSsmPatchGroup from the indexer for a given namespace and name.
	Get(name string) (*v1.AwsSsmPatchGroup, error)
	AwsSsmPatchGroupNamespaceListerExpansion
}

// awsSsmPatchGroupNamespaceLister implements the AwsSsmPatchGroupNamespaceLister
// interface.
type awsSsmPatchGroupNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all AwsSsmPatchGroups in the indexer for a given namespace.
func (s awsSsmPatchGroupNamespaceLister) List(selector labels.Selector) (ret []*v1.AwsSsmPatchGroup, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.AwsSsmPatchGroup))
	})
	return ret, err
}

// Get retrieves the AwsSsmPatchGroup from the indexer for a given namespace and name.
func (s awsSsmPatchGroupNamespaceLister) Get(name string) (*v1.AwsSsmPatchGroup, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1.Resource("awsssmpatchgroup"), name)
	}
	return obj.(*v1.AwsSsmPatchGroup), nil
}
