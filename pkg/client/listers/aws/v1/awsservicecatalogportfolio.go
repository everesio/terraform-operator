/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1

import (
	v1 "github.com/trussle/terraform-operator/pkg/apis/aws/v1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// AwsServicecatalogPortfolioLister helps list AwsServicecatalogPortfolios.
type AwsServicecatalogPortfolioLister interface {
	// List lists all AwsServicecatalogPortfolios in the indexer.
	List(selector labels.Selector) (ret []*v1.AwsServicecatalogPortfolio, err error)
	// AwsServicecatalogPortfolios returns an object that can list and get AwsServicecatalogPortfolios.
	AwsServicecatalogPortfolios(namespace string) AwsServicecatalogPortfolioNamespaceLister
	AwsServicecatalogPortfolioListerExpansion
}

// awsServicecatalogPortfolioLister implements the AwsServicecatalogPortfolioLister interface.
type awsServicecatalogPortfolioLister struct {
	indexer cache.Indexer
}

// NewAwsServicecatalogPortfolioLister returns a new AwsServicecatalogPortfolioLister.
func NewAwsServicecatalogPortfolioLister(indexer cache.Indexer) AwsServicecatalogPortfolioLister {
	return &awsServicecatalogPortfolioLister{indexer: indexer}
}

// List lists all AwsServicecatalogPortfolios in the indexer.
func (s *awsServicecatalogPortfolioLister) List(selector labels.Selector) (ret []*v1.AwsServicecatalogPortfolio, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.AwsServicecatalogPortfolio))
	})
	return ret, err
}

// AwsServicecatalogPortfolios returns an object that can list and get AwsServicecatalogPortfolios.
func (s *awsServicecatalogPortfolioLister) AwsServicecatalogPortfolios(namespace string) AwsServicecatalogPortfolioNamespaceLister {
	return awsServicecatalogPortfolioNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// AwsServicecatalogPortfolioNamespaceLister helps list and get AwsServicecatalogPortfolios.
type AwsServicecatalogPortfolioNamespaceLister interface {
	// List lists all AwsServicecatalogPortfolios in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1.AwsServicecatalogPortfolio, err error)
	// Get retrieves the AwsServicecatalogPortfolio from the indexer for a given namespace and name.
	Get(name string) (*v1.AwsServicecatalogPortfolio, error)
	AwsServicecatalogPortfolioNamespaceListerExpansion
}

// awsServicecatalogPortfolioNamespaceLister implements the AwsServicecatalogPortfolioNamespaceLister
// interface.
type awsServicecatalogPortfolioNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all AwsServicecatalogPortfolios in the indexer for a given namespace.
func (s awsServicecatalogPortfolioNamespaceLister) List(selector labels.Selector) (ret []*v1.AwsServicecatalogPortfolio, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.AwsServicecatalogPortfolio))
	})
	return ret, err
}

// Get retrieves the AwsServicecatalogPortfolio from the indexer for a given namespace and name.
func (s awsServicecatalogPortfolioNamespaceLister) Get(name string) (*v1.AwsServicecatalogPortfolio, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1.Resource("awsservicecatalogportfolio"), name)
	}
	return obj.(*v1.AwsServicecatalogPortfolio), nil
}
