/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1

import (
	v1 "github.com/trussle/terraform-operator/pkg/apis/aws/v1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// AwsOrganizationsPolicyAttachmentLister helps list AwsOrganizationsPolicyAttachments.
type AwsOrganizationsPolicyAttachmentLister interface {
	// List lists all AwsOrganizationsPolicyAttachments in the indexer.
	List(selector labels.Selector) (ret []*v1.AwsOrganizationsPolicyAttachment, err error)
	// AwsOrganizationsPolicyAttachments returns an object that can list and get AwsOrganizationsPolicyAttachments.
	AwsOrganizationsPolicyAttachments(namespace string) AwsOrganizationsPolicyAttachmentNamespaceLister
	AwsOrganizationsPolicyAttachmentListerExpansion
}

// awsOrganizationsPolicyAttachmentLister implements the AwsOrganizationsPolicyAttachmentLister interface.
type awsOrganizationsPolicyAttachmentLister struct {
	indexer cache.Indexer
}

// NewAwsOrganizationsPolicyAttachmentLister returns a new AwsOrganizationsPolicyAttachmentLister.
func NewAwsOrganizationsPolicyAttachmentLister(indexer cache.Indexer) AwsOrganizationsPolicyAttachmentLister {
	return &awsOrganizationsPolicyAttachmentLister{indexer: indexer}
}

// List lists all AwsOrganizationsPolicyAttachments in the indexer.
func (s *awsOrganizationsPolicyAttachmentLister) List(selector labels.Selector) (ret []*v1.AwsOrganizationsPolicyAttachment, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.AwsOrganizationsPolicyAttachment))
	})
	return ret, err
}

// AwsOrganizationsPolicyAttachments returns an object that can list and get AwsOrganizationsPolicyAttachments.
func (s *awsOrganizationsPolicyAttachmentLister) AwsOrganizationsPolicyAttachments(namespace string) AwsOrganizationsPolicyAttachmentNamespaceLister {
	return awsOrganizationsPolicyAttachmentNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// AwsOrganizationsPolicyAttachmentNamespaceLister helps list and get AwsOrganizationsPolicyAttachments.
type AwsOrganizationsPolicyAttachmentNamespaceLister interface {
	// List lists all AwsOrganizationsPolicyAttachments in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1.AwsOrganizationsPolicyAttachment, err error)
	// Get retrieves the AwsOrganizationsPolicyAttachment from the indexer for a given namespace and name.
	Get(name string) (*v1.AwsOrganizationsPolicyAttachment, error)
	AwsOrganizationsPolicyAttachmentNamespaceListerExpansion
}

// awsOrganizationsPolicyAttachmentNamespaceLister implements the AwsOrganizationsPolicyAttachmentNamespaceLister
// interface.
type awsOrganizationsPolicyAttachmentNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all AwsOrganizationsPolicyAttachments in the indexer for a given namespace.
func (s awsOrganizationsPolicyAttachmentNamespaceLister) List(selector labels.Selector) (ret []*v1.AwsOrganizationsPolicyAttachment, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.AwsOrganizationsPolicyAttachment))
	})
	return ret, err
}

// Get retrieves the AwsOrganizationsPolicyAttachment from the indexer for a given namespace and name.
func (s awsOrganizationsPolicyAttachmentNamespaceLister) Get(name string) (*v1.AwsOrganizationsPolicyAttachment, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1.Resource("awsorganizationspolicyattachment"), name)
	}
	return obj.(*v1.AwsOrganizationsPolicyAttachment), nil
}
