/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1

import (
	v1 "github.com/trussle/terraform-operator/pkg/apis/aws/v1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// AwsLaunchTemplateLister helps list AwsLaunchTemplates.
type AwsLaunchTemplateLister interface {
	// List lists all AwsLaunchTemplates in the indexer.
	List(selector labels.Selector) (ret []*v1.AwsLaunchTemplate, err error)
	// AwsLaunchTemplates returns an object that can list and get AwsLaunchTemplates.
	AwsLaunchTemplates(namespace string) AwsLaunchTemplateNamespaceLister
	AwsLaunchTemplateListerExpansion
}

// awsLaunchTemplateLister implements the AwsLaunchTemplateLister interface.
type awsLaunchTemplateLister struct {
	indexer cache.Indexer
}

// NewAwsLaunchTemplateLister returns a new AwsLaunchTemplateLister.
func NewAwsLaunchTemplateLister(indexer cache.Indexer) AwsLaunchTemplateLister {
	return &awsLaunchTemplateLister{indexer: indexer}
}

// List lists all AwsLaunchTemplates in the indexer.
func (s *awsLaunchTemplateLister) List(selector labels.Selector) (ret []*v1.AwsLaunchTemplate, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.AwsLaunchTemplate))
	})
	return ret, err
}

// AwsLaunchTemplates returns an object that can list and get AwsLaunchTemplates.
func (s *awsLaunchTemplateLister) AwsLaunchTemplates(namespace string) AwsLaunchTemplateNamespaceLister {
	return awsLaunchTemplateNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// AwsLaunchTemplateNamespaceLister helps list and get AwsLaunchTemplates.
type AwsLaunchTemplateNamespaceLister interface {
	// List lists all AwsLaunchTemplates in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1.AwsLaunchTemplate, err error)
	// Get retrieves the AwsLaunchTemplate from the indexer for a given namespace and name.
	Get(name string) (*v1.AwsLaunchTemplate, error)
	AwsLaunchTemplateNamespaceListerExpansion
}

// awsLaunchTemplateNamespaceLister implements the AwsLaunchTemplateNamespaceLister
// interface.
type awsLaunchTemplateNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all AwsLaunchTemplates in the indexer for a given namespace.
func (s awsLaunchTemplateNamespaceLister) List(selector labels.Selector) (ret []*v1.AwsLaunchTemplate, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.AwsLaunchTemplate))
	})
	return ret, err
}

// Get retrieves the AwsLaunchTemplate from the indexer for a given namespace and name.
func (s awsLaunchTemplateNamespaceLister) Get(name string) (*v1.AwsLaunchTemplate, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1.Resource("awslaunchtemplate"), name)
	}
	return obj.(*v1.AwsLaunchTemplate), nil
}
