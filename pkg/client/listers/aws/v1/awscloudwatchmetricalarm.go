/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1

import (
	v1 "github.com/trussle/terraform-operator/pkg/apis/aws/v1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// AwsCloudwatchMetricAlarmLister helps list AwsCloudwatchMetricAlarms.
type AwsCloudwatchMetricAlarmLister interface {
	// List lists all AwsCloudwatchMetricAlarms in the indexer.
	List(selector labels.Selector) (ret []*v1.AwsCloudwatchMetricAlarm, err error)
	// AwsCloudwatchMetricAlarms returns an object that can list and get AwsCloudwatchMetricAlarms.
	AwsCloudwatchMetricAlarms(namespace string) AwsCloudwatchMetricAlarmNamespaceLister
	AwsCloudwatchMetricAlarmListerExpansion
}

// awsCloudwatchMetricAlarmLister implements the AwsCloudwatchMetricAlarmLister interface.
type awsCloudwatchMetricAlarmLister struct {
	indexer cache.Indexer
}

// NewAwsCloudwatchMetricAlarmLister returns a new AwsCloudwatchMetricAlarmLister.
func NewAwsCloudwatchMetricAlarmLister(indexer cache.Indexer) AwsCloudwatchMetricAlarmLister {
	return &awsCloudwatchMetricAlarmLister{indexer: indexer}
}

// List lists all AwsCloudwatchMetricAlarms in the indexer.
func (s *awsCloudwatchMetricAlarmLister) List(selector labels.Selector) (ret []*v1.AwsCloudwatchMetricAlarm, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.AwsCloudwatchMetricAlarm))
	})
	return ret, err
}

// AwsCloudwatchMetricAlarms returns an object that can list and get AwsCloudwatchMetricAlarms.
func (s *awsCloudwatchMetricAlarmLister) AwsCloudwatchMetricAlarms(namespace string) AwsCloudwatchMetricAlarmNamespaceLister {
	return awsCloudwatchMetricAlarmNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// AwsCloudwatchMetricAlarmNamespaceLister helps list and get AwsCloudwatchMetricAlarms.
type AwsCloudwatchMetricAlarmNamespaceLister interface {
	// List lists all AwsCloudwatchMetricAlarms in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1.AwsCloudwatchMetricAlarm, err error)
	// Get retrieves the AwsCloudwatchMetricAlarm from the indexer for a given namespace and name.
	Get(name string) (*v1.AwsCloudwatchMetricAlarm, error)
	AwsCloudwatchMetricAlarmNamespaceListerExpansion
}

// awsCloudwatchMetricAlarmNamespaceLister implements the AwsCloudwatchMetricAlarmNamespaceLister
// interface.
type awsCloudwatchMetricAlarmNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all AwsCloudwatchMetricAlarms in the indexer for a given namespace.
func (s awsCloudwatchMetricAlarmNamespaceLister) List(selector labels.Selector) (ret []*v1.AwsCloudwatchMetricAlarm, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.AwsCloudwatchMetricAlarm))
	})
	return ret, err
}

// Get retrieves the AwsCloudwatchMetricAlarm from the indexer for a given namespace and name.
func (s awsCloudwatchMetricAlarmNamespaceLister) Get(name string) (*v1.AwsCloudwatchMetricAlarm, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1.Resource("awscloudwatchmetricalarm"), name)
	}
	return obj.(*v1.AwsCloudwatchMetricAlarm), nil
}
