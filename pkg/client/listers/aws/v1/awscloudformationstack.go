/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1

import (
	v1 "github.com/trussle/terraform-operator/pkg/apis/aws/v1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// AwsCloudformationStackLister helps list AwsCloudformationStacks.
type AwsCloudformationStackLister interface {
	// List lists all AwsCloudformationStacks in the indexer.
	List(selector labels.Selector) (ret []*v1.AwsCloudformationStack, err error)
	// AwsCloudformationStacks returns an object that can list and get AwsCloudformationStacks.
	AwsCloudformationStacks(namespace string) AwsCloudformationStackNamespaceLister
	AwsCloudformationStackListerExpansion
}

// awsCloudformationStackLister implements the AwsCloudformationStackLister interface.
type awsCloudformationStackLister struct {
	indexer cache.Indexer
}

// NewAwsCloudformationStackLister returns a new AwsCloudformationStackLister.
func NewAwsCloudformationStackLister(indexer cache.Indexer) AwsCloudformationStackLister {
	return &awsCloudformationStackLister{indexer: indexer}
}

// List lists all AwsCloudformationStacks in the indexer.
func (s *awsCloudformationStackLister) List(selector labels.Selector) (ret []*v1.AwsCloudformationStack, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.AwsCloudformationStack))
	})
	return ret, err
}

// AwsCloudformationStacks returns an object that can list and get AwsCloudformationStacks.
func (s *awsCloudformationStackLister) AwsCloudformationStacks(namespace string) AwsCloudformationStackNamespaceLister {
	return awsCloudformationStackNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// AwsCloudformationStackNamespaceLister helps list and get AwsCloudformationStacks.
type AwsCloudformationStackNamespaceLister interface {
	// List lists all AwsCloudformationStacks in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1.AwsCloudformationStack, err error)
	// Get retrieves the AwsCloudformationStack from the indexer for a given namespace and name.
	Get(name string) (*v1.AwsCloudformationStack, error)
	AwsCloudformationStackNamespaceListerExpansion
}

// awsCloudformationStackNamespaceLister implements the AwsCloudformationStackNamespaceLister
// interface.
type awsCloudformationStackNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all AwsCloudformationStacks in the indexer for a given namespace.
func (s awsCloudformationStackNamespaceLister) List(selector labels.Selector) (ret []*v1.AwsCloudformationStack, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.AwsCloudformationStack))
	})
	return ret, err
}

// Get retrieves the AwsCloudformationStack from the indexer for a given namespace and name.
func (s awsCloudformationStackNamespaceLister) Get(name string) (*v1.AwsCloudformationStack, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1.Resource("awscloudformationstack"), name)
	}
	return obj.(*v1.AwsCloudformationStack), nil
}
