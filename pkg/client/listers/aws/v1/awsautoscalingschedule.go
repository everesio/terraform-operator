/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1

import (
	v1 "github.com/trussle/terraform-operator/pkg/apis/aws/v1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// AwsAutoscalingScheduleLister helps list AwsAutoscalingSchedules.
type AwsAutoscalingScheduleLister interface {
	// List lists all AwsAutoscalingSchedules in the indexer.
	List(selector labels.Selector) (ret []*v1.AwsAutoscalingSchedule, err error)
	// AwsAutoscalingSchedules returns an object that can list and get AwsAutoscalingSchedules.
	AwsAutoscalingSchedules(namespace string) AwsAutoscalingScheduleNamespaceLister
	AwsAutoscalingScheduleListerExpansion
}

// awsAutoscalingScheduleLister implements the AwsAutoscalingScheduleLister interface.
type awsAutoscalingScheduleLister struct {
	indexer cache.Indexer
}

// NewAwsAutoscalingScheduleLister returns a new AwsAutoscalingScheduleLister.
func NewAwsAutoscalingScheduleLister(indexer cache.Indexer) AwsAutoscalingScheduleLister {
	return &awsAutoscalingScheduleLister{indexer: indexer}
}

// List lists all AwsAutoscalingSchedules in the indexer.
func (s *awsAutoscalingScheduleLister) List(selector labels.Selector) (ret []*v1.AwsAutoscalingSchedule, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.AwsAutoscalingSchedule))
	})
	return ret, err
}

// AwsAutoscalingSchedules returns an object that can list and get AwsAutoscalingSchedules.
func (s *awsAutoscalingScheduleLister) AwsAutoscalingSchedules(namespace string) AwsAutoscalingScheduleNamespaceLister {
	return awsAutoscalingScheduleNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// AwsAutoscalingScheduleNamespaceLister helps list and get AwsAutoscalingSchedules.
type AwsAutoscalingScheduleNamespaceLister interface {
	// List lists all AwsAutoscalingSchedules in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1.AwsAutoscalingSchedule, err error)
	// Get retrieves the AwsAutoscalingSchedule from the indexer for a given namespace and name.
	Get(name string) (*v1.AwsAutoscalingSchedule, error)
	AwsAutoscalingScheduleNamespaceListerExpansion
}

// awsAutoscalingScheduleNamespaceLister implements the AwsAutoscalingScheduleNamespaceLister
// interface.
type awsAutoscalingScheduleNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all AwsAutoscalingSchedules in the indexer for a given namespace.
func (s awsAutoscalingScheduleNamespaceLister) List(selector labels.Selector) (ret []*v1.AwsAutoscalingSchedule, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.AwsAutoscalingSchedule))
	})
	return ret, err
}

// Get retrieves the AwsAutoscalingSchedule from the indexer for a given namespace and name.
func (s awsAutoscalingScheduleNamespaceLister) Get(name string) (*v1.AwsAutoscalingSchedule, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1.Resource("awsautoscalingschedule"), name)
	}
	return obj.(*v1.AwsAutoscalingSchedule), nil
}
