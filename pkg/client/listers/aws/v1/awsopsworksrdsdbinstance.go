/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1

import (
	v1 "github.com/trussle/terraform-operator/pkg/apis/aws/v1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// AwsOpsworksRdsDbInstanceLister helps list AwsOpsworksRdsDbInstances.
type AwsOpsworksRdsDbInstanceLister interface {
	// List lists all AwsOpsworksRdsDbInstances in the indexer.
	List(selector labels.Selector) (ret []*v1.AwsOpsworksRdsDbInstance, err error)
	// AwsOpsworksRdsDbInstances returns an object that can list and get AwsOpsworksRdsDbInstances.
	AwsOpsworksRdsDbInstances(namespace string) AwsOpsworksRdsDbInstanceNamespaceLister
	AwsOpsworksRdsDbInstanceListerExpansion
}

// awsOpsworksRdsDbInstanceLister implements the AwsOpsworksRdsDbInstanceLister interface.
type awsOpsworksRdsDbInstanceLister struct {
	indexer cache.Indexer
}

// NewAwsOpsworksRdsDbInstanceLister returns a new AwsOpsworksRdsDbInstanceLister.
func NewAwsOpsworksRdsDbInstanceLister(indexer cache.Indexer) AwsOpsworksRdsDbInstanceLister {
	return &awsOpsworksRdsDbInstanceLister{indexer: indexer}
}

// List lists all AwsOpsworksRdsDbInstances in the indexer.
func (s *awsOpsworksRdsDbInstanceLister) List(selector labels.Selector) (ret []*v1.AwsOpsworksRdsDbInstance, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.AwsOpsworksRdsDbInstance))
	})
	return ret, err
}

// AwsOpsworksRdsDbInstances returns an object that can list and get AwsOpsworksRdsDbInstances.
func (s *awsOpsworksRdsDbInstanceLister) AwsOpsworksRdsDbInstances(namespace string) AwsOpsworksRdsDbInstanceNamespaceLister {
	return awsOpsworksRdsDbInstanceNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// AwsOpsworksRdsDbInstanceNamespaceLister helps list and get AwsOpsworksRdsDbInstances.
type AwsOpsworksRdsDbInstanceNamespaceLister interface {
	// List lists all AwsOpsworksRdsDbInstances in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1.AwsOpsworksRdsDbInstance, err error)
	// Get retrieves the AwsOpsworksRdsDbInstance from the indexer for a given namespace and name.
	Get(name string) (*v1.AwsOpsworksRdsDbInstance, error)
	AwsOpsworksRdsDbInstanceNamespaceListerExpansion
}

// awsOpsworksRdsDbInstanceNamespaceLister implements the AwsOpsworksRdsDbInstanceNamespaceLister
// interface.
type awsOpsworksRdsDbInstanceNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all AwsOpsworksRdsDbInstances in the indexer for a given namespace.
func (s awsOpsworksRdsDbInstanceNamespaceLister) List(selector labels.Selector) (ret []*v1.AwsOpsworksRdsDbInstance, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.AwsOpsworksRdsDbInstance))
	})
	return ret, err
}

// Get retrieves the AwsOpsworksRdsDbInstance from the indexer for a given namespace and name.
func (s awsOpsworksRdsDbInstanceNamespaceLister) Get(name string) (*v1.AwsOpsworksRdsDbInstance, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1.Resource("awsopsworksrdsdbinstance"), name)
	}
	return obj.(*v1.AwsOpsworksRdsDbInstance), nil
}
