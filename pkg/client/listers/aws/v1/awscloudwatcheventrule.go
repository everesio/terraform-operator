/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1

import (
	v1 "github.com/trussle/terraform-operator/pkg/apis/aws/v1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// AwsCloudwatchEventRuleLister helps list AwsCloudwatchEventRules.
type AwsCloudwatchEventRuleLister interface {
	// List lists all AwsCloudwatchEventRules in the indexer.
	List(selector labels.Selector) (ret []*v1.AwsCloudwatchEventRule, err error)
	// AwsCloudwatchEventRules returns an object that can list and get AwsCloudwatchEventRules.
	AwsCloudwatchEventRules(namespace string) AwsCloudwatchEventRuleNamespaceLister
	AwsCloudwatchEventRuleListerExpansion
}

// awsCloudwatchEventRuleLister implements the AwsCloudwatchEventRuleLister interface.
type awsCloudwatchEventRuleLister struct {
	indexer cache.Indexer
}

// NewAwsCloudwatchEventRuleLister returns a new AwsCloudwatchEventRuleLister.
func NewAwsCloudwatchEventRuleLister(indexer cache.Indexer) AwsCloudwatchEventRuleLister {
	return &awsCloudwatchEventRuleLister{indexer: indexer}
}

// List lists all AwsCloudwatchEventRules in the indexer.
func (s *awsCloudwatchEventRuleLister) List(selector labels.Selector) (ret []*v1.AwsCloudwatchEventRule, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.AwsCloudwatchEventRule))
	})
	return ret, err
}

// AwsCloudwatchEventRules returns an object that can list and get AwsCloudwatchEventRules.
func (s *awsCloudwatchEventRuleLister) AwsCloudwatchEventRules(namespace string) AwsCloudwatchEventRuleNamespaceLister {
	return awsCloudwatchEventRuleNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// AwsCloudwatchEventRuleNamespaceLister helps list and get AwsCloudwatchEventRules.
type AwsCloudwatchEventRuleNamespaceLister interface {
	// List lists all AwsCloudwatchEventRules in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1.AwsCloudwatchEventRule, err error)
	// Get retrieves the AwsCloudwatchEventRule from the indexer for a given namespace and name.
	Get(name string) (*v1.AwsCloudwatchEventRule, error)
	AwsCloudwatchEventRuleNamespaceListerExpansion
}

// awsCloudwatchEventRuleNamespaceLister implements the AwsCloudwatchEventRuleNamespaceLister
// interface.
type awsCloudwatchEventRuleNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all AwsCloudwatchEventRules in the indexer for a given namespace.
func (s awsCloudwatchEventRuleNamespaceLister) List(selector labels.Selector) (ret []*v1.AwsCloudwatchEventRule, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.AwsCloudwatchEventRule))
	})
	return ret, err
}

// Get retrieves the AwsCloudwatchEventRule from the indexer for a given namespace and name.
func (s awsCloudwatchEventRuleNamespaceLister) Get(name string) (*v1.AwsCloudwatchEventRule, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1.Resource("awscloudwatcheventrule"), name)
	}
	return obj.(*v1.AwsCloudwatchEventRule), nil
}
