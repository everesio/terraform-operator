/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1

import (
	v1 "github.com/trussle/terraform-operator/pkg/apis/aws/v1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// AwsIamPolicyLister helps list AwsIamPolicies.
type AwsIamPolicyLister interface {
	// List lists all AwsIamPolicies in the indexer.
	List(selector labels.Selector) (ret []*v1.AwsIamPolicy, err error)
	// AwsIamPolicies returns an object that can list and get AwsIamPolicies.
	AwsIamPolicies(namespace string) AwsIamPolicyNamespaceLister
	AwsIamPolicyListerExpansion
}

// awsIamPolicyLister implements the AwsIamPolicyLister interface.
type awsIamPolicyLister struct {
	indexer cache.Indexer
}

// NewAwsIamPolicyLister returns a new AwsIamPolicyLister.
func NewAwsIamPolicyLister(indexer cache.Indexer) AwsIamPolicyLister {
	return &awsIamPolicyLister{indexer: indexer}
}

// List lists all AwsIamPolicies in the indexer.
func (s *awsIamPolicyLister) List(selector labels.Selector) (ret []*v1.AwsIamPolicy, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.AwsIamPolicy))
	})
	return ret, err
}

// AwsIamPolicies returns an object that can list and get AwsIamPolicies.
func (s *awsIamPolicyLister) AwsIamPolicies(namespace string) AwsIamPolicyNamespaceLister {
	return awsIamPolicyNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// AwsIamPolicyNamespaceLister helps list and get AwsIamPolicies.
type AwsIamPolicyNamespaceLister interface {
	// List lists all AwsIamPolicies in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1.AwsIamPolicy, err error)
	// Get retrieves the AwsIamPolicy from the indexer for a given namespace and name.
	Get(name string) (*v1.AwsIamPolicy, error)
	AwsIamPolicyNamespaceListerExpansion
}

// awsIamPolicyNamespaceLister implements the AwsIamPolicyNamespaceLister
// interface.
type awsIamPolicyNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all AwsIamPolicies in the indexer for a given namespace.
func (s awsIamPolicyNamespaceLister) List(selector labels.Selector) (ret []*v1.AwsIamPolicy, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.AwsIamPolicy))
	})
	return ret, err
}

// Get retrieves the AwsIamPolicy from the indexer for a given namespace and name.
func (s awsIamPolicyNamespaceLister) Get(name string) (*v1.AwsIamPolicy, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1.Resource("awsiampolicy"), name)
	}
	return obj.(*v1.AwsIamPolicy), nil
}
