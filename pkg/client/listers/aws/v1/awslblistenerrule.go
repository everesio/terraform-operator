/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1

import (
	v1 "github.com/trussle/terraform-operator/pkg/apis/aws/v1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// AwsLbListenerRuleLister helps list AwsLbListenerRules.
type AwsLbListenerRuleLister interface {
	// List lists all AwsLbListenerRules in the indexer.
	List(selector labels.Selector) (ret []*v1.AwsLbListenerRule, err error)
	// AwsLbListenerRules returns an object that can list and get AwsLbListenerRules.
	AwsLbListenerRules(namespace string) AwsLbListenerRuleNamespaceLister
	AwsLbListenerRuleListerExpansion
}

// awsLbListenerRuleLister implements the AwsLbListenerRuleLister interface.
type awsLbListenerRuleLister struct {
	indexer cache.Indexer
}

// NewAwsLbListenerRuleLister returns a new AwsLbListenerRuleLister.
func NewAwsLbListenerRuleLister(indexer cache.Indexer) AwsLbListenerRuleLister {
	return &awsLbListenerRuleLister{indexer: indexer}
}

// List lists all AwsLbListenerRules in the indexer.
func (s *awsLbListenerRuleLister) List(selector labels.Selector) (ret []*v1.AwsLbListenerRule, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.AwsLbListenerRule))
	})
	return ret, err
}

// AwsLbListenerRules returns an object that can list and get AwsLbListenerRules.
func (s *awsLbListenerRuleLister) AwsLbListenerRules(namespace string) AwsLbListenerRuleNamespaceLister {
	return awsLbListenerRuleNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// AwsLbListenerRuleNamespaceLister helps list and get AwsLbListenerRules.
type AwsLbListenerRuleNamespaceLister interface {
	// List lists all AwsLbListenerRules in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1.AwsLbListenerRule, err error)
	// Get retrieves the AwsLbListenerRule from the indexer for a given namespace and name.
	Get(name string) (*v1.AwsLbListenerRule, error)
	AwsLbListenerRuleNamespaceListerExpansion
}

// awsLbListenerRuleNamespaceLister implements the AwsLbListenerRuleNamespaceLister
// interface.
type awsLbListenerRuleNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all AwsLbListenerRules in the indexer for a given namespace.
func (s awsLbListenerRuleNamespaceLister) List(selector labels.Selector) (ret []*v1.AwsLbListenerRule, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.AwsLbListenerRule))
	})
	return ret, err
}

// Get retrieves the AwsLbListenerRule from the indexer for a given namespace and name.
func (s awsLbListenerRuleNamespaceLister) Get(name string) (*v1.AwsLbListenerRule, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1.Resource("awslblistenerrule"), name)
	}
	return obj.(*v1.AwsLbListenerRule), nil
}
