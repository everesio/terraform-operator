/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1

import (
	v1 "github.com/trussle/terraform-operator/pkg/apis/aws/v1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// AwsIotCertificateLister helps list AwsIotCertificates.
type AwsIotCertificateLister interface {
	// List lists all AwsIotCertificates in the indexer.
	List(selector labels.Selector) (ret []*v1.AwsIotCertificate, err error)
	// AwsIotCertificates returns an object that can list and get AwsIotCertificates.
	AwsIotCertificates(namespace string) AwsIotCertificateNamespaceLister
	AwsIotCertificateListerExpansion
}

// awsIotCertificateLister implements the AwsIotCertificateLister interface.
type awsIotCertificateLister struct {
	indexer cache.Indexer
}

// NewAwsIotCertificateLister returns a new AwsIotCertificateLister.
func NewAwsIotCertificateLister(indexer cache.Indexer) AwsIotCertificateLister {
	return &awsIotCertificateLister{indexer: indexer}
}

// List lists all AwsIotCertificates in the indexer.
func (s *awsIotCertificateLister) List(selector labels.Selector) (ret []*v1.AwsIotCertificate, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.AwsIotCertificate))
	})
	return ret, err
}

// AwsIotCertificates returns an object that can list and get AwsIotCertificates.
func (s *awsIotCertificateLister) AwsIotCertificates(namespace string) AwsIotCertificateNamespaceLister {
	return awsIotCertificateNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// AwsIotCertificateNamespaceLister helps list and get AwsIotCertificates.
type AwsIotCertificateNamespaceLister interface {
	// List lists all AwsIotCertificates in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1.AwsIotCertificate, err error)
	// Get retrieves the AwsIotCertificate from the indexer for a given namespace and name.
	Get(name string) (*v1.AwsIotCertificate, error)
	AwsIotCertificateNamespaceListerExpansion
}

// awsIotCertificateNamespaceLister implements the AwsIotCertificateNamespaceLister
// interface.
type awsIotCertificateNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all AwsIotCertificates in the indexer for a given namespace.
func (s awsIotCertificateNamespaceLister) List(selector labels.Selector) (ret []*v1.AwsIotCertificate, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.AwsIotCertificate))
	})
	return ret, err
}

// Get retrieves the AwsIotCertificate from the indexer for a given namespace and name.
func (s awsIotCertificateNamespaceLister) Get(name string) (*v1.AwsIotCertificate, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1.Resource("awsiotcertificate"), name)
	}
	return obj.(*v1.AwsIotCertificate), nil
}
