/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1

import (
	v1 "github.com/trussle/terraform-operator/pkg/apis/aws/v1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// AwsRoute53QueryLogLister helps list AwsRoute53QueryLogs.
type AwsRoute53QueryLogLister interface {
	// List lists all AwsRoute53QueryLogs in the indexer.
	List(selector labels.Selector) (ret []*v1.AwsRoute53QueryLog, err error)
	// AwsRoute53QueryLogs returns an object that can list and get AwsRoute53QueryLogs.
	AwsRoute53QueryLogs(namespace string) AwsRoute53QueryLogNamespaceLister
	AwsRoute53QueryLogListerExpansion
}

// awsRoute53QueryLogLister implements the AwsRoute53QueryLogLister interface.
type awsRoute53QueryLogLister struct {
	indexer cache.Indexer
}

// NewAwsRoute53QueryLogLister returns a new AwsRoute53QueryLogLister.
func NewAwsRoute53QueryLogLister(indexer cache.Indexer) AwsRoute53QueryLogLister {
	return &awsRoute53QueryLogLister{indexer: indexer}
}

// List lists all AwsRoute53QueryLogs in the indexer.
func (s *awsRoute53QueryLogLister) List(selector labels.Selector) (ret []*v1.AwsRoute53QueryLog, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.AwsRoute53QueryLog))
	})
	return ret, err
}

// AwsRoute53QueryLogs returns an object that can list and get AwsRoute53QueryLogs.
func (s *awsRoute53QueryLogLister) AwsRoute53QueryLogs(namespace string) AwsRoute53QueryLogNamespaceLister {
	return awsRoute53QueryLogNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// AwsRoute53QueryLogNamespaceLister helps list and get AwsRoute53QueryLogs.
type AwsRoute53QueryLogNamespaceLister interface {
	// List lists all AwsRoute53QueryLogs in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1.AwsRoute53QueryLog, err error)
	// Get retrieves the AwsRoute53QueryLog from the indexer for a given namespace and name.
	Get(name string) (*v1.AwsRoute53QueryLog, error)
	AwsRoute53QueryLogNamespaceListerExpansion
}

// awsRoute53QueryLogNamespaceLister implements the AwsRoute53QueryLogNamespaceLister
// interface.
type awsRoute53QueryLogNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all AwsRoute53QueryLogs in the indexer for a given namespace.
func (s awsRoute53QueryLogNamespaceLister) List(selector labels.Selector) (ret []*v1.AwsRoute53QueryLog, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.AwsRoute53QueryLog))
	})
	return ret, err
}

// Get retrieves the AwsRoute53QueryLog from the indexer for a given namespace and name.
func (s awsRoute53QueryLogNamespaceLister) Get(name string) (*v1.AwsRoute53QueryLog, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1.Resource("awsroute53querylog"), name)
	}
	return obj.(*v1.AwsRoute53QueryLog), nil
}
