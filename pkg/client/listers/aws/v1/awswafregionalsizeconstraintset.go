/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1

import (
	v1 "github.com/trussle/terraform-operator/pkg/apis/aws/v1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// AwsWafregionalSizeConstraintSetLister helps list AwsWafregionalSizeConstraintSets.
type AwsWafregionalSizeConstraintSetLister interface {
	// List lists all AwsWafregionalSizeConstraintSets in the indexer.
	List(selector labels.Selector) (ret []*v1.AwsWafregionalSizeConstraintSet, err error)
	// AwsWafregionalSizeConstraintSets returns an object that can list and get AwsWafregionalSizeConstraintSets.
	AwsWafregionalSizeConstraintSets(namespace string) AwsWafregionalSizeConstraintSetNamespaceLister
	AwsWafregionalSizeConstraintSetListerExpansion
}

// awsWafregionalSizeConstraintSetLister implements the AwsWafregionalSizeConstraintSetLister interface.
type awsWafregionalSizeConstraintSetLister struct {
	indexer cache.Indexer
}

// NewAwsWafregionalSizeConstraintSetLister returns a new AwsWafregionalSizeConstraintSetLister.
func NewAwsWafregionalSizeConstraintSetLister(indexer cache.Indexer) AwsWafregionalSizeConstraintSetLister {
	return &awsWafregionalSizeConstraintSetLister{indexer: indexer}
}

// List lists all AwsWafregionalSizeConstraintSets in the indexer.
func (s *awsWafregionalSizeConstraintSetLister) List(selector labels.Selector) (ret []*v1.AwsWafregionalSizeConstraintSet, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.AwsWafregionalSizeConstraintSet))
	})
	return ret, err
}

// AwsWafregionalSizeConstraintSets returns an object that can list and get AwsWafregionalSizeConstraintSets.
func (s *awsWafregionalSizeConstraintSetLister) AwsWafregionalSizeConstraintSets(namespace string) AwsWafregionalSizeConstraintSetNamespaceLister {
	return awsWafregionalSizeConstraintSetNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// AwsWafregionalSizeConstraintSetNamespaceLister helps list and get AwsWafregionalSizeConstraintSets.
type AwsWafregionalSizeConstraintSetNamespaceLister interface {
	// List lists all AwsWafregionalSizeConstraintSets in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1.AwsWafregionalSizeConstraintSet, err error)
	// Get retrieves the AwsWafregionalSizeConstraintSet from the indexer for a given namespace and name.
	Get(name string) (*v1.AwsWafregionalSizeConstraintSet, error)
	AwsWafregionalSizeConstraintSetNamespaceListerExpansion
}

// awsWafregionalSizeConstraintSetNamespaceLister implements the AwsWafregionalSizeConstraintSetNamespaceLister
// interface.
type awsWafregionalSizeConstraintSetNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all AwsWafregionalSizeConstraintSets in the indexer for a given namespace.
func (s awsWafregionalSizeConstraintSetNamespaceLister) List(selector labels.Selector) (ret []*v1.AwsWafregionalSizeConstraintSet, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.AwsWafregionalSizeConstraintSet))
	})
	return ret, err
}

// Get retrieves the AwsWafregionalSizeConstraintSet from the indexer for a given namespace and name.
func (s awsWafregionalSizeConstraintSetNamespaceLister) Get(name string) (*v1.AwsWafregionalSizeConstraintSet, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1.Resource("awswafregionalsizeconstraintset"), name)
	}
	return obj.(*v1.AwsWafregionalSizeConstraintSet), nil
}
