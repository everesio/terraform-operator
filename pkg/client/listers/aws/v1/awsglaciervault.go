/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1

import (
	v1 "github.com/trussle/terraform-operator/pkg/apis/aws/v1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// AwsGlacierVaultLister helps list AwsGlacierVaults.
type AwsGlacierVaultLister interface {
	// List lists all AwsGlacierVaults in the indexer.
	List(selector labels.Selector) (ret []*v1.AwsGlacierVault, err error)
	// AwsGlacierVaults returns an object that can list and get AwsGlacierVaults.
	AwsGlacierVaults(namespace string) AwsGlacierVaultNamespaceLister
	AwsGlacierVaultListerExpansion
}

// awsGlacierVaultLister implements the AwsGlacierVaultLister interface.
type awsGlacierVaultLister struct {
	indexer cache.Indexer
}

// NewAwsGlacierVaultLister returns a new AwsGlacierVaultLister.
func NewAwsGlacierVaultLister(indexer cache.Indexer) AwsGlacierVaultLister {
	return &awsGlacierVaultLister{indexer: indexer}
}

// List lists all AwsGlacierVaults in the indexer.
func (s *awsGlacierVaultLister) List(selector labels.Selector) (ret []*v1.AwsGlacierVault, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.AwsGlacierVault))
	})
	return ret, err
}

// AwsGlacierVaults returns an object that can list and get AwsGlacierVaults.
func (s *awsGlacierVaultLister) AwsGlacierVaults(namespace string) AwsGlacierVaultNamespaceLister {
	return awsGlacierVaultNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// AwsGlacierVaultNamespaceLister helps list and get AwsGlacierVaults.
type AwsGlacierVaultNamespaceLister interface {
	// List lists all AwsGlacierVaults in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1.AwsGlacierVault, err error)
	// Get retrieves the AwsGlacierVault from the indexer for a given namespace and name.
	Get(name string) (*v1.AwsGlacierVault, error)
	AwsGlacierVaultNamespaceListerExpansion
}

// awsGlacierVaultNamespaceLister implements the AwsGlacierVaultNamespaceLister
// interface.
type awsGlacierVaultNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all AwsGlacierVaults in the indexer for a given namespace.
func (s awsGlacierVaultNamespaceLister) List(selector labels.Selector) (ret []*v1.AwsGlacierVault, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.AwsGlacierVault))
	})
	return ret, err
}

// Get retrieves the AwsGlacierVault from the indexer for a given namespace and name.
func (s awsGlacierVaultNamespaceLister) Get(name string) (*v1.AwsGlacierVault, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1.Resource("awsglaciervault"), name)
	}
	return obj.(*v1.AwsGlacierVault), nil
}
