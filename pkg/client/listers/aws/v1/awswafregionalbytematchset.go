/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1

import (
	v1 "github.com/trussle/terraform-operator/pkg/apis/aws/v1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// AwsWafregionalByteMatchSetLister helps list AwsWafregionalByteMatchSets.
type AwsWafregionalByteMatchSetLister interface {
	// List lists all AwsWafregionalByteMatchSets in the indexer.
	List(selector labels.Selector) (ret []*v1.AwsWafregionalByteMatchSet, err error)
	// AwsWafregionalByteMatchSets returns an object that can list and get AwsWafregionalByteMatchSets.
	AwsWafregionalByteMatchSets(namespace string) AwsWafregionalByteMatchSetNamespaceLister
	AwsWafregionalByteMatchSetListerExpansion
}

// awsWafregionalByteMatchSetLister implements the AwsWafregionalByteMatchSetLister interface.
type awsWafregionalByteMatchSetLister struct {
	indexer cache.Indexer
}

// NewAwsWafregionalByteMatchSetLister returns a new AwsWafregionalByteMatchSetLister.
func NewAwsWafregionalByteMatchSetLister(indexer cache.Indexer) AwsWafregionalByteMatchSetLister {
	return &awsWafregionalByteMatchSetLister{indexer: indexer}
}

// List lists all AwsWafregionalByteMatchSets in the indexer.
func (s *awsWafregionalByteMatchSetLister) List(selector labels.Selector) (ret []*v1.AwsWafregionalByteMatchSet, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.AwsWafregionalByteMatchSet))
	})
	return ret, err
}

// AwsWafregionalByteMatchSets returns an object that can list and get AwsWafregionalByteMatchSets.
func (s *awsWafregionalByteMatchSetLister) AwsWafregionalByteMatchSets(namespace string) AwsWafregionalByteMatchSetNamespaceLister {
	return awsWafregionalByteMatchSetNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// AwsWafregionalByteMatchSetNamespaceLister helps list and get AwsWafregionalByteMatchSets.
type AwsWafregionalByteMatchSetNamespaceLister interface {
	// List lists all AwsWafregionalByteMatchSets in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1.AwsWafregionalByteMatchSet, err error)
	// Get retrieves the AwsWafregionalByteMatchSet from the indexer for a given namespace and name.
	Get(name string) (*v1.AwsWafregionalByteMatchSet, error)
	AwsWafregionalByteMatchSetNamespaceListerExpansion
}

// awsWafregionalByteMatchSetNamespaceLister implements the AwsWafregionalByteMatchSetNamespaceLister
// interface.
type awsWafregionalByteMatchSetNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all AwsWafregionalByteMatchSets in the indexer for a given namespace.
func (s awsWafregionalByteMatchSetNamespaceLister) List(selector labels.Selector) (ret []*v1.AwsWafregionalByteMatchSet, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.AwsWafregionalByteMatchSet))
	})
	return ret, err
}

// Get retrieves the AwsWafregionalByteMatchSet from the indexer for a given namespace and name.
func (s awsWafregionalByteMatchSetNamespaceLister) Get(name string) (*v1.AwsWafregionalByteMatchSet, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1.Resource("awswafregionalbytematchset"), name)
	}
	return obj.(*v1.AwsWafregionalByteMatchSet), nil
}
