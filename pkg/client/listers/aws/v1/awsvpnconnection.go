/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1

import (
	v1 "github.com/trussle/terraform-operator/pkg/apis/aws/v1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// AwsVpnConnectionLister helps list AwsVpnConnections.
type AwsVpnConnectionLister interface {
	// List lists all AwsVpnConnections in the indexer.
	List(selector labels.Selector) (ret []*v1.AwsVpnConnection, err error)
	// AwsVpnConnections returns an object that can list and get AwsVpnConnections.
	AwsVpnConnections(namespace string) AwsVpnConnectionNamespaceLister
	AwsVpnConnectionListerExpansion
}

// awsVpnConnectionLister implements the AwsVpnConnectionLister interface.
type awsVpnConnectionLister struct {
	indexer cache.Indexer
}

// NewAwsVpnConnectionLister returns a new AwsVpnConnectionLister.
func NewAwsVpnConnectionLister(indexer cache.Indexer) AwsVpnConnectionLister {
	return &awsVpnConnectionLister{indexer: indexer}
}

// List lists all AwsVpnConnections in the indexer.
func (s *awsVpnConnectionLister) List(selector labels.Selector) (ret []*v1.AwsVpnConnection, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.AwsVpnConnection))
	})
	return ret, err
}

// AwsVpnConnections returns an object that can list and get AwsVpnConnections.
func (s *awsVpnConnectionLister) AwsVpnConnections(namespace string) AwsVpnConnectionNamespaceLister {
	return awsVpnConnectionNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// AwsVpnConnectionNamespaceLister helps list and get AwsVpnConnections.
type AwsVpnConnectionNamespaceLister interface {
	// List lists all AwsVpnConnections in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1.AwsVpnConnection, err error)
	// Get retrieves the AwsVpnConnection from the indexer for a given namespace and name.
	Get(name string) (*v1.AwsVpnConnection, error)
	AwsVpnConnectionNamespaceListerExpansion
}

// awsVpnConnectionNamespaceLister implements the AwsVpnConnectionNamespaceLister
// interface.
type awsVpnConnectionNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all AwsVpnConnections in the indexer for a given namespace.
func (s awsVpnConnectionNamespaceLister) List(selector labels.Selector) (ret []*v1.AwsVpnConnection, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.AwsVpnConnection))
	})
	return ret, err
}

// Get retrieves the AwsVpnConnection from the indexer for a given namespace and name.
func (s awsVpnConnectionNamespaceLister) Get(name string) (*v1.AwsVpnConnection, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1.Resource("awsvpnconnection"), name)
	}
	return obj.(*v1.AwsVpnConnection), nil
}
