/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1

import (
	v1 "github.com/trussle/terraform-operator/pkg/apis/aws/v1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// AwsInternetGatewayLister helps list AwsInternetGateways.
type AwsInternetGatewayLister interface {
	// List lists all AwsInternetGateways in the indexer.
	List(selector labels.Selector) (ret []*v1.AwsInternetGateway, err error)
	// AwsInternetGateways returns an object that can list and get AwsInternetGateways.
	AwsInternetGateways(namespace string) AwsInternetGatewayNamespaceLister
	AwsInternetGatewayListerExpansion
}

// awsInternetGatewayLister implements the AwsInternetGatewayLister interface.
type awsInternetGatewayLister struct {
	indexer cache.Indexer
}

// NewAwsInternetGatewayLister returns a new AwsInternetGatewayLister.
func NewAwsInternetGatewayLister(indexer cache.Indexer) AwsInternetGatewayLister {
	return &awsInternetGatewayLister{indexer: indexer}
}

// List lists all AwsInternetGateways in the indexer.
func (s *awsInternetGatewayLister) List(selector labels.Selector) (ret []*v1.AwsInternetGateway, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.AwsInternetGateway))
	})
	return ret, err
}

// AwsInternetGateways returns an object that can list and get AwsInternetGateways.
func (s *awsInternetGatewayLister) AwsInternetGateways(namespace string) AwsInternetGatewayNamespaceLister {
	return awsInternetGatewayNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// AwsInternetGatewayNamespaceLister helps list and get AwsInternetGateways.
type AwsInternetGatewayNamespaceLister interface {
	// List lists all AwsInternetGateways in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1.AwsInternetGateway, err error)
	// Get retrieves the AwsInternetGateway from the indexer for a given namespace and name.
	Get(name string) (*v1.AwsInternetGateway, error)
	AwsInternetGatewayNamespaceListerExpansion
}

// awsInternetGatewayNamespaceLister implements the AwsInternetGatewayNamespaceLister
// interface.
type awsInternetGatewayNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all AwsInternetGateways in the indexer for a given namespace.
func (s awsInternetGatewayNamespaceLister) List(selector labels.Selector) (ret []*v1.AwsInternetGateway, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.AwsInternetGateway))
	})
	return ret, err
}

// Get retrieves the AwsInternetGateway from the indexer for a given namespace and name.
func (s awsInternetGatewayNamespaceLister) Get(name string) (*v1.AwsInternetGateway, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1.Resource("awsinternetgateway"), name)
	}
	return obj.(*v1.AwsInternetGateway), nil
}
