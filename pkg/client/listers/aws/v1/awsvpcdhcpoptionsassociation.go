/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1

import (
	v1 "github.com/trussle/terraform-operator/pkg/apis/aws/v1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// AwsVpcDhcpOptionsAssociationLister helps list AwsVpcDhcpOptionsAssociations.
type AwsVpcDhcpOptionsAssociationLister interface {
	// List lists all AwsVpcDhcpOptionsAssociations in the indexer.
	List(selector labels.Selector) (ret []*v1.AwsVpcDhcpOptionsAssociation, err error)
	// AwsVpcDhcpOptionsAssociations returns an object that can list and get AwsVpcDhcpOptionsAssociations.
	AwsVpcDhcpOptionsAssociations(namespace string) AwsVpcDhcpOptionsAssociationNamespaceLister
	AwsVpcDhcpOptionsAssociationListerExpansion
}

// awsVpcDhcpOptionsAssociationLister implements the AwsVpcDhcpOptionsAssociationLister interface.
type awsVpcDhcpOptionsAssociationLister struct {
	indexer cache.Indexer
}

// NewAwsVpcDhcpOptionsAssociationLister returns a new AwsVpcDhcpOptionsAssociationLister.
func NewAwsVpcDhcpOptionsAssociationLister(indexer cache.Indexer) AwsVpcDhcpOptionsAssociationLister {
	return &awsVpcDhcpOptionsAssociationLister{indexer: indexer}
}

// List lists all AwsVpcDhcpOptionsAssociations in the indexer.
func (s *awsVpcDhcpOptionsAssociationLister) List(selector labels.Selector) (ret []*v1.AwsVpcDhcpOptionsAssociation, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.AwsVpcDhcpOptionsAssociation))
	})
	return ret, err
}

// AwsVpcDhcpOptionsAssociations returns an object that can list and get AwsVpcDhcpOptionsAssociations.
func (s *awsVpcDhcpOptionsAssociationLister) AwsVpcDhcpOptionsAssociations(namespace string) AwsVpcDhcpOptionsAssociationNamespaceLister {
	return awsVpcDhcpOptionsAssociationNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// AwsVpcDhcpOptionsAssociationNamespaceLister helps list and get AwsVpcDhcpOptionsAssociations.
type AwsVpcDhcpOptionsAssociationNamespaceLister interface {
	// List lists all AwsVpcDhcpOptionsAssociations in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1.AwsVpcDhcpOptionsAssociation, err error)
	// Get retrieves the AwsVpcDhcpOptionsAssociation from the indexer for a given namespace and name.
	Get(name string) (*v1.AwsVpcDhcpOptionsAssociation, error)
	AwsVpcDhcpOptionsAssociationNamespaceListerExpansion
}

// awsVpcDhcpOptionsAssociationNamespaceLister implements the AwsVpcDhcpOptionsAssociationNamespaceLister
// interface.
type awsVpcDhcpOptionsAssociationNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all AwsVpcDhcpOptionsAssociations in the indexer for a given namespace.
func (s awsVpcDhcpOptionsAssociationNamespaceLister) List(selector labels.Selector) (ret []*v1.AwsVpcDhcpOptionsAssociation, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.AwsVpcDhcpOptionsAssociation))
	})
	return ret, err
}

// Get retrieves the AwsVpcDhcpOptionsAssociation from the indexer for a given namespace and name.
func (s awsVpcDhcpOptionsAssociationNamespaceLister) Get(name string) (*v1.AwsVpcDhcpOptionsAssociation, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1.Resource("awsvpcdhcpoptionsassociation"), name)
	}
	return obj.(*v1.AwsVpcDhcpOptionsAssociation), nil
}
