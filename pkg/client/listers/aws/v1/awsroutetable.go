/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1

import (
	v1 "github.com/trussle/terraform-operator/pkg/apis/aws/v1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// AwsRouteTableLister helps list AwsRouteTables.
type AwsRouteTableLister interface {
	// List lists all AwsRouteTables in the indexer.
	List(selector labels.Selector) (ret []*v1.AwsRouteTable, err error)
	// AwsRouteTables returns an object that can list and get AwsRouteTables.
	AwsRouteTables(namespace string) AwsRouteTableNamespaceLister
	AwsRouteTableListerExpansion
}

// awsRouteTableLister implements the AwsRouteTableLister interface.
type awsRouteTableLister struct {
	indexer cache.Indexer
}

// NewAwsRouteTableLister returns a new AwsRouteTableLister.
func NewAwsRouteTableLister(indexer cache.Indexer) AwsRouteTableLister {
	return &awsRouteTableLister{indexer: indexer}
}

// List lists all AwsRouteTables in the indexer.
func (s *awsRouteTableLister) List(selector labels.Selector) (ret []*v1.AwsRouteTable, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.AwsRouteTable))
	})
	return ret, err
}

// AwsRouteTables returns an object that can list and get AwsRouteTables.
func (s *awsRouteTableLister) AwsRouteTables(namespace string) AwsRouteTableNamespaceLister {
	return awsRouteTableNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// AwsRouteTableNamespaceLister helps list and get AwsRouteTables.
type AwsRouteTableNamespaceLister interface {
	// List lists all AwsRouteTables in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1.AwsRouteTable, err error)
	// Get retrieves the AwsRouteTable from the indexer for a given namespace and name.
	Get(name string) (*v1.AwsRouteTable, error)
	AwsRouteTableNamespaceListerExpansion
}

// awsRouteTableNamespaceLister implements the AwsRouteTableNamespaceLister
// interface.
type awsRouteTableNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all AwsRouteTables in the indexer for a given namespace.
func (s awsRouteTableNamespaceLister) List(selector labels.Selector) (ret []*v1.AwsRouteTable, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.AwsRouteTable))
	})
	return ret, err
}

// Get retrieves the AwsRouteTable from the indexer for a given namespace and name.
func (s awsRouteTableNamespaceLister) Get(name string) (*v1.AwsRouteTable, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1.Resource("awsroutetable"), name)
	}
	return obj.(*v1.AwsRouteTable), nil
}
