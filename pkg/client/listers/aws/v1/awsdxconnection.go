/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1

import (
	v1 "github.com/trussle/terraform-operator/pkg/apis/aws/v1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// AwsDxConnectionLister helps list AwsDxConnections.
type AwsDxConnectionLister interface {
	// List lists all AwsDxConnections in the indexer.
	List(selector labels.Selector) (ret []*v1.AwsDxConnection, err error)
	// AwsDxConnections returns an object that can list and get AwsDxConnections.
	AwsDxConnections(namespace string) AwsDxConnectionNamespaceLister
	AwsDxConnectionListerExpansion
}

// awsDxConnectionLister implements the AwsDxConnectionLister interface.
type awsDxConnectionLister struct {
	indexer cache.Indexer
}

// NewAwsDxConnectionLister returns a new AwsDxConnectionLister.
func NewAwsDxConnectionLister(indexer cache.Indexer) AwsDxConnectionLister {
	return &awsDxConnectionLister{indexer: indexer}
}

// List lists all AwsDxConnections in the indexer.
func (s *awsDxConnectionLister) List(selector labels.Selector) (ret []*v1.AwsDxConnection, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.AwsDxConnection))
	})
	return ret, err
}

// AwsDxConnections returns an object that can list and get AwsDxConnections.
func (s *awsDxConnectionLister) AwsDxConnections(namespace string) AwsDxConnectionNamespaceLister {
	return awsDxConnectionNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// AwsDxConnectionNamespaceLister helps list and get AwsDxConnections.
type AwsDxConnectionNamespaceLister interface {
	// List lists all AwsDxConnections in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1.AwsDxConnection, err error)
	// Get retrieves the AwsDxConnection from the indexer for a given namespace and name.
	Get(name string) (*v1.AwsDxConnection, error)
	AwsDxConnectionNamespaceListerExpansion
}

// awsDxConnectionNamespaceLister implements the AwsDxConnectionNamespaceLister
// interface.
type awsDxConnectionNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all AwsDxConnections in the indexer for a given namespace.
func (s awsDxConnectionNamespaceLister) List(selector labels.Selector) (ret []*v1.AwsDxConnection, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.AwsDxConnection))
	})
	return ret, err
}

// Get retrieves the AwsDxConnection from the indexer for a given namespace and name.
func (s awsDxConnectionNamespaceLister) Get(name string) (*v1.AwsDxConnection, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1.Resource("awsdxconnection"), name)
	}
	return obj.(*v1.AwsDxConnection), nil
}
