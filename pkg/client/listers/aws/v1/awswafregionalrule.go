/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1

import (
	v1 "github.com/trussle/terraform-operator/pkg/apis/aws/v1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// AwsWafregionalRuleLister helps list AwsWafregionalRules.
type AwsWafregionalRuleLister interface {
	// List lists all AwsWafregionalRules in the indexer.
	List(selector labels.Selector) (ret []*v1.AwsWafregionalRule, err error)
	// AwsWafregionalRules returns an object that can list and get AwsWafregionalRules.
	AwsWafregionalRules(namespace string) AwsWafregionalRuleNamespaceLister
	AwsWafregionalRuleListerExpansion
}

// awsWafregionalRuleLister implements the AwsWafregionalRuleLister interface.
type awsWafregionalRuleLister struct {
	indexer cache.Indexer
}

// NewAwsWafregionalRuleLister returns a new AwsWafregionalRuleLister.
func NewAwsWafregionalRuleLister(indexer cache.Indexer) AwsWafregionalRuleLister {
	return &awsWafregionalRuleLister{indexer: indexer}
}

// List lists all AwsWafregionalRules in the indexer.
func (s *awsWafregionalRuleLister) List(selector labels.Selector) (ret []*v1.AwsWafregionalRule, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.AwsWafregionalRule))
	})
	return ret, err
}

// AwsWafregionalRules returns an object that can list and get AwsWafregionalRules.
func (s *awsWafregionalRuleLister) AwsWafregionalRules(namespace string) AwsWafregionalRuleNamespaceLister {
	return awsWafregionalRuleNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// AwsWafregionalRuleNamespaceLister helps list and get AwsWafregionalRules.
type AwsWafregionalRuleNamespaceLister interface {
	// List lists all AwsWafregionalRules in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1.AwsWafregionalRule, err error)
	// Get retrieves the AwsWafregionalRule from the indexer for a given namespace and name.
	Get(name string) (*v1.AwsWafregionalRule, error)
	AwsWafregionalRuleNamespaceListerExpansion
}

// awsWafregionalRuleNamespaceLister implements the AwsWafregionalRuleNamespaceLister
// interface.
type awsWafregionalRuleNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all AwsWafregionalRules in the indexer for a given namespace.
func (s awsWafregionalRuleNamespaceLister) List(selector labels.Selector) (ret []*v1.AwsWafregionalRule, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.AwsWafregionalRule))
	})
	return ret, err
}

// Get retrieves the AwsWafregionalRule from the indexer for a given namespace and name.
func (s awsWafregionalRuleNamespaceLister) Get(name string) (*v1.AwsWafregionalRule, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1.Resource("awswafregionalrule"), name)
	}
	return obj.(*v1.AwsWafregionalRule), nil
}
