/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1

import (
	v1 "github.com/trussle/terraform-operator/pkg/apis/aws/v1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// AwsRoute53RecordLister helps list AwsRoute53Records.
type AwsRoute53RecordLister interface {
	// List lists all AwsRoute53Records in the indexer.
	List(selector labels.Selector) (ret []*v1.AwsRoute53Record, err error)
	// AwsRoute53Records returns an object that can list and get AwsRoute53Records.
	AwsRoute53Records(namespace string) AwsRoute53RecordNamespaceLister
	AwsRoute53RecordListerExpansion
}

// awsRoute53RecordLister implements the AwsRoute53RecordLister interface.
type awsRoute53RecordLister struct {
	indexer cache.Indexer
}

// NewAwsRoute53RecordLister returns a new AwsRoute53RecordLister.
func NewAwsRoute53RecordLister(indexer cache.Indexer) AwsRoute53RecordLister {
	return &awsRoute53RecordLister{indexer: indexer}
}

// List lists all AwsRoute53Records in the indexer.
func (s *awsRoute53RecordLister) List(selector labels.Selector) (ret []*v1.AwsRoute53Record, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.AwsRoute53Record))
	})
	return ret, err
}

// AwsRoute53Records returns an object that can list and get AwsRoute53Records.
func (s *awsRoute53RecordLister) AwsRoute53Records(namespace string) AwsRoute53RecordNamespaceLister {
	return awsRoute53RecordNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// AwsRoute53RecordNamespaceLister helps list and get AwsRoute53Records.
type AwsRoute53RecordNamespaceLister interface {
	// List lists all AwsRoute53Records in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1.AwsRoute53Record, err error)
	// Get retrieves the AwsRoute53Record from the indexer for a given namespace and name.
	Get(name string) (*v1.AwsRoute53Record, error)
	AwsRoute53RecordNamespaceListerExpansion
}

// awsRoute53RecordNamespaceLister implements the AwsRoute53RecordNamespaceLister
// interface.
type awsRoute53RecordNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all AwsRoute53Records in the indexer for a given namespace.
func (s awsRoute53RecordNamespaceLister) List(selector labels.Selector) (ret []*v1.AwsRoute53Record, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.AwsRoute53Record))
	})
	return ret, err
}

// Get retrieves the AwsRoute53Record from the indexer for a given namespace and name.
func (s awsRoute53RecordNamespaceLister) Get(name string) (*v1.AwsRoute53Record, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1.Resource("awsroute53record"), name)
	}
	return obj.(*v1.AwsRoute53Record), nil
}
