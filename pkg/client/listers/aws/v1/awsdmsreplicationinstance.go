/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1

import (
	v1 "github.com/trussle/terraform-operator/pkg/apis/aws/v1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// AwsDmsReplicationInstanceLister helps list AwsDmsReplicationInstances.
type AwsDmsReplicationInstanceLister interface {
	// List lists all AwsDmsReplicationInstances in the indexer.
	List(selector labels.Selector) (ret []*v1.AwsDmsReplicationInstance, err error)
	// AwsDmsReplicationInstances returns an object that can list and get AwsDmsReplicationInstances.
	AwsDmsReplicationInstances(namespace string) AwsDmsReplicationInstanceNamespaceLister
	AwsDmsReplicationInstanceListerExpansion
}

// awsDmsReplicationInstanceLister implements the AwsDmsReplicationInstanceLister interface.
type awsDmsReplicationInstanceLister struct {
	indexer cache.Indexer
}

// NewAwsDmsReplicationInstanceLister returns a new AwsDmsReplicationInstanceLister.
func NewAwsDmsReplicationInstanceLister(indexer cache.Indexer) AwsDmsReplicationInstanceLister {
	return &awsDmsReplicationInstanceLister{indexer: indexer}
}

// List lists all AwsDmsReplicationInstances in the indexer.
func (s *awsDmsReplicationInstanceLister) List(selector labels.Selector) (ret []*v1.AwsDmsReplicationInstance, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.AwsDmsReplicationInstance))
	})
	return ret, err
}

// AwsDmsReplicationInstances returns an object that can list and get AwsDmsReplicationInstances.
func (s *awsDmsReplicationInstanceLister) AwsDmsReplicationInstances(namespace string) AwsDmsReplicationInstanceNamespaceLister {
	return awsDmsReplicationInstanceNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// AwsDmsReplicationInstanceNamespaceLister helps list and get AwsDmsReplicationInstances.
type AwsDmsReplicationInstanceNamespaceLister interface {
	// List lists all AwsDmsReplicationInstances in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1.AwsDmsReplicationInstance, err error)
	// Get retrieves the AwsDmsReplicationInstance from the indexer for a given namespace and name.
	Get(name string) (*v1.AwsDmsReplicationInstance, error)
	AwsDmsReplicationInstanceNamespaceListerExpansion
}

// awsDmsReplicationInstanceNamespaceLister implements the AwsDmsReplicationInstanceNamespaceLister
// interface.
type awsDmsReplicationInstanceNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all AwsDmsReplicationInstances in the indexer for a given namespace.
func (s awsDmsReplicationInstanceNamespaceLister) List(selector labels.Selector) (ret []*v1.AwsDmsReplicationInstance, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.AwsDmsReplicationInstance))
	})
	return ret, err
}

// Get retrieves the AwsDmsReplicationInstance from the indexer for a given namespace and name.
func (s awsDmsReplicationInstanceNamespaceLister) Get(name string) (*v1.AwsDmsReplicationInstance, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1.Resource("awsdmsreplicationinstance"), name)
	}
	return obj.(*v1.AwsDmsReplicationInstance), nil
}
