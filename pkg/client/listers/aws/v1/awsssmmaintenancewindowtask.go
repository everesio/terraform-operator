/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1

import (
	v1 "github.com/trussle/terraform-operator/pkg/apis/aws/v1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// AwsSsmMaintenanceWindowTaskLister helps list AwsSsmMaintenanceWindowTasks.
type AwsSsmMaintenanceWindowTaskLister interface {
	// List lists all AwsSsmMaintenanceWindowTasks in the indexer.
	List(selector labels.Selector) (ret []*v1.AwsSsmMaintenanceWindowTask, err error)
	// AwsSsmMaintenanceWindowTasks returns an object that can list and get AwsSsmMaintenanceWindowTasks.
	AwsSsmMaintenanceWindowTasks(namespace string) AwsSsmMaintenanceWindowTaskNamespaceLister
	AwsSsmMaintenanceWindowTaskListerExpansion
}

// awsSsmMaintenanceWindowTaskLister implements the AwsSsmMaintenanceWindowTaskLister interface.
type awsSsmMaintenanceWindowTaskLister struct {
	indexer cache.Indexer
}

// NewAwsSsmMaintenanceWindowTaskLister returns a new AwsSsmMaintenanceWindowTaskLister.
func NewAwsSsmMaintenanceWindowTaskLister(indexer cache.Indexer) AwsSsmMaintenanceWindowTaskLister {
	return &awsSsmMaintenanceWindowTaskLister{indexer: indexer}
}

// List lists all AwsSsmMaintenanceWindowTasks in the indexer.
func (s *awsSsmMaintenanceWindowTaskLister) List(selector labels.Selector) (ret []*v1.AwsSsmMaintenanceWindowTask, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.AwsSsmMaintenanceWindowTask))
	})
	return ret, err
}

// AwsSsmMaintenanceWindowTasks returns an object that can list and get AwsSsmMaintenanceWindowTasks.
func (s *awsSsmMaintenanceWindowTaskLister) AwsSsmMaintenanceWindowTasks(namespace string) AwsSsmMaintenanceWindowTaskNamespaceLister {
	return awsSsmMaintenanceWindowTaskNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// AwsSsmMaintenanceWindowTaskNamespaceLister helps list and get AwsSsmMaintenanceWindowTasks.
type AwsSsmMaintenanceWindowTaskNamespaceLister interface {
	// List lists all AwsSsmMaintenanceWindowTasks in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1.AwsSsmMaintenanceWindowTask, err error)
	// Get retrieves the AwsSsmMaintenanceWindowTask from the indexer for a given namespace and name.
	Get(name string) (*v1.AwsSsmMaintenanceWindowTask, error)
	AwsSsmMaintenanceWindowTaskNamespaceListerExpansion
}

// awsSsmMaintenanceWindowTaskNamespaceLister implements the AwsSsmMaintenanceWindowTaskNamespaceLister
// interface.
type awsSsmMaintenanceWindowTaskNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all AwsSsmMaintenanceWindowTasks in the indexer for a given namespace.
func (s awsSsmMaintenanceWindowTaskNamespaceLister) List(selector labels.Selector) (ret []*v1.AwsSsmMaintenanceWindowTask, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.AwsSsmMaintenanceWindowTask))
	})
	return ret, err
}

// Get retrieves the AwsSsmMaintenanceWindowTask from the indexer for a given namespace and name.
func (s awsSsmMaintenanceWindowTaskNamespaceLister) Get(name string) (*v1.AwsSsmMaintenanceWindowTask, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1.Resource("awsssmmaintenancewindowtask"), name)
	}
	return obj.(*v1.AwsSsmMaintenanceWindowTask), nil
}
