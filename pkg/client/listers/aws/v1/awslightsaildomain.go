/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1

import (
	v1 "github.com/trussle/terraform-operator/pkg/apis/aws/v1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// AwsLightsailDomainLister helps list AwsLightsailDomains.
type AwsLightsailDomainLister interface {
	// List lists all AwsLightsailDomains in the indexer.
	List(selector labels.Selector) (ret []*v1.AwsLightsailDomain, err error)
	// AwsLightsailDomains returns an object that can list and get AwsLightsailDomains.
	AwsLightsailDomains(namespace string) AwsLightsailDomainNamespaceLister
	AwsLightsailDomainListerExpansion
}

// awsLightsailDomainLister implements the AwsLightsailDomainLister interface.
type awsLightsailDomainLister struct {
	indexer cache.Indexer
}

// NewAwsLightsailDomainLister returns a new AwsLightsailDomainLister.
func NewAwsLightsailDomainLister(indexer cache.Indexer) AwsLightsailDomainLister {
	return &awsLightsailDomainLister{indexer: indexer}
}

// List lists all AwsLightsailDomains in the indexer.
func (s *awsLightsailDomainLister) List(selector labels.Selector) (ret []*v1.AwsLightsailDomain, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.AwsLightsailDomain))
	})
	return ret, err
}

// AwsLightsailDomains returns an object that can list and get AwsLightsailDomains.
func (s *awsLightsailDomainLister) AwsLightsailDomains(namespace string) AwsLightsailDomainNamespaceLister {
	return awsLightsailDomainNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// AwsLightsailDomainNamespaceLister helps list and get AwsLightsailDomains.
type AwsLightsailDomainNamespaceLister interface {
	// List lists all AwsLightsailDomains in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1.AwsLightsailDomain, err error)
	// Get retrieves the AwsLightsailDomain from the indexer for a given namespace and name.
	Get(name string) (*v1.AwsLightsailDomain, error)
	AwsLightsailDomainNamespaceListerExpansion
}

// awsLightsailDomainNamespaceLister implements the AwsLightsailDomainNamespaceLister
// interface.
type awsLightsailDomainNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all AwsLightsailDomains in the indexer for a given namespace.
func (s awsLightsailDomainNamespaceLister) List(selector labels.Selector) (ret []*v1.AwsLightsailDomain, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.AwsLightsailDomain))
	})
	return ret, err
}

// Get retrieves the AwsLightsailDomain from the indexer for a given namespace and name.
func (s awsLightsailDomainNamespaceLister) Get(name string) (*v1.AwsLightsailDomain, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1.Resource("awslightsaildomain"), name)
	}
	return obj.(*v1.AwsLightsailDomain), nil
}
