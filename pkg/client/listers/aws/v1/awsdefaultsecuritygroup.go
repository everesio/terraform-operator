/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1

import (
	v1 "github.com/trussle/terraform-operator/pkg/apis/aws/v1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// AwsDefaultSecurityGroupLister helps list AwsDefaultSecurityGroups.
type AwsDefaultSecurityGroupLister interface {
	// List lists all AwsDefaultSecurityGroups in the indexer.
	List(selector labels.Selector) (ret []*v1.AwsDefaultSecurityGroup, err error)
	// AwsDefaultSecurityGroups returns an object that can list and get AwsDefaultSecurityGroups.
	AwsDefaultSecurityGroups(namespace string) AwsDefaultSecurityGroupNamespaceLister
	AwsDefaultSecurityGroupListerExpansion
}

// awsDefaultSecurityGroupLister implements the AwsDefaultSecurityGroupLister interface.
type awsDefaultSecurityGroupLister struct {
	indexer cache.Indexer
}

// NewAwsDefaultSecurityGroupLister returns a new AwsDefaultSecurityGroupLister.
func NewAwsDefaultSecurityGroupLister(indexer cache.Indexer) AwsDefaultSecurityGroupLister {
	return &awsDefaultSecurityGroupLister{indexer: indexer}
}

// List lists all AwsDefaultSecurityGroups in the indexer.
func (s *awsDefaultSecurityGroupLister) List(selector labels.Selector) (ret []*v1.AwsDefaultSecurityGroup, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.AwsDefaultSecurityGroup))
	})
	return ret, err
}

// AwsDefaultSecurityGroups returns an object that can list and get AwsDefaultSecurityGroups.
func (s *awsDefaultSecurityGroupLister) AwsDefaultSecurityGroups(namespace string) AwsDefaultSecurityGroupNamespaceLister {
	return awsDefaultSecurityGroupNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// AwsDefaultSecurityGroupNamespaceLister helps list and get AwsDefaultSecurityGroups.
type AwsDefaultSecurityGroupNamespaceLister interface {
	// List lists all AwsDefaultSecurityGroups in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1.AwsDefaultSecurityGroup, err error)
	// Get retrieves the AwsDefaultSecurityGroup from the indexer for a given namespace and name.
	Get(name string) (*v1.AwsDefaultSecurityGroup, error)
	AwsDefaultSecurityGroupNamespaceListerExpansion
}

// awsDefaultSecurityGroupNamespaceLister implements the AwsDefaultSecurityGroupNamespaceLister
// interface.
type awsDefaultSecurityGroupNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all AwsDefaultSecurityGroups in the indexer for a given namespace.
func (s awsDefaultSecurityGroupNamespaceLister) List(selector labels.Selector) (ret []*v1.AwsDefaultSecurityGroup, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.AwsDefaultSecurityGroup))
	})
	return ret, err
}

// Get retrieves the AwsDefaultSecurityGroup from the indexer for a given namespace and name.
func (s awsDefaultSecurityGroupNamespaceLister) Get(name string) (*v1.AwsDefaultSecurityGroup, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1.Resource("awsdefaultsecuritygroup"), name)
	}
	return obj.(*v1.AwsDefaultSecurityGroup), nil
}
