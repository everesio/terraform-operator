/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1

import (
	v1 "github.com/trussle/terraform-operator/pkg/apis/aws/v1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// AwsAlbTargetGroupAttachmentLister helps list AwsAlbTargetGroupAttachments.
type AwsAlbTargetGroupAttachmentLister interface {
	// List lists all AwsAlbTargetGroupAttachments in the indexer.
	List(selector labels.Selector) (ret []*v1.AwsAlbTargetGroupAttachment, err error)
	// AwsAlbTargetGroupAttachments returns an object that can list and get AwsAlbTargetGroupAttachments.
	AwsAlbTargetGroupAttachments(namespace string) AwsAlbTargetGroupAttachmentNamespaceLister
	AwsAlbTargetGroupAttachmentListerExpansion
}

// awsAlbTargetGroupAttachmentLister implements the AwsAlbTargetGroupAttachmentLister interface.
type awsAlbTargetGroupAttachmentLister struct {
	indexer cache.Indexer
}

// NewAwsAlbTargetGroupAttachmentLister returns a new AwsAlbTargetGroupAttachmentLister.
func NewAwsAlbTargetGroupAttachmentLister(indexer cache.Indexer) AwsAlbTargetGroupAttachmentLister {
	return &awsAlbTargetGroupAttachmentLister{indexer: indexer}
}

// List lists all AwsAlbTargetGroupAttachments in the indexer.
func (s *awsAlbTargetGroupAttachmentLister) List(selector labels.Selector) (ret []*v1.AwsAlbTargetGroupAttachment, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.AwsAlbTargetGroupAttachment))
	})
	return ret, err
}

// AwsAlbTargetGroupAttachments returns an object that can list and get AwsAlbTargetGroupAttachments.
func (s *awsAlbTargetGroupAttachmentLister) AwsAlbTargetGroupAttachments(namespace string) AwsAlbTargetGroupAttachmentNamespaceLister {
	return awsAlbTargetGroupAttachmentNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// AwsAlbTargetGroupAttachmentNamespaceLister helps list and get AwsAlbTargetGroupAttachments.
type AwsAlbTargetGroupAttachmentNamespaceLister interface {
	// List lists all AwsAlbTargetGroupAttachments in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1.AwsAlbTargetGroupAttachment, err error)
	// Get retrieves the AwsAlbTargetGroupAttachment from the indexer for a given namespace and name.
	Get(name string) (*v1.AwsAlbTargetGroupAttachment, error)
	AwsAlbTargetGroupAttachmentNamespaceListerExpansion
}

// awsAlbTargetGroupAttachmentNamespaceLister implements the AwsAlbTargetGroupAttachmentNamespaceLister
// interface.
type awsAlbTargetGroupAttachmentNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all AwsAlbTargetGroupAttachments in the indexer for a given namespace.
func (s awsAlbTargetGroupAttachmentNamespaceLister) List(selector labels.Selector) (ret []*v1.AwsAlbTargetGroupAttachment, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.AwsAlbTargetGroupAttachment))
	})
	return ret, err
}

// Get retrieves the AwsAlbTargetGroupAttachment from the indexer for a given namespace and name.
func (s awsAlbTargetGroupAttachmentNamespaceLister) Get(name string) (*v1.AwsAlbTargetGroupAttachment, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1.Resource("awsalbtargetgroupattachment"), name)
	}
	return obj.(*v1.AwsAlbTargetGroupAttachment), nil
}
