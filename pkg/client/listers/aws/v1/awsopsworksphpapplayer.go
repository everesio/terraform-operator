/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1

import (
	v1 "github.com/trussle/terraform-operator/pkg/apis/aws/v1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// AwsOpsworksPhpAppLayerLister helps list AwsOpsworksPhpAppLayers.
type AwsOpsworksPhpAppLayerLister interface {
	// List lists all AwsOpsworksPhpAppLayers in the indexer.
	List(selector labels.Selector) (ret []*v1.AwsOpsworksPhpAppLayer, err error)
	// AwsOpsworksPhpAppLayers returns an object that can list and get AwsOpsworksPhpAppLayers.
	AwsOpsworksPhpAppLayers(namespace string) AwsOpsworksPhpAppLayerNamespaceLister
	AwsOpsworksPhpAppLayerListerExpansion
}

// awsOpsworksPhpAppLayerLister implements the AwsOpsworksPhpAppLayerLister interface.
type awsOpsworksPhpAppLayerLister struct {
	indexer cache.Indexer
}

// NewAwsOpsworksPhpAppLayerLister returns a new AwsOpsworksPhpAppLayerLister.
func NewAwsOpsworksPhpAppLayerLister(indexer cache.Indexer) AwsOpsworksPhpAppLayerLister {
	return &awsOpsworksPhpAppLayerLister{indexer: indexer}
}

// List lists all AwsOpsworksPhpAppLayers in the indexer.
func (s *awsOpsworksPhpAppLayerLister) List(selector labels.Selector) (ret []*v1.AwsOpsworksPhpAppLayer, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.AwsOpsworksPhpAppLayer))
	})
	return ret, err
}

// AwsOpsworksPhpAppLayers returns an object that can list and get AwsOpsworksPhpAppLayers.
func (s *awsOpsworksPhpAppLayerLister) AwsOpsworksPhpAppLayers(namespace string) AwsOpsworksPhpAppLayerNamespaceLister {
	return awsOpsworksPhpAppLayerNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// AwsOpsworksPhpAppLayerNamespaceLister helps list and get AwsOpsworksPhpAppLayers.
type AwsOpsworksPhpAppLayerNamespaceLister interface {
	// List lists all AwsOpsworksPhpAppLayers in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1.AwsOpsworksPhpAppLayer, err error)
	// Get retrieves the AwsOpsworksPhpAppLayer from the indexer for a given namespace and name.
	Get(name string) (*v1.AwsOpsworksPhpAppLayer, error)
	AwsOpsworksPhpAppLayerNamespaceListerExpansion
}

// awsOpsworksPhpAppLayerNamespaceLister implements the AwsOpsworksPhpAppLayerNamespaceLister
// interface.
type awsOpsworksPhpAppLayerNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all AwsOpsworksPhpAppLayers in the indexer for a given namespace.
func (s awsOpsworksPhpAppLayerNamespaceLister) List(selector labels.Selector) (ret []*v1.AwsOpsworksPhpAppLayer, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.AwsOpsworksPhpAppLayer))
	})
	return ret, err
}

// Get retrieves the AwsOpsworksPhpAppLayer from the indexer for a given namespace and name.
func (s awsOpsworksPhpAppLayerNamespaceLister) Get(name string) (*v1.AwsOpsworksPhpAppLayer, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1.Resource("awsopsworksphpapplayer"), name)
	}
	return obj.(*v1.AwsOpsworksPhpAppLayer), nil
}
