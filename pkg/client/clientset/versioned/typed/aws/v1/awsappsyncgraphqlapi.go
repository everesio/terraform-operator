/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by client-gen. DO NOT EDIT.

package v1

import (
	v1 "github.com/trussle/terraform-operator/pkg/apis/aws/v1"
	scheme "github.com/trussle/terraform-operator/pkg/client/clientset/versioned/scheme"
	meta_v1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	types "k8s.io/apimachinery/pkg/types"
	watch "k8s.io/apimachinery/pkg/watch"
	rest "k8s.io/client-go/rest"
)

// AwsAppsyncGraphqlApisGetter has a method to return a AwsAppsyncGraphqlApiInterface.
// A group's client should implement this interface.
type AwsAppsyncGraphqlApisGetter interface {
	AwsAppsyncGraphqlApis(namespace string) AwsAppsyncGraphqlApiInterface
}

// AwsAppsyncGraphqlApiInterface has methods to work with AwsAppsyncGraphqlApi resources.
type AwsAppsyncGraphqlApiInterface interface {
	Create(*v1.AwsAppsyncGraphqlApi) (*v1.AwsAppsyncGraphqlApi, error)
	Update(*v1.AwsAppsyncGraphqlApi) (*v1.AwsAppsyncGraphqlApi, error)
	Delete(name string, options *meta_v1.DeleteOptions) error
	DeleteCollection(options *meta_v1.DeleteOptions, listOptions meta_v1.ListOptions) error
	Get(name string, options meta_v1.GetOptions) (*v1.AwsAppsyncGraphqlApi, error)
	List(opts meta_v1.ListOptions) (*v1.AwsAppsyncGraphqlApiList, error)
	Watch(opts meta_v1.ListOptions) (watch.Interface, error)
	Patch(name string, pt types.PatchType, data []byte, subresources ...string) (result *v1.AwsAppsyncGraphqlApi, err error)
	AwsAppsyncGraphqlApiExpansion
}

// awsAppsyncGraphqlApis implements AwsAppsyncGraphqlApiInterface
type awsAppsyncGraphqlApis struct {
	client rest.Interface
	ns     string
}

// newAwsAppsyncGraphqlApis returns a AwsAppsyncGraphqlApis
func newAwsAppsyncGraphqlApis(c *TrussleV1Client, namespace string) *awsAppsyncGraphqlApis {
	return &awsAppsyncGraphqlApis{
		client: c.RESTClient(),
		ns:     namespace,
	}
}

// Get takes name of the awsAppsyncGraphqlApi, and returns the corresponding awsAppsyncGraphqlApi object, and an error if there is any.
func (c *awsAppsyncGraphqlApis) Get(name string, options meta_v1.GetOptions) (result *v1.AwsAppsyncGraphqlApi, err error) {
	result = &v1.AwsAppsyncGraphqlApi{}
	err = c.client.Get().
		Namespace(c.ns).
		Resource("awsappsyncgraphqlapis").
		Name(name).
		VersionedParams(&options, scheme.ParameterCodec).
		Do().
		Into(result)
	return
}

// List takes label and field selectors, and returns the list of AwsAppsyncGraphqlApis that match those selectors.
func (c *awsAppsyncGraphqlApis) List(opts meta_v1.ListOptions) (result *v1.AwsAppsyncGraphqlApiList, err error) {
	result = &v1.AwsAppsyncGraphqlApiList{}
	err = c.client.Get().
		Namespace(c.ns).
		Resource("awsappsyncgraphqlapis").
		VersionedParams(&opts, scheme.ParameterCodec).
		Do().
		Into(result)
	return
}

// Watch returns a watch.Interface that watches the requested awsAppsyncGraphqlApis.
func (c *awsAppsyncGraphqlApis) Watch(opts meta_v1.ListOptions) (watch.Interface, error) {
	opts.Watch = true
	return c.client.Get().
		Namespace(c.ns).
		Resource("awsappsyncgraphqlapis").
		VersionedParams(&opts, scheme.ParameterCodec).
		Watch()
}

// Create takes the representation of a awsAppsyncGraphqlApi and creates it.  Returns the server's representation of the awsAppsyncGraphqlApi, and an error, if there is any.
func (c *awsAppsyncGraphqlApis) Create(awsAppsyncGraphqlApi *v1.AwsAppsyncGraphqlApi) (result *v1.AwsAppsyncGraphqlApi, err error) {
	result = &v1.AwsAppsyncGraphqlApi{}
	err = c.client.Post().
		Namespace(c.ns).
		Resource("awsappsyncgraphqlapis").
		Body(awsAppsyncGraphqlApi).
		Do().
		Into(result)
	return
}

// Update takes the representation of a awsAppsyncGraphqlApi and updates it. Returns the server's representation of the awsAppsyncGraphqlApi, and an error, if there is any.
func (c *awsAppsyncGraphqlApis) Update(awsAppsyncGraphqlApi *v1.AwsAppsyncGraphqlApi) (result *v1.AwsAppsyncGraphqlApi, err error) {
	result = &v1.AwsAppsyncGraphqlApi{}
	err = c.client.Put().
		Namespace(c.ns).
		Resource("awsappsyncgraphqlapis").
		Name(awsAppsyncGraphqlApi.Name).
		Body(awsAppsyncGraphqlApi).
		Do().
		Into(result)
	return
}

// Delete takes name of the awsAppsyncGraphqlApi and deletes it. Returns an error if one occurs.
func (c *awsAppsyncGraphqlApis) Delete(name string, options *meta_v1.DeleteOptions) error {
	return c.client.Delete().
		Namespace(c.ns).
		Resource("awsappsyncgraphqlapis").
		Name(name).
		Body(options).
		Do().
		Error()
}

// DeleteCollection deletes a collection of objects.
func (c *awsAppsyncGraphqlApis) DeleteCollection(options *meta_v1.DeleteOptions, listOptions meta_v1.ListOptions) error {
	return c.client.Delete().
		Namespace(c.ns).
		Resource("awsappsyncgraphqlapis").
		VersionedParams(&listOptions, scheme.ParameterCodec).
		Body(options).
		Do().
		Error()
}

// Patch applies the patch and returns the patched awsAppsyncGraphqlApi.
func (c *awsAppsyncGraphqlApis) Patch(name string, pt types.PatchType, data []byte, subresources ...string) (result *v1.AwsAppsyncGraphqlApi, err error) {
	result = &v1.AwsAppsyncGraphqlApi{}
	err = c.client.Patch(pt).
		Namespace(c.ns).
		Resource("awsappsyncgraphqlapis").
		SubResource(subresources...).
		Name(name).
		Body(data).
		Do().
		Into(result)
	return
}
