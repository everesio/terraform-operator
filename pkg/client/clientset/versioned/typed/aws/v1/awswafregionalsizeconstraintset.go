/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by client-gen. DO NOT EDIT.

package v1

import (
	v1 "github.com/trussle/terraform-operator/pkg/apis/aws/v1"
	scheme "github.com/trussle/terraform-operator/pkg/client/clientset/versioned/scheme"
	meta_v1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	types "k8s.io/apimachinery/pkg/types"
	watch "k8s.io/apimachinery/pkg/watch"
	rest "k8s.io/client-go/rest"
)

// AwsWafregionalSizeConstraintSetsGetter has a method to return a AwsWafregionalSizeConstraintSetInterface.
// A group's client should implement this interface.
type AwsWafregionalSizeConstraintSetsGetter interface {
	AwsWafregionalSizeConstraintSets(namespace string) AwsWafregionalSizeConstraintSetInterface
}

// AwsWafregionalSizeConstraintSetInterface has methods to work with AwsWafregionalSizeConstraintSet resources.
type AwsWafregionalSizeConstraintSetInterface interface {
	Create(*v1.AwsWafregionalSizeConstraintSet) (*v1.AwsWafregionalSizeConstraintSet, error)
	Update(*v1.AwsWafregionalSizeConstraintSet) (*v1.AwsWafregionalSizeConstraintSet, error)
	Delete(name string, options *meta_v1.DeleteOptions) error
	DeleteCollection(options *meta_v1.DeleteOptions, listOptions meta_v1.ListOptions) error
	Get(name string, options meta_v1.GetOptions) (*v1.AwsWafregionalSizeConstraintSet, error)
	List(opts meta_v1.ListOptions) (*v1.AwsWafregionalSizeConstraintSetList, error)
	Watch(opts meta_v1.ListOptions) (watch.Interface, error)
	Patch(name string, pt types.PatchType, data []byte, subresources ...string) (result *v1.AwsWafregionalSizeConstraintSet, err error)
	AwsWafregionalSizeConstraintSetExpansion
}

// awsWafregionalSizeConstraintSets implements AwsWafregionalSizeConstraintSetInterface
type awsWafregionalSizeConstraintSets struct {
	client rest.Interface
	ns     string
}

// newAwsWafregionalSizeConstraintSets returns a AwsWafregionalSizeConstraintSets
func newAwsWafregionalSizeConstraintSets(c *TrussleV1Client, namespace string) *awsWafregionalSizeConstraintSets {
	return &awsWafregionalSizeConstraintSets{
		client: c.RESTClient(),
		ns:     namespace,
	}
}

// Get takes name of the awsWafregionalSizeConstraintSet, and returns the corresponding awsWafregionalSizeConstraintSet object, and an error if there is any.
func (c *awsWafregionalSizeConstraintSets) Get(name string, options meta_v1.GetOptions) (result *v1.AwsWafregionalSizeConstraintSet, err error) {
	result = &v1.AwsWafregionalSizeConstraintSet{}
	err = c.client.Get().
		Namespace(c.ns).
		Resource("awswafregionalsizeconstraintsets").
		Name(name).
		VersionedParams(&options, scheme.ParameterCodec).
		Do().
		Into(result)
	return
}

// List takes label and field selectors, and returns the list of AwsWafregionalSizeConstraintSets that match those selectors.
func (c *awsWafregionalSizeConstraintSets) List(opts meta_v1.ListOptions) (result *v1.AwsWafregionalSizeConstraintSetList, err error) {
	result = &v1.AwsWafregionalSizeConstraintSetList{}
	err = c.client.Get().
		Namespace(c.ns).
		Resource("awswafregionalsizeconstraintsets").
		VersionedParams(&opts, scheme.ParameterCodec).
		Do().
		Into(result)
	return
}

// Watch returns a watch.Interface that watches the requested awsWafregionalSizeConstraintSets.
func (c *awsWafregionalSizeConstraintSets) Watch(opts meta_v1.ListOptions) (watch.Interface, error) {
	opts.Watch = true
	return c.client.Get().
		Namespace(c.ns).
		Resource("awswafregionalsizeconstraintsets").
		VersionedParams(&opts, scheme.ParameterCodec).
		Watch()
}

// Create takes the representation of a awsWafregionalSizeConstraintSet and creates it.  Returns the server's representation of the awsWafregionalSizeConstraintSet, and an error, if there is any.
func (c *awsWafregionalSizeConstraintSets) Create(awsWafregionalSizeConstraintSet *v1.AwsWafregionalSizeConstraintSet) (result *v1.AwsWafregionalSizeConstraintSet, err error) {
	result = &v1.AwsWafregionalSizeConstraintSet{}
	err = c.client.Post().
		Namespace(c.ns).
		Resource("awswafregionalsizeconstraintsets").
		Body(awsWafregionalSizeConstraintSet).
		Do().
		Into(result)
	return
}

// Update takes the representation of a awsWafregionalSizeConstraintSet and updates it. Returns the server's representation of the awsWafregionalSizeConstraintSet, and an error, if there is any.
func (c *awsWafregionalSizeConstraintSets) Update(awsWafregionalSizeConstraintSet *v1.AwsWafregionalSizeConstraintSet) (result *v1.AwsWafregionalSizeConstraintSet, err error) {
	result = &v1.AwsWafregionalSizeConstraintSet{}
	err = c.client.Put().
		Namespace(c.ns).
		Resource("awswafregionalsizeconstraintsets").
		Name(awsWafregionalSizeConstraintSet.Name).
		Body(awsWafregionalSizeConstraintSet).
		Do().
		Into(result)
	return
}

// Delete takes name of the awsWafregionalSizeConstraintSet and deletes it. Returns an error if one occurs.
func (c *awsWafregionalSizeConstraintSets) Delete(name string, options *meta_v1.DeleteOptions) error {
	return c.client.Delete().
		Namespace(c.ns).
		Resource("awswafregionalsizeconstraintsets").
		Name(name).
		Body(options).
		Do().
		Error()
}

// DeleteCollection deletes a collection of objects.
func (c *awsWafregionalSizeConstraintSets) DeleteCollection(options *meta_v1.DeleteOptions, listOptions meta_v1.ListOptions) error {
	return c.client.Delete().
		Namespace(c.ns).
		Resource("awswafregionalsizeconstraintsets").
		VersionedParams(&listOptions, scheme.ParameterCodec).
		Body(options).
		Do().
		Error()
}

// Patch applies the patch and returns the patched awsWafregionalSizeConstraintSet.
func (c *awsWafregionalSizeConstraintSets) Patch(name string, pt types.PatchType, data []byte, subresources ...string) (result *v1.AwsWafregionalSizeConstraintSet, err error) {
	result = &v1.AwsWafregionalSizeConstraintSet{}
	err = c.client.Patch(pt).
		Namespace(c.ns).
		Resource("awswafregionalsizeconstraintsets").
		SubResource(subresources...).
		Name(name).
		Body(data).
		Do().
		Into(result)
	return
}
